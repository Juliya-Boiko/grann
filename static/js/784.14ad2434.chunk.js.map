{"version":3,"file":"static/js/784.14ad2434.chunk.js","mappings":"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","sources":["../node_modules/@babel/runtime/helpers/esm/superPropBase.js","../node_modules/@babel/runtime/helpers/esm/get.js","../node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","../node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","../node_modules/framer-motion/dist/es/context/MotionConfigContext.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/index.mjs","../node_modules/framer-motion/dist/es/context/PresenceContext.mjs","../node_modules/framer-motion/dist/es/utils/is-browser.mjs","../node_modules/framer-motion/dist/es/utils/use-isomorphic-effect.mjs","../node_modules/framer-motion/dist/es/context/LazyContext.mjs","../node_modules/framer-motion/dist/es/utils/is-ref-object.mjs","../node_modules/framer-motion/dist/es/render/utils/is-variant-label.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animation-controls.mjs","../node_modules/framer-motion/dist/es/render/utils/variant-props.mjs","../node_modules/framer-motion/dist/es/render/utils/is-controlling-variants.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/create.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/utils.mjs","../node_modules/framer-motion/dist/es/motion/features/definitions.mjs","../node_modules/framer-motion/dist/es/context/LayoutGroupContext.mjs","../node_modules/framer-motion/dist/es/context/SwitchLayoutGroupContext.mjs","../node_modules/framer-motion/dist/es/motion/utils/symbol.mjs","../node_modules/framer-motion/dist/es/motion/index.mjs","../node_modules/framer-motion/dist/es/motion/features/load-features.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-element.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-motion-ref.mjs","../node_modules/framer-motion/dist/es/render/dom/motion-proxy.mjs","../node_modules/framer-motion/dist/es/render/svg/lowercase-elements.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-component.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-correction.mjs","../node_modules/framer-motion/dist/es/render/html/utils/transform.mjs","../node_modules/framer-motion/dist/es/motion/utils/is-forced-motion-value.mjs","../node_modules/framer-motion/dist/es/value/utils/is-motion-value.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-transform.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-css-variable.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/get-as-type.mjs","../node_modules/framer-motion/dist/es/utils/clamp.mjs","../node_modules/framer-motion/dist/es/value/types/numbers/index.mjs","../node_modules/framer-motion/dist/es/value/types/utils.mjs","../node_modules/framer-motion/dist/es/value/types/numbers/units.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-int.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/number.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-styles.mjs","../node_modules/framer-motion/dist/es/render/html/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/html/use-props.mjs","../node_modules/framer-motion/dist/es/motion/utils/valid-prop.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/filter-props.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/transform-origin.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/path.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/build-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/is-svg-tag.mjs","../node_modules/framer-motion/dist/es/render/svg/use-props.mjs","../node_modules/framer-motion/dist/es/render/dom/use-render.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/camel-to-dash.mjs","../node_modules/framer-motion/dist/es/render/html/utils/render.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/camel-case-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/render.mjs","../node_modules/framer-motion/dist/es/render/html/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-variants.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-keyframes-target.mjs","../node_modules/framer-motion/dist/es/value/utils/resolve-motion-value.mjs","../node_modules/framer-motion/dist/es/utils/resolve-value.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-state.mjs","../node_modules/framer-motion/dist/es/utils/use-constant.mjs","../node_modules/framer-motion/dist/es/render/svg/config-motion.mjs","../node_modules/framer-motion/dist/es/render/html/config-motion.mjs","../node_modules/framer-motion/dist/es/events/add-dom-event.mjs","../node_modules/framer-motion/dist/es/events/utils/is-primary-pointer.mjs","../node_modules/framer-motion/dist/es/events/event-info.mjs","../node_modules/framer-motion/dist/es/events/add-pointer-event.mjs","../node_modules/framer-motion/dist/es/utils/pipe.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/lock.mjs","../node_modules/framer-motion/dist/es/motion/features/Feature.mjs","../node_modules/framer-motion/dist/es/frameloop/data.mjs","../node_modules/framer-motion/dist/es/frameloop/index.mjs","../node_modules/framer-motion/dist/es/frameloop/create-render-step.mjs","../node_modules/framer-motion/dist/es/gestures/hover.mjs","../node_modules/framer-motion/dist/es/gestures/focus.mjs","../node_modules/framer-motion/dist/es/gestures/utils/is-node-or-child.mjs","../node_modules/framer-motion/dist/es/utils/noop.mjs","../node_modules/framer-motion/dist/es/gestures/press.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/observers.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/index.mjs","../node_modules/framer-motion/dist/es/motion/features/gestures.mjs","../node_modules/framer-motion/dist/es/utils/shallow-compare.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-dynamic-variants.mjs","../node_modules/framer-motion/dist/es/animation/optimized-appear/data-id.mjs","../node_modules/framer-motion/dist/es/utils/errors.mjs","../node_modules/framer-motion/dist/es/utils/time-conversion.mjs","../node_modules/framer-motion/dist/es/utils/use-instant-transition-state.mjs","../node_modules/framer-motion/dist/es/easing/utils/is-bezier-definition.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/easing.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/supports.mjs","../node_modules/framer-motion/dist/es/easing/cubic-bezier.mjs","../node_modules/framer-motion/dist/es/easing/ease.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/mirror.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/reverse.mjs","../node_modules/framer-motion/dist/es/easing/circ.mjs","../node_modules/framer-motion/dist/es/easing/back.mjs","../node_modules/framer-motion/dist/es/easing/utils/map.mjs","../node_modules/framer-motion/dist/es/easing/anticipate.mjs","../node_modules/framer-motion/dist/es/value/types/color/utils.mjs","../node_modules/framer-motion/dist/es/value/types/color/rgba.mjs","../node_modules/framer-motion/dist/es/value/types/color/hex.mjs","../node_modules/framer-motion/dist/es/value/types/color/hsla.mjs","../node_modules/framer-motion/dist/es/value/types/color/index.mjs","../node_modules/framer-motion/dist/es/utils/mix.mjs","../node_modules/framer-motion/dist/es/utils/hsla-to-rgba.mjs","../node_modules/framer-motion/dist/es/utils/mix-color.mjs","../node_modules/framer-motion/dist/es/value/types/complex/index.mjs","../node_modules/framer-motion/dist/es/utils/mix-complex.mjs","../node_modules/framer-motion/dist/es/utils/progress.mjs","../node_modules/framer-motion/dist/es/utils/interpolate.mjs","../node_modules/framer-motion/dist/es/utils/offsets/default.mjs","../node_modules/framer-motion/dist/es/utils/offsets/fill.mjs","../node_modules/framer-motion/dist/es/animation/generators/keyframes.mjs","../node_modules/framer-motion/dist/es/easing/utils/is-easing-array.mjs","../node_modules/framer-motion/dist/es/utils/offsets/time.mjs","../node_modules/framer-motion/dist/es/utils/velocity-per-second.mjs","../node_modules/framer-motion/dist/es/animation/generators/utils/velocity.mjs","../node_modules/framer-motion/dist/es/animation/generators/spring/find.mjs","../node_modules/framer-motion/dist/es/animation/generators/spring/index.mjs","../node_modules/framer-motion/dist/es/animation/generators/inertia.mjs","../node_modules/framer-motion/dist/es/animation/animators/js/driver-frameloop.mjs","../node_modules/framer-motion/dist/es/animation/generators/utils/calc-duration.mjs","../node_modules/framer-motion/dist/es/animation/animators/js/index.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/create-accelerated-animation.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/index.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/utils/get-final-keyframe.mjs","../node_modules/framer-motion/dist/es/animation/animators/instant.mjs","../node_modules/framer-motion/dist/es/animation/utils/default-transitions.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animatable.mjs","../node_modules/framer-motion/dist/es/value/types/complex/filter.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/defaults.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/animatable-none.mjs","../node_modules/framer-motion/dist/es/utils/is-zero-value-string.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-none.mjs","../node_modules/framer-motion/dist/es/animation/utils/keyframes.mjs","../node_modules/framer-motion/dist/es/animation/utils/transitions.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/motion-value.mjs","../node_modules/framer-motion/dist/es/value/use-will-change/is.mjs","../node_modules/framer-motion/dist/es/utils/array.mjs","../node_modules/framer-motion/dist/es/utils/subscription-manager.mjs","../node_modules/framer-motion/dist/es/value/index.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/test.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/dimensions.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-auto.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/find.mjs","../node_modules/framer-motion/dist/es/render/utils/setters.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-target.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-variant.mjs","../node_modules/framer-motion/dist/es/render/utils/animation-state.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element.mjs","../node_modules/framer-motion/dist/es/motion/features/animation/index.mjs","../node_modules/framer-motion/dist/es/motion/features/animation/exit.mjs","../node_modules/framer-motion/dist/es/motion/features/animations.mjs","../node_modules/framer-motion/dist/es/utils/distance.mjs","../node_modules/framer-motion/dist/es/gestures/pan/PanSession.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-calc.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/constraints.mjs","../node_modules/framer-motion/dist/es/projection/utils/each-axis.mjs","../node_modules/framer-motion/dist/es/projection/geometry/conversion.mjs","../node_modules/framer-motion/dist/es/projection/utils/has-transform.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-apply.mjs","../node_modules/framer-motion/dist/es/projection/utils/measure.mjs","../node_modules/framer-motion/dist/es/gestures/drag/VisualElementDragControls.mjs","../node_modules/framer-motion/dist/es/projection/geometry/models.mjs","../node_modules/framer-motion/dist/es/gestures/drag/index.mjs","../node_modules/framer-motion/dist/es/gestures/pan/index.mjs","../node_modules/framer-motion/dist/es/projection/node/state.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-border-radius.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-box-shadow.mjs","../node_modules/framer-motion/dist/es/motion/features/layout/MeasureLayout.mjs","../node_modules/framer-motion/dist/es/components/AnimatePresence/use-presence.mjs","../node_modules/framer-motion/dist/es/projection/animation/mix-values.mjs","../node_modules/framer-motion/dist/es/projection/geometry/copy.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-remove.mjs","../node_modules/framer-motion/dist/es/projection/geometry/utils.mjs","../node_modules/framer-motion/dist/es/projection/shared/stack.mjs","../node_modules/framer-motion/dist/es/projection/styles/transform.mjs","../node_modules/framer-motion/dist/es/render/utils/compare-by-depth.mjs","../node_modules/framer-motion/dist/es/render/utils/flat-tree.mjs","../node_modules/framer-motion/dist/es/utils/delay.mjs","../node_modules/framer-motion/dist/es/debug/record.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-element.mjs","../node_modules/framer-motion/dist/es/projection/node/create-projection-node.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/single-value.mjs","../node_modules/framer-motion/dist/es/projection/node/DocumentProjectionNode.mjs","../node_modules/framer-motion/dist/es/projection/node/HTMLProjectionNode.mjs","../node_modules/framer-motion/dist/es/motion/features/drag.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/css-variables-conversion.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/unit-conversion.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/parse-dom-variant.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/state.mjs","../node_modules/framer-motion/dist/es/render/store.mjs","../node_modules/framer-motion/dist/es/render/VisualElement.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/index.mjs","../node_modules/framer-motion/dist/es/render/utils/motion-values.mjs","../node_modules/framer-motion/dist/es/render/dom/DOMVisualElement.mjs","../node_modules/framer-motion/dist/es/utils/is-numerical-string.mjs","../node_modules/framer-motion/dist/es/render/html/HTMLVisualElement.mjs","../node_modules/framer-motion/dist/es/render/svg/SVGVisualElement.mjs","../node_modules/framer-motion/dist/es/render/dom/create-visual-element.mjs","../node_modules/framer-motion/dist/es/motion/features/layout.mjs","../node_modules/framer-motion/dist/es/render/dom/motion.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/create-config.mjs"],"sourcesContent":["import getPrototypeOf from \"./getPrototypeOf.js\";\nexport default function _superPropBase(object, property) {\n  while (!Object.prototype.hasOwnProperty.call(object, property)) {\n    object = getPrototypeOf(object);\n    if (object === null) break;\n  }\n\n  return object;\n}","import superPropBase from \"./superPropBase.js\";\nexport default function _get() {\n  if (typeof Reflect !== \"undefined\" && Reflect.get) {\n    _get = Reflect.get;\n  } else {\n    _get = function _get(target, property, receiver) {\n      var base = superPropBase(target, property);\n      if (!base) return;\n      var desc = Object.getOwnPropertyDescriptor(base, property);\n\n      if (desc.get) {\n        return desc.get.call(arguments.length < 3 ? target : receiver);\n      }\n\n      return desc.value;\n    };\n  }\n\n  return _get.apply(this, arguments);\n}","import objectWithoutPropertiesLoose from \"./objectWithoutPropertiesLoose.js\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}","import { createContext } from 'react';\n\n/**\n * @public\n */\nconst MotionConfigContext = createContext({\n    transformPagePoint: (p) => p,\n    isStatic: false,\n    reducedMotion: \"never\",\n});\n\nexport { MotionConfigContext };\n","import { createContext } from 'react';\n\nconst MotionContext = createContext({});\n\nexport { MotionContext };\n","import { createContext } from 'react';\n\n/**\n * @public\n */\nconst PresenceContext = createContext(null);\n\nexport { PresenceContext };\n","const isBrowser = typeof document !== \"undefined\";\n\nexport { isBrowser };\n","import { useLayoutEffect, useEffect } from 'react';\nimport { isBrowser } from './is-browser.mjs';\n\nconst useIsomorphicLayoutEffect = isBrowser ? useLayoutEffect : useEffect;\n\nexport { useIsomorphicLayoutEffect };\n","import { createContext } from 'react';\n\nconst LazyContext = createContext({ strict: false });\n\nexport { LazyContext };\n","function isRefObject(ref) {\n    return (typeof ref === \"object\" &&\n        Object.prototype.hasOwnProperty.call(ref, \"current\"));\n}\n\nexport { isRefObject };\n","/**\n * Decides if the supplied variable is variant label\n */\nfunction isVariantLabel(v) {\n    return typeof v === \"string\" || Array.isArray(v);\n}\n\nexport { isVariantLabel };\n","function isAnimationControls(v) {\n    return typeof v === \"object\" && typeof v.start === \"function\";\n}\n\nexport { isAnimationControls };\n","const variantPriorityOrder = [\n    \"animate\",\n    \"whileInView\",\n    \"whileFocus\",\n    \"whileHover\",\n    \"whileTap\",\n    \"whileDrag\",\n    \"exit\",\n];\nconst variantProps = [\"initial\", ...variantPriorityOrder];\n\nexport { variantPriorityOrder, variantProps };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { variantProps } from './variant-props.mjs';\n\nfunction isControllingVariants(props) {\n    return (isAnimationControls(props.animate) ||\n        variantProps.some((name) => isVariantLabel(props[name])));\n}\nfunction isVariantNode(props) {\n    return Boolean(isControllingVariants(props) || props.variants);\n}\n\nexport { isControllingVariants, isVariantNode };\n","import { useContext, useMemo } from 'react';\nimport { MotionContext } from './index.mjs';\nimport { getCurrentTreeVariants } from './utils.mjs';\n\nfunction useCreateMotionContext(props) {\n    const { initial, animate } = getCurrentTreeVariants(props, useContext(MotionContext));\n    return useMemo(() => ({ initial, animate }), [variantLabelsAsDependency(initial), variantLabelsAsDependency(animate)]);\n}\nfunction variantLabelsAsDependency(prop) {\n    return Array.isArray(prop) ? prop.join(\" \") : prop;\n}\n\nexport { useCreateMotionContext };\n","import { isVariantLabel } from '../../render/utils/is-variant-label.mjs';\nimport { isControllingVariants } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction getCurrentTreeVariants(props, context) {\n    if (isControllingVariants(props)) {\n        const { initial, animate } = props;\n        return {\n            initial: initial === false || isVariantLabel(initial)\n                ? initial\n                : undefined,\n            animate: isVariantLabel(animate) ? animate : undefined,\n        };\n    }\n    return props.inherit !== false ? context : {};\n}\n\nexport { getCurrentTreeVariants };\n","const featureProps = {\n    animation: [\n        \"animate\",\n        \"variants\",\n        \"whileHover\",\n        \"whileTap\",\n        \"exit\",\n        \"whileInView\",\n        \"whileFocus\",\n        \"whileDrag\",\n    ],\n    exit: [\"exit\"],\n    drag: [\"drag\", \"dragControls\"],\n    focus: [\"whileFocus\"],\n    hover: [\"whileHover\", \"onHoverStart\", \"onHoverEnd\"],\n    tap: [\"whileTap\", \"onTap\", \"onTapStart\", \"onTapCancel\"],\n    pan: [\"onPan\", \"onPanStart\", \"onPanSessionStart\", \"onPanEnd\"],\n    inView: [\"whileInView\", \"onViewportEnter\", \"onViewportLeave\"],\n    layout: [\"layout\", \"layoutId\"],\n};\nconst featureDefinitions = {};\nfor (const key in featureProps) {\n    featureDefinitions[key] = {\n        isEnabled: (props) => featureProps[key].some((name) => !!props[name]),\n    };\n}\n\nexport { featureDefinitions };\n","import { createContext } from 'react';\n\nconst LayoutGroupContext = createContext({});\n\nexport { LayoutGroupContext };\n","import { createContext } from 'react';\n\n/**\n * Internal, exported only for usage in Framer\n */\nconst SwitchLayoutGroupContext = createContext({});\n\nexport { SwitchLayoutGroupContext };\n","const motionComponentSymbol = Symbol.for(\"motionComponentSymbol\");\n\nexport { motionComponentSymbol };\n","import * as React from 'react';\nimport { forwardRef, useContext } from 'react';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { MotionContext } from '../context/MotionContext/index.mjs';\nimport { useVisualElement } from './utils/use-visual-element.mjs';\nimport { useMotionRef } from './utils/use-motion-ref.mjs';\nimport { useCreateMotionContext } from '../context/MotionContext/create.mjs';\nimport { loadFeatures } from './features/load-features.mjs';\nimport { isBrowser } from '../utils/is-browser.mjs';\nimport { LayoutGroupContext } from '../context/LayoutGroupContext.mjs';\nimport { LazyContext } from '../context/LazyContext.mjs';\nimport { SwitchLayoutGroupContext } from '../context/SwitchLayoutGroupContext.mjs';\nimport { motionComponentSymbol } from './utils/symbol.mjs';\n\n/**\n * Create a `motion` component.\n *\n * This function accepts a Component argument, which can be either a string (ie \"div\"\n * for `motion.div`), or an actual React component.\n *\n * Alongside this is a config option which provides a way of rendering the provided\n * component \"offline\", or outside the React render cycle.\n */\nfunction createMotionComponent({ preloadedFeatures, createVisualElement, useRender, useVisualState, Component, }) {\n    preloadedFeatures && loadFeatures(preloadedFeatures);\n    function MotionComponent(props, externalRef) {\n        /**\n         * If we need to measure the element we load this functionality in a\n         * separate class component in order to gain access to getSnapshotBeforeUpdate.\n         */\n        let MeasureLayout;\n        const configAndProps = {\n            ...useContext(MotionConfigContext),\n            ...props,\n            layoutId: useLayoutId(props),\n        };\n        const { isStatic } = configAndProps;\n        const context = useCreateMotionContext(props);\n        const visualState = useVisualState(props, isStatic);\n        if (!isStatic && isBrowser) {\n            /**\n             * Create a VisualElement for this component. A VisualElement provides a common\n             * interface to renderer-specific APIs (ie DOM/Three.js etc) as well as\n             * providing a way of rendering to these APIs outside of the React render loop\n             * for more performant animations and interactions\n             */\n            context.visualElement = useVisualElement(Component, visualState, configAndProps, createVisualElement);\n            /**\n             * Load Motion gesture and animation features. These are rendered as renderless\n             * components so each feature can optionally make use of React lifecycle methods.\n             */\n            const initialLayoutGroupConfig = useContext(SwitchLayoutGroupContext);\n            const isStrict = useContext(LazyContext).strict;\n            if (context.visualElement) {\n                MeasureLayout = context.visualElement.loadFeatures(\n                // Note: Pass the full new combined props to correctly re-render dynamic feature components.\n                configAndProps, isStrict, preloadedFeatures, initialLayoutGroupConfig);\n            }\n        }\n        /**\n         * The mount order and hierarchy is specific to ensure our element ref\n         * is hydrated by the time features fire their effects.\n         */\n        return (React.createElement(MotionContext.Provider, { value: context },\n            MeasureLayout && context.visualElement ? (React.createElement(MeasureLayout, { visualElement: context.visualElement, ...configAndProps })) : null,\n            useRender(Component, props, useMotionRef(visualState, context.visualElement, externalRef), visualState, isStatic, context.visualElement)));\n    }\n    const ForwardRefComponent = forwardRef(MotionComponent);\n    ForwardRefComponent[motionComponentSymbol] = Component;\n    return ForwardRefComponent;\n}\nfunction useLayoutId({ layoutId }) {\n    const layoutGroupId = useContext(LayoutGroupContext).id;\n    return layoutGroupId && layoutId !== undefined\n        ? layoutGroupId + \"-\" + layoutId\n        : layoutId;\n}\n\nexport { createMotionComponent };\n","import { featureDefinitions } from './definitions.mjs';\n\nfunction loadFeatures(features) {\n    for (const key in features) {\n        featureDefinitions[key] = {\n            ...featureDefinitions[key],\n            ...features[key],\n        };\n    }\n}\n\nexport { loadFeatures };\n","import { useContext, useRef, useInsertionEffect, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\nimport { LazyContext } from '../../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\n\nfunction useVisualElement(Component, visualState, props, createVisualElement) {\n    const { visualElement: parent } = useContext(MotionContext);\n    const lazyContext = useContext(LazyContext);\n    const presenceContext = useContext(PresenceContext);\n    const reducedMotionConfig = useContext(MotionConfigContext).reducedMotion;\n    const visualElementRef = useRef();\n    /**\n     * If we haven't preloaded a renderer, check to see if we have one lazy-loaded\n     */\n    createVisualElement = createVisualElement || lazyContext.renderer;\n    if (!visualElementRef.current && createVisualElement) {\n        visualElementRef.current = createVisualElement(Component, {\n            visualState,\n            parent,\n            props,\n            presenceContext,\n            blockInitialAnimation: presenceContext\n                ? presenceContext.initial === false\n                : false,\n            reducedMotionConfig,\n        });\n    }\n    const visualElement = visualElementRef.current;\n    useInsertionEffect(() => {\n        visualElement && visualElement.update(props, presenceContext);\n    });\n    useIsomorphicLayoutEffect(() => {\n        visualElement && visualElement.render();\n    });\n    useEffect(() => {\n        visualElement && visualElement.updateFeatures();\n    });\n    /**\n     * Ideally this function would always run in a useEffect.\n     *\n     * However, if we have optimised appear animations to handoff from,\n     * it needs to happen synchronously to ensure there's no flash of\n     * incorrect styles in the event of a hydration error.\n     *\n     * So if we detect a situtation where optimised appear animations\n     * are running, we use useLayoutEffect to trigger animations.\n     */\n    const useAnimateChangesEffect = window.HandoffAppearAnimations\n        ? useIsomorphicLayoutEffect\n        : useEffect;\n    useAnimateChangesEffect(() => {\n        if (visualElement && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n    });\n    return visualElement;\n}\n\nexport { useVisualElement };\n","import { useCallback } from 'react';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\n\n/**\n * Creates a ref function that, when called, hydrates the provided\n * external ref and VisualElement.\n */\nfunction useMotionRef(visualState, visualElement, externalRef) {\n    return useCallback((instance) => {\n        instance && visualState.mount && visualState.mount(instance);\n        if (visualElement) {\n            instance\n                ? visualElement.mount(instance)\n                : visualElement.unmount();\n        }\n        if (externalRef) {\n            if (typeof externalRef === \"function\") {\n                externalRef(instance);\n            }\n            else if (isRefObject(externalRef)) {\n                externalRef.current = instance;\n            }\n        }\n    }, \n    /**\n     * Only pass a new ref callback to React if we've received a visual element\n     * factory. Otherwise we'll be mounting/remounting every time externalRef\n     * or other dependencies change.\n     */\n    [visualElement]);\n}\n\nexport { useMotionRef };\n","import { createMotionComponent } from '../../motion/index.mjs';\n\n/**\n * Convert any React component into a `motion` component. The provided component\n * **must** use `React.forwardRef` to the underlying DOM component you want to animate.\n *\n * ```jsx\n * const Component = React.forwardRef((props, ref) => {\n *   return <div ref={ref} />\n * })\n *\n * const MotionComponent = motion(Component)\n * ```\n *\n * @public\n */\nfunction createMotionProxy(createConfig) {\n    function custom(Component, customMotionComponentConfig = {}) {\n        return createMotionComponent(createConfig(Component, customMotionComponentConfig));\n    }\n    if (typeof Proxy === \"undefined\") {\n        return custom;\n    }\n    /**\n     * A cache of generated `motion` components, e.g `motion.div`, `motion.input` etc.\n     * Rather than generating them anew every render.\n     */\n    const componentCache = new Map();\n    return new Proxy(custom, {\n        /**\n         * Called when `motion` is referenced with a prop: `motion.div`, `motion.input` etc.\n         * The prop name is passed through as `key` and we can use that to generate a `motion`\n         * DOM component with that name.\n         */\n        get: (_target, key) => {\n            /**\n             * If this element doesn't exist in the component cache, create it and cache.\n             */\n            if (!componentCache.has(key)) {\n                componentCache.set(key, custom(key));\n            }\n            return componentCache.get(key);\n        },\n    });\n}\n\nexport { createMotionProxy };\n","/**\n * We keep these listed seperately as we use the lowercase tag names as part\n * of the runtime bundle to detect SVG components\n */\nconst lowercaseSVGElements = [\n    \"animate\",\n    \"circle\",\n    \"defs\",\n    \"desc\",\n    \"ellipse\",\n    \"g\",\n    \"image\",\n    \"line\",\n    \"filter\",\n    \"marker\",\n    \"mask\",\n    \"metadata\",\n    \"path\",\n    \"pattern\",\n    \"polygon\",\n    \"polyline\",\n    \"rect\",\n    \"stop\",\n    \"switch\",\n    \"symbol\",\n    \"svg\",\n    \"text\",\n    \"tspan\",\n    \"use\",\n    \"view\",\n];\n\nexport { lowercaseSVGElements };\n","import { lowercaseSVGElements } from '../../svg/lowercase-elements.mjs';\n\nfunction isSVGComponent(Component) {\n    if (\n    /**\n     * If it's not a string, it's a custom React component. Currently we only support\n     * HTML custom React components.\n     */\n    typeof Component !== \"string\" ||\n        /**\n         * If it contains a dash, the element is a custom HTML webcomponent.\n         */\n        Component.includes(\"-\")) {\n        return false;\n    }\n    else if (\n    /**\n     * If it's in our list of lowercase SVG tags, it's an SVG component\n     */\n    lowercaseSVGElements.indexOf(Component) > -1 ||\n        /**\n         * If it contains a capital letter, it's an SVG component\n         */\n        /[A-Z]/.test(Component)) {\n        return true;\n    }\n    return false;\n}\n\nexport { isSVGComponent };\n","const scaleCorrectors = {};\nfunction addScaleCorrector(correctors) {\n    Object.assign(scaleCorrectors, correctors);\n}\n\nexport { addScaleCorrector, scaleCorrectors };\n","/**\n * Generate a list of every possible transform key.\n */\nconst transformPropOrder = [\n    \"transformPerspective\",\n    \"x\",\n    \"y\",\n    \"z\",\n    \"translateX\",\n    \"translateY\",\n    \"translateZ\",\n    \"scale\",\n    \"scaleX\",\n    \"scaleY\",\n    \"rotate\",\n    \"rotateX\",\n    \"rotateY\",\n    \"rotateZ\",\n    \"skew\",\n    \"skewX\",\n    \"skewY\",\n];\n/**\n * A quick lookup for transform props.\n */\nconst transformProps = new Set(transformPropOrder);\n\nexport { transformPropOrder, transformProps };\n","import { scaleCorrectors } from '../../projection/styles/scale-correction.mjs';\nimport { transformProps } from '../../render/html/utils/transform.mjs';\n\nfunction isForcedMotionValue(key, { layout, layoutId }) {\n    return (transformProps.has(key) ||\n        key.startsWith(\"origin\") ||\n        ((layout || layoutId !== undefined) &&\n            (!!scaleCorrectors[key] || key === \"opacity\")));\n}\n\nexport { isForcedMotionValue };\n","const isMotionValue = (value) => Boolean(value && value.getVelocity);\n\nexport { isMotionValue };\n","import { transformPropOrder } from './transform.mjs';\n\nconst translateAlias = {\n    x: \"translateX\",\n    y: \"translateY\",\n    z: \"translateZ\",\n    transformPerspective: \"perspective\",\n};\nconst numTransforms = transformPropOrder.length;\n/**\n * Build a CSS transform style from individual x/y/scale etc properties.\n *\n * This outputs with a default order of transforms/scales/rotations, this can be customised by\n * providing a transformTemplate function.\n */\nfunction buildTransform(transform, { enableHardwareAcceleration = true, allowTransformNone = true, }, transformIsDefault, transformTemplate) {\n    // The transform string we're going to build into.\n    let transformString = \"\";\n    /**\n     * Loop over all possible transforms in order, adding the ones that\n     * are present to the transform string.\n     */\n    for (let i = 0; i < numTransforms; i++) {\n        const key = transformPropOrder[i];\n        if (transform[key] !== undefined) {\n            const transformName = translateAlias[key] || key;\n            transformString += `${transformName}(${transform[key]}) `;\n        }\n    }\n    if (enableHardwareAcceleration && !transform.z) {\n        transformString += \"translateZ(0)\";\n    }\n    transformString = transformString.trim();\n    // If we have a custom `transform` template, pass our transform values and\n    // generated transformString to that before returning\n    if (transformTemplate) {\n        transformString = transformTemplate(transform, transformIsDefault ? \"\" : transformString);\n    }\n    else if (allowTransformNone && transformIsDefault) {\n        transformString = \"none\";\n    }\n    return transformString;\n}\n\nexport { buildTransform };\n","const checkStringStartsWith = (token) => (key) => typeof key === \"string\" && key.startsWith(token);\nconst isCSSVariableName = checkStringStartsWith(\"--\");\nconst isCSSVariableToken = checkStringStartsWith(\"var(--\");\nconst cssVariableRegex = /var\\s*\\(\\s*--[\\w-]+(\\s*,\\s*(?:(?:[^)(]|\\((?:[^)(]+|\\([^)(]*\\))*\\))*)+)?\\s*\\)/g;\n\nexport { cssVariableRegex, isCSSVariableName, isCSSVariableToken };\n","/**\n * Provided a value and a ValueType, returns the value as that value type.\n */\nconst getValueAsType = (value, type) => {\n    return type && typeof value === \"number\"\n        ? type.transform(value)\n        : value;\n};\n\nexport { getValueAsType };\n","const clamp = (min, max, v) => Math.min(Math.max(v, min), max);\n\nexport { clamp };\n","import { clamp } from '../../../utils/clamp.mjs';\n\nconst number = {\n    test: (v) => typeof v === \"number\",\n    parse: parseFloat,\n    transform: (v) => v,\n};\nconst alpha = {\n    ...number,\n    transform: (v) => clamp(0, 1, v),\n};\nconst scale = {\n    ...number,\n    default: 1,\n};\n\nexport { alpha, number, scale };\n","/**\n * TODO: When we move from string as a source of truth to data models\n * everything in this folder should probably be referred to as models vs types\n */\n// If this number is a decimal, make it just five decimal places\n// to avoid exponents\nconst sanitize = (v) => Math.round(v * 100000) / 100000;\nconst floatRegex = /(-)?([\\d]*\\.?[\\d])+/g;\nconst colorRegex = /(#[0-9a-f]{3,8}|(rgb|hsl)a?\\((-?[\\d\\.]+%?[,\\s]+){2}(-?[\\d\\.]+%?)\\s*[\\,\\/]?\\s*[\\d\\.]*%?\\))/gi;\nconst singleColorRegex = /^(#[0-9a-f]{3,8}|(rgb|hsl)a?\\((-?[\\d\\.]+%?[,\\s]+){2}(-?[\\d\\.]+%?)\\s*[\\,\\/]?\\s*[\\d\\.]*%?\\))$/i;\nfunction isString(v) {\n    return typeof v === \"string\";\n}\n\nexport { colorRegex, floatRegex, isString, sanitize, singleColorRegex };\n","import { isString } from '../utils.mjs';\n\nconst createUnitType = (unit) => ({\n    test: (v) => isString(v) && v.endsWith(unit) && v.split(\" \").length === 1,\n    parse: parseFloat,\n    transform: (v) => `${v}${unit}`,\n});\nconst degrees = createUnitType(\"deg\");\nconst percent = createUnitType(\"%\");\nconst px = createUnitType(\"px\");\nconst vh = createUnitType(\"vh\");\nconst vw = createUnitType(\"vw\");\nconst progressPercentage = {\n    ...percent,\n    parse: (v) => percent.parse(v) / 100,\n    transform: (v) => percent.transform(v * 100),\n};\n\nexport { degrees, percent, progressPercentage, px, vh, vw };\n","import { number } from '../../../value/types/numbers/index.mjs';\n\nconst int = {\n    ...number,\n    transform: Math.round,\n};\n\nexport { int };\n","import { scale, alpha } from '../../../value/types/numbers/index.mjs';\nimport { px, degrees, progressPercentage } from '../../../value/types/numbers/units.mjs';\nimport { int } from './type-int.mjs';\n\nconst numberValueTypes = {\n    // Border props\n    borderWidth: px,\n    borderTopWidth: px,\n    borderRightWidth: px,\n    borderBottomWidth: px,\n    borderLeftWidth: px,\n    borderRadius: px,\n    radius: px,\n    borderTopLeftRadius: px,\n    borderTopRightRadius: px,\n    borderBottomRightRadius: px,\n    borderBottomLeftRadius: px,\n    // Positioning props\n    width: px,\n    maxWidth: px,\n    height: px,\n    maxHeight: px,\n    size: px,\n    top: px,\n    right: px,\n    bottom: px,\n    left: px,\n    // Spacing props\n    padding: px,\n    paddingTop: px,\n    paddingRight: px,\n    paddingBottom: px,\n    paddingLeft: px,\n    margin: px,\n    marginTop: px,\n    marginRight: px,\n    marginBottom: px,\n    marginLeft: px,\n    // Transform props\n    rotate: degrees,\n    rotateX: degrees,\n    rotateY: degrees,\n    rotateZ: degrees,\n    scale,\n    scaleX: scale,\n    scaleY: scale,\n    scaleZ: scale,\n    skew: degrees,\n    skewX: degrees,\n    skewY: degrees,\n    distance: px,\n    translateX: px,\n    translateY: px,\n    translateZ: px,\n    x: px,\n    y: px,\n    z: px,\n    perspective: px,\n    transformPerspective: px,\n    opacity: alpha,\n    originX: progressPercentage,\n    originY: progressPercentage,\n    originZ: px,\n    // Misc\n    zIndex: int,\n    // SVG\n    fillOpacity: alpha,\n    strokeOpacity: alpha,\n    numOctaves: int,\n};\n\nexport { numberValueTypes };\n","import { buildTransform } from './build-transform.mjs';\nimport { isCSSVariableName } from '../../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './transform.mjs';\nimport { getValueAsType } from '../../dom/value-types/get-as-type.mjs';\nimport { numberValueTypes } from '../../dom/value-types/number.mjs';\n\nfunction buildHTMLStyles(state, latestValues, options, transformTemplate) {\n    const { style, vars, transform, transformOrigin } = state;\n    // Track whether we encounter any transform or transformOrigin values.\n    let hasTransform = false;\n    let hasTransformOrigin = false;\n    // Does the calculated transform essentially equal \"none\"?\n    let transformIsNone = true;\n    /**\n     * Loop over all our latest animated values and decide whether to handle them\n     * as a style or CSS variable.\n     *\n     * Transforms and transform origins are kept seperately for further processing.\n     */\n    for (const key in latestValues) {\n        const value = latestValues[key];\n        /**\n         * If this is a CSS variable we don't do any further processing.\n         */\n        if (isCSSVariableName(key)) {\n            vars[key] = value;\n            continue;\n        }\n        // Convert the value to its default value type, ie 0 -> \"0px\"\n        const valueType = numberValueTypes[key];\n        const valueAsType = getValueAsType(value, valueType);\n        if (transformProps.has(key)) {\n            // If this is a transform, flag to enable further transform processing\n            hasTransform = true;\n            transform[key] = valueAsType;\n            // If we already know we have a non-default transform, early return\n            if (!transformIsNone)\n                continue;\n            // Otherwise check to see if this is a default transform\n            if (value !== (valueType.default || 0))\n                transformIsNone = false;\n        }\n        else if (key.startsWith(\"origin\")) {\n            // If this is a transform origin, flag and enable further transform-origin processing\n            hasTransformOrigin = true;\n            transformOrigin[key] = valueAsType;\n        }\n        else {\n            style[key] = valueAsType;\n        }\n    }\n    if (!latestValues.transform) {\n        if (hasTransform || transformTemplate) {\n            style.transform = buildTransform(state.transform, options, transformIsNone, transformTemplate);\n        }\n        else if (style.transform) {\n            /**\n             * If we have previously created a transform but currently don't have any,\n             * reset transform style to none.\n             */\n            style.transform = \"none\";\n        }\n    }\n    /**\n     * Build a transformOrigin style. Uses the same defaults as the browser for\n     * undefined origins.\n     */\n    if (hasTransformOrigin) {\n        const { originX = \"50%\", originY = \"50%\", originZ = 0, } = transformOrigin;\n        style.transformOrigin = `${originX} ${originY} ${originZ}`;\n    }\n}\n\nexport { buildHTMLStyles };\n","const createHtmlRenderState = () => ({\n    style: {},\n    transform: {},\n    transformOrigin: {},\n    vars: {},\n});\n\nexport { createHtmlRenderState };\n","import { useMemo } from 'react';\nimport { isForcedMotionValue } from '../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nfunction copyRawValuesOnly(target, source, props) {\n    for (const key in source) {\n        if (!isMotionValue(source[key]) && !isForcedMotionValue(key, props)) {\n            target[key] = source[key];\n        }\n    }\n}\nfunction useInitialMotionValues({ transformTemplate }, visualState, isStatic) {\n    return useMemo(() => {\n        const state = createHtmlRenderState();\n        buildHTMLStyles(state, visualState, { enableHardwareAcceleration: !isStatic }, transformTemplate);\n        return Object.assign({}, state.vars, state.style);\n    }, [visualState]);\n}\nfunction useStyle(props, visualState, isStatic) {\n    const styleProp = props.style || {};\n    const style = {};\n    /**\n     * Copy non-Motion Values straight into style\n     */\n    copyRawValuesOnly(style, styleProp, props);\n    Object.assign(style, useInitialMotionValues(props, visualState, isStatic));\n    return props.transformValues ? props.transformValues(style) : style;\n}\nfunction useHTMLProps(props, visualState, isStatic) {\n    // The `any` isn't ideal but it is the type of createElement props argument\n    const htmlProps = {};\n    const style = useStyle(props, visualState, isStatic);\n    if (props.drag && props.dragListener !== false) {\n        // Disable the ghost element when a user drags\n        htmlProps.draggable = false;\n        // Disable text selection\n        style.userSelect =\n            style.WebkitUserSelect =\n                style.WebkitTouchCallout =\n                    \"none\";\n        // Disable scrolling on the draggable direction\n        style.touchAction =\n            props.drag === true\n                ? \"none\"\n                : `pan-${props.drag === \"x\" ? \"y\" : \"x\"}`;\n    }\n    if (props.tabIndex === undefined &&\n        (props.onTap || props.onTapStart || props.whileTap)) {\n        htmlProps.tabIndex = 0;\n    }\n    htmlProps.style = style;\n    return htmlProps;\n}\n\nexport { copyRawValuesOnly, useHTMLProps };\n","/**\n * A list of all valid MotionProps.\n *\n * @privateRemarks\n * This doesn't throw if a `MotionProp` name is missing - it should.\n */\nconst validMotionProps = new Set([\n    \"animate\",\n    \"exit\",\n    \"variants\",\n    \"initial\",\n    \"style\",\n    \"values\",\n    \"variants\",\n    \"transition\",\n    \"transformTemplate\",\n    \"transformValues\",\n    \"custom\",\n    \"inherit\",\n    \"onLayoutAnimationStart\",\n    \"onLayoutAnimationComplete\",\n    \"onLayoutMeasure\",\n    \"onBeforeLayoutMeasure\",\n    \"onAnimationStart\",\n    \"onAnimationComplete\",\n    \"onUpdate\",\n    \"onDragStart\",\n    \"onDrag\",\n    \"onDragEnd\",\n    \"onMeasureDragConstraints\",\n    \"onDirectionLock\",\n    \"onDragTransitionEnd\",\n    \"_dragX\",\n    \"_dragY\",\n    \"onHoverStart\",\n    \"onHoverEnd\",\n    \"onViewportEnter\",\n    \"onViewportLeave\",\n    \"ignoreStrict\",\n    \"viewport\",\n]);\n/**\n * Check whether a prop name is a valid `MotionProp` key.\n *\n * @param key - Name of the property to check\n * @returns `true` is key is a valid `MotionProp`.\n *\n * @public\n */\nfunction isValidMotionProp(key) {\n    return (key.startsWith(\"while\") ||\n        (key.startsWith(\"drag\") && key !== \"draggable\") ||\n        key.startsWith(\"layout\") ||\n        key.startsWith(\"onTap\") ||\n        key.startsWith(\"onPan\") ||\n        validMotionProps.has(key));\n}\n\nexport { isValidMotionProp };\n","import { isValidMotionProp } from '../../../motion/utils/valid-prop.mjs';\n\nlet shouldForward = (key) => !isValidMotionProp(key);\nfunction loadExternalIsValidProp(isValidProp) {\n    if (!isValidProp)\n        return;\n    // Explicitly filter our events\n    shouldForward = (key) => key.startsWith(\"on\") ? !isValidMotionProp(key) : isValidProp(key);\n}\n/**\n * Emotion and Styled Components both allow users to pass through arbitrary props to their components\n * to dynamically generate CSS. They both use the `@emotion/is-prop-valid` package to determine which\n * of these should be passed to the underlying DOM node.\n *\n * However, when styling a Motion component `styled(motion.div)`, both packages pass through *all* props\n * as it's seen as an arbitrary component rather than a DOM node. Motion only allows arbitrary props\n * passed through the `custom` prop so it doesn't *need* the payload or computational overhead of\n * `@emotion/is-prop-valid`, however to fix this problem we need to use it.\n *\n * By making it an optionalDependency we can offer this functionality only in the situations where it's\n * actually required.\n */\ntry {\n    /**\n     * We attempt to import this package but require won't be defined in esm environments, in that case\n     * isPropValid will have to be provided via `MotionContext`. In a 6.0.0 this should probably be removed\n     * in favour of explicit injection.\n     */\n    loadExternalIsValidProp(require(\"@emotion/is-prop-valid\").default);\n}\ncatch (_a) {\n    // We don't need to actually do anything here - the fallback is the existing `isPropValid`.\n}\nfunction filterProps(props, isDom, forwardMotionProps) {\n    const filteredProps = {};\n    for (const key in props) {\n        /**\n         * values is considered a valid prop by Emotion, so if it's present\n         * this will be rendered out to the DOM unless explicitly filtered.\n         *\n         * We check the type as it could be used with the `feColorMatrix`\n         * element, which we support.\n         */\n        if (key === \"values\" && typeof props.values === \"object\")\n            continue;\n        if (shouldForward(key) ||\n            (forwardMotionProps === true && isValidMotionProp(key)) ||\n            (!isDom && !isValidMotionProp(key)) ||\n            // If trying to use native HTML drag events, forward drag listeners\n            (props[\"draggable\"] && key.startsWith(\"onDrag\"))) {\n            filteredProps[key] = props[key];\n        }\n    }\n    return filteredProps;\n}\n\nexport { filterProps, loadExternalIsValidProp };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nfunction calcOrigin(origin, offset, size) {\n    return typeof origin === \"string\"\n        ? origin\n        : px.transform(offset + size * origin);\n}\n/**\n * The SVG transform origin defaults are different to CSS and is less intuitive,\n * so we use the measured dimensions of the SVG to reconcile these.\n */\nfunction calcSVGTransformOrigin(dimensions, originX, originY) {\n    const pxOriginX = calcOrigin(originX, dimensions.x, dimensions.width);\n    const pxOriginY = calcOrigin(originY, dimensions.y, dimensions.height);\n    return `${pxOriginX} ${pxOriginY}`;\n}\n\nexport { calcSVGTransformOrigin };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nconst dashKeys = {\n    offset: \"stroke-dashoffset\",\n    array: \"stroke-dasharray\",\n};\nconst camelKeys = {\n    offset: \"strokeDashoffset\",\n    array: \"strokeDasharray\",\n};\n/**\n * Build SVG path properties. Uses the path's measured length to convert\n * our custom pathLength, pathSpacing and pathOffset into stroke-dashoffset\n * and stroke-dasharray attributes.\n *\n * This function is mutative to reduce per-frame GC.\n */\nfunction buildSVGPath(attrs, length, spacing = 1, offset = 0, useDashCase = true) {\n    // Normalise path length by setting SVG attribute pathLength to 1\n    attrs.pathLength = 1;\n    // We use dash case when setting attributes directly to the DOM node and camel case\n    // when defining props on a React component.\n    const keys = useDashCase ? dashKeys : camelKeys;\n    // Build the dash offset\n    attrs[keys.offset] = px.transform(-offset);\n    // Build the dash array\n    const pathLength = px.transform(length);\n    const pathSpacing = px.transform(spacing);\n    attrs[keys.array] = `${pathLength} ${pathSpacing}`;\n}\n\nexport { buildSVGPath };\n","import { buildHTMLStyles } from '../../html/utils/build-styles.mjs';\nimport { calcSVGTransformOrigin } from './transform-origin.mjs';\nimport { buildSVGPath } from './path.mjs';\n\n/**\n * Build SVG visual attrbutes, like cx and style.transform\n */\nfunction buildSVGAttrs(state, { attrX, attrY, attrScale, originX, originY, pathLength, pathSpacing = 1, pathOffset = 0, \n// This is object creation, which we try to avoid per-frame.\n...latest }, options, isSVGTag, transformTemplate) {\n    buildHTMLStyles(state, latest, options, transformTemplate);\n    /**\n     * For svg tags we just want to make sure viewBox is animatable and treat all the styles\n     * as normal HTML tags.\n     */\n    if (isSVGTag) {\n        if (state.style.viewBox) {\n            state.attrs.viewBox = state.style.viewBox;\n        }\n        return;\n    }\n    state.attrs = state.style;\n    state.style = {};\n    const { attrs, style, dimensions } = state;\n    /**\n     * However, we apply transforms as CSS transforms. So if we detect a transform we take it from attrs\n     * and copy it into style.\n     */\n    if (attrs.transform) {\n        if (dimensions)\n            style.transform = attrs.transform;\n        delete attrs.transform;\n    }\n    // Parse transformOrigin\n    if (dimensions &&\n        (originX !== undefined || originY !== undefined || style.transform)) {\n        style.transformOrigin = calcSVGTransformOrigin(dimensions, originX !== undefined ? originX : 0.5, originY !== undefined ? originY : 0.5);\n    }\n    // Render attrX/attrY/attrScale as attributes\n    if (attrX !== undefined)\n        attrs.x = attrX;\n    if (attrY !== undefined)\n        attrs.y = attrY;\n    if (attrScale !== undefined)\n        attrs.scale = attrScale;\n    // Build SVG path if one has been defined\n    if (pathLength !== undefined) {\n        buildSVGPath(attrs, pathLength, pathSpacing, pathOffset, false);\n    }\n}\n\nexport { buildSVGAttrs };\n","import { createHtmlRenderState } from '../../html/utils/create-render-state.mjs';\n\nconst createSvgRenderState = () => ({\n    ...createHtmlRenderState(),\n    attrs: {},\n});\n\nexport { createSvgRenderState };\n","const isSVGTag = (tag) => typeof tag === \"string\" && tag.toLowerCase() === \"svg\";\n\nexport { isSVGTag };\n","import { useMemo } from 'react';\nimport { copyRawValuesOnly } from '../html/use-props.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nfunction useSVGProps(props, visualState, _isStatic, Component) {\n    const visualProps = useMemo(() => {\n        const state = createSvgRenderState();\n        buildSVGAttrs(state, visualState, { enableHardwareAcceleration: false }, isSVGTag(Component), props.transformTemplate);\n        return {\n            ...state.attrs,\n            style: { ...state.style },\n        };\n    }, [visualState]);\n    if (props.style) {\n        const rawStyles = {};\n        copyRawValuesOnly(rawStyles, props.style, props);\n        visualProps.style = { ...rawStyles, ...visualProps.style };\n    }\n    return visualProps;\n}\n\nexport { useSVGProps };\n","import { useMemo, createElement } from 'react';\nimport { useHTMLProps } from '../html/use-props.mjs';\nimport { filterProps } from './utils/filter-props.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\nimport { useSVGProps } from '../svg/use-props.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction createUseRender(forwardMotionProps = false) {\n    const useRender = (Component, props, ref, { latestValues }, isStatic) => {\n        const useVisualProps = isSVGComponent(Component)\n            ? useSVGProps\n            : useHTMLProps;\n        const visualProps = useVisualProps(props, latestValues, isStatic, Component);\n        const filteredProps = filterProps(props, typeof Component === \"string\", forwardMotionProps);\n        const elementProps = {\n            ...filteredProps,\n            ...visualProps,\n            ref,\n        };\n        /**\n         * If component has been handed a motion value as its child,\n         * memoise its initial value and render that. Subsequent updates\n         * will be handled by the onChange handler\n         */\n        const { children } = props;\n        const renderedChildren = useMemo(() => (isMotionValue(children) ? children.get() : children), [children]);\n        return createElement(Component, {\n            ...elementProps,\n            children: renderedChildren,\n        });\n    };\n    return useRender;\n}\n\nexport { createUseRender };\n","/**\n * Convert camelCase to dash-case properties.\n */\nconst camelToDash = (str) => str.replace(/([a-z])([A-Z])/g, \"$1-$2\").toLowerCase();\n\nexport { camelToDash };\n","function renderHTML(element, { style, vars }, styleProp, projection) {\n    Object.assign(element.style, style, projection && projection.getProjectionStyles(styleProp));\n    // Loop over any CSS variables and assign those.\n    for (const key in vars) {\n        element.style.setProperty(key, vars[key]);\n    }\n}\n\nexport { renderHTML };\n","/**\n * A set of attribute names that are always read/written as camel case.\n */\nconst camelCaseAttributes = new Set([\n    \"baseFrequency\",\n    \"diffuseConstant\",\n    \"kernelMatrix\",\n    \"kernelUnitLength\",\n    \"keySplines\",\n    \"keyTimes\",\n    \"limitingConeAngle\",\n    \"markerHeight\",\n    \"markerWidth\",\n    \"numOctaves\",\n    \"targetX\",\n    \"targetY\",\n    \"surfaceScale\",\n    \"specularConstant\",\n    \"specularExponent\",\n    \"stdDeviation\",\n    \"tableValues\",\n    \"viewBox\",\n    \"gradientTransform\",\n    \"pathLength\",\n    \"startOffset\",\n    \"textLength\",\n    \"lengthAdjust\",\n]);\n\nexport { camelCaseAttributes };\n","import { camelToDash } from '../../dom/utils/camel-to-dash.mjs';\nimport { renderHTML } from '../../html/utils/render.mjs';\nimport { camelCaseAttributes } from './camel-case-attrs.mjs';\n\nfunction renderSVG(element, renderState, _styleProp, projection) {\n    renderHTML(element, renderState, undefined, projection);\n    for (const key in renderState.attrs) {\n        element.setAttribute(!camelCaseAttributes.has(key) ? camelToDash(key) : key, renderState.attrs[key]);\n    }\n}\n\nexport { renderSVG };\n","import { isForcedMotionValue } from '../../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps) {\n    const { style } = props;\n    const newValues = {};\n    for (const key in style) {\n        if (isMotionValue(style[key]) ||\n            (prevProps.style && isMotionValue(prevProps.style[key])) ||\n            isForcedMotionValue(key, props)) {\n            newValues[key] = style[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\nimport { scrapeMotionValuesFromProps as scrapeMotionValuesFromProps$1 } from '../../html/utils/scrape-motion-values.mjs';\nimport { transformPropOrder } from '../../html/utils/transform.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps) {\n    const newValues = scrapeMotionValuesFromProps$1(props, prevProps);\n    for (const key in props) {\n        if (isMotionValue(props[key]) || isMotionValue(prevProps[key])) {\n            const targetKey = transformPropOrder.indexOf(key) !== -1\n                ? \"attr\" + key.charAt(0).toUpperCase() + key.substring(1)\n                : key;\n            newValues[targetKey] = props[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","function resolveVariantFromProps(props, definition, custom, currentValues = {}, currentVelocity = {}) {\n    /**\n     * If the variant definition is a function, resolve.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\n    }\n    /**\n     * If the variant definition is a variant label, or\n     * the function returned a variant label, resolve.\n     */\n    if (typeof definition === \"string\") {\n        definition = props.variants && props.variants[definition];\n    }\n    /**\n     * At this point we've resolved both functions and variant labels,\n     * but the resolved variant label might itself have been a function.\n     * If so, resolve. This can only have returned a valid target object.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\n    }\n    return definition;\n}\n\nexport { resolveVariantFromProps };\n","const isKeyframesTarget = (v) => {\n    return Array.isArray(v);\n};\n\nexport { isKeyframesTarget };\n","import { isCustomValue } from '../../utils/resolve-value.mjs';\nimport { isMotionValue } from './is-motion-value.mjs';\n\n/**\n * If the provided value is a MotionValue, this returns the actual value, otherwise just the value itself\n *\n * TODO: Remove and move to library\n */\nfunction resolveMotionValue(value) {\n    const unwrappedValue = isMotionValue(value) ? value.get() : value;\n    return isCustomValue(unwrappedValue)\n        ? unwrappedValue.toValue()\n        : unwrappedValue;\n}\n\nexport { resolveMotionValue };\n","import { isKeyframesTarget } from '../animation/utils/is-keyframes-target.mjs';\n\nconst isCustomValue = (v) => {\n    return Boolean(v && typeof v === \"object\" && v.mix && v.toValue);\n};\nconst resolveFinalValueInKeyframes = (v) => {\n    // TODO maybe throw if v.length - 1 is placeholder token?\n    return isKeyframesTarget(v) ? v[v.length - 1] || 0 : v;\n};\n\nexport { isCustomValue, resolveFinalValueInKeyframes };\n","import { useContext } from 'react';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { resolveVariantFromProps } from '../../render/utils/resolve-variants.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { isControllingVariants, isVariantNode } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction makeState({ scrapeMotionValuesFromProps, createRenderState, onMount, }, props, context, presenceContext) {\n    const state = {\n        latestValues: makeLatestValues(props, context, presenceContext, scrapeMotionValuesFromProps),\n        renderState: createRenderState(),\n    };\n    if (onMount) {\n        state.mount = (instance) => onMount(props, instance, state);\n    }\n    return state;\n}\nconst makeUseVisualState = (config) => (props, isStatic) => {\n    const context = useContext(MotionContext);\n    const presenceContext = useContext(PresenceContext);\n    const make = () => makeState(config, props, context, presenceContext);\n    return isStatic ? make() : useConstant(make);\n};\nfunction makeLatestValues(props, context, presenceContext, scrapeMotionValues) {\n    const values = {};\n    const motionValues = scrapeMotionValues(props, {});\n    for (const key in motionValues) {\n        values[key] = resolveMotionValue(motionValues[key]);\n    }\n    let { initial, animate } = props;\n    const isControllingVariants$1 = isControllingVariants(props);\n    const isVariantNode$1 = isVariantNode(props);\n    if (context &&\n        isVariantNode$1 &&\n        !isControllingVariants$1 &&\n        props.inherit !== false) {\n        if (initial === undefined)\n            initial = context.initial;\n        if (animate === undefined)\n            animate = context.animate;\n    }\n    let isInitialAnimationBlocked = presenceContext\n        ? presenceContext.initial === false\n        : false;\n    isInitialAnimationBlocked = isInitialAnimationBlocked || initial === false;\n    const variantToSet = isInitialAnimationBlocked ? animate : initial;\n    if (variantToSet &&\n        typeof variantToSet !== \"boolean\" &&\n        !isAnimationControls(variantToSet)) {\n        const list = Array.isArray(variantToSet) ? variantToSet : [variantToSet];\n        list.forEach((definition) => {\n            const resolved = resolveVariantFromProps(props, definition);\n            if (!resolved)\n                return;\n            const { transitionEnd, transition, ...target } = resolved;\n            for (const key in target) {\n                let valueTarget = target[key];\n                if (Array.isArray(valueTarget)) {\n                    /**\n                     * Take final keyframe if the initial animation is blocked because\n                     * we want to initialise at the end of that blocked animation.\n                     */\n                    const index = isInitialAnimationBlocked\n                        ? valueTarget.length - 1\n                        : 0;\n                    valueTarget = valueTarget[index];\n                }\n                if (valueTarget !== null) {\n                    values[key] = valueTarget;\n                }\n            }\n            for (const key in transitionEnd)\n                values[key] = transitionEnd[key];\n        });\n    }\n    return values;\n}\n\nexport { makeUseVisualState };\n","import { useRef } from 'react';\n\n/**\n * Creates a constant value over the lifecycle of a component.\n *\n * Even if `useMemo` is provided an empty array as its final argument, it doesn't offer\n * a guarantee that it won't re-run for performance reasons later on. By using `useConstant`\n * you can ensure that initialisers don't execute twice or more.\n */\nfunction useConstant(init) {\n    const ref = useRef(null);\n    if (ref.current === null) {\n        ref.current = init();\n    }\n    return ref.current;\n}\n\nexport { useConstant };\n","import { renderSVG } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nconst svgMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps: scrapeMotionValuesFromProps,\n        createRenderState: createSvgRenderState,\n        onMount: (props, instance, { renderState, latestValues }) => {\n            try {\n                renderState.dimensions =\n                    typeof instance.getBBox ===\n                        \"function\"\n                        ? instance.getBBox()\n                        : instance.getBoundingClientRect();\n            }\n            catch (e) {\n                // Most likely trying to measure an unrendered element under Firefox\n                renderState.dimensions = {\n                    x: 0,\n                    y: 0,\n                    width: 0,\n                    height: 0,\n                };\n            }\n            buildSVGAttrs(renderState, latestValues, { enableHardwareAcceleration: false }, isSVGTag(instance.tagName), props.transformTemplate);\n            renderSVG(instance, renderState);\n        },\n    }),\n};\n\nexport { svgMotionConfig };\n","import { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nconst htmlMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps,\n        createRenderState: createHtmlRenderState,\n    }),\n};\n\nexport { htmlMotionConfig };\n","function addDomEvent(target, eventName, handler, options = { passive: true }) {\n    target.addEventListener(eventName, handler, options);\n    return () => target.removeEventListener(eventName, handler);\n}\n\nexport { addDomEvent };\n","const isPrimaryPointer = (event) => {\n    if (event.pointerType === \"mouse\") {\n        return typeof event.button !== \"number\" || event.button <= 0;\n    }\n    else {\n        /**\n         * isPrimary is true for all mice buttons, whereas every touch point\n         * is regarded as its own input. So subsequent concurrent touch points\n         * will be false.\n         *\n         * Specifically match against false here as incomplete versions of\n         * PointerEvents in very old browser might have it set as undefined.\n         */\n        return event.isPrimary !== false;\n    }\n};\n\nexport { isPrimaryPointer };\n","import { isPrimaryPointer } from './utils/is-primary-pointer.mjs';\n\nfunction extractEventInfo(event, pointType = \"page\") {\n    return {\n        point: {\n            x: event[pointType + \"X\"],\n            y: event[pointType + \"Y\"],\n        },\n    };\n}\nconst addPointerInfo = (handler) => {\n    return (event) => isPrimaryPointer(event) && handler(event, extractEventInfo(event));\n};\n\nexport { addPointerInfo, extractEventInfo };\n","import { addDomEvent } from './add-dom-event.mjs';\nimport { addPointerInfo } from './event-info.mjs';\n\nfunction addPointerEvent(target, eventName, handler, options) {\n    return addDomEvent(target, eventName, addPointerInfo(handler), options);\n}\n\nexport { addPointerEvent };\n","/**\n * Pipe\n * Compose other transformers to run linearily\n * pipe(min(20), max(40))\n * @param  {...functions} transformers\n * @return {function}\n */\nconst combineFunctions = (a, b) => (v) => b(a(v));\nconst pipe = (...transformers) => transformers.reduce(combineFunctions);\n\nexport { pipe };\n","function createLock(name) {\n    let lock = null;\n    return () => {\n        const openLock = () => {\n            lock = null;\n        };\n        if (lock === null) {\n            lock = name;\n            return openLock;\n        }\n        return false;\n    };\n}\nconst globalHorizontalLock = createLock(\"dragHorizontal\");\nconst globalVerticalLock = createLock(\"dragVertical\");\nfunction getGlobalLock(drag) {\n    let lock = false;\n    if (drag === \"y\") {\n        lock = globalVerticalLock();\n    }\n    else if (drag === \"x\") {\n        lock = globalHorizontalLock();\n    }\n    else {\n        const openHorizontal = globalHorizontalLock();\n        const openVertical = globalVerticalLock();\n        if (openHorizontal && openVertical) {\n            lock = () => {\n                openHorizontal();\n                openVertical();\n            };\n        }\n        else {\n            // Release the locks because we don't use them\n            if (openHorizontal)\n                openHorizontal();\n            if (openVertical)\n                openVertical();\n        }\n    }\n    return lock;\n}\nfunction isDragActive() {\n    // Check the gesture lock - if we get it, it means no drag gesture is active\n    // and we can safely fire the tap gesture.\n    const openGestureLock = getGlobalLock(true);\n    if (!openGestureLock)\n        return true;\n    openGestureLock();\n    return false;\n}\n\nexport { createLock, getGlobalLock, isDragActive };\n","class Feature {\n    constructor(node) {\n        this.isMounted = false;\n        this.node = node;\n    }\n    update() { }\n}\n\nexport { Feature };\n","const frameData = {\n    delta: 0,\n    timestamp: 0,\n    isProcessing: false,\n};\n\nexport { frameData };\n","import { createRenderStep } from './create-render-step.mjs';\nimport { frameData } from './data.mjs';\n\nconst maxElapsed = 40;\nlet useDefaultElapsed = true;\nlet runNextFrame = false;\nconst stepsOrder = [\n    \"read\",\n    \"update\",\n    \"preRender\",\n    \"render\",\n    \"postRender\",\n];\nconst steps = stepsOrder.reduce((acc, key) => {\n    acc[key] = createRenderStep(() => (runNextFrame = true));\n    return acc;\n}, {});\nconst processStep = (stepId) => steps[stepId].process(frameData);\nconst processFrame = (timestamp) => {\n    runNextFrame = false;\n    frameData.delta = useDefaultElapsed\n        ? 1000 / 60\n        : Math.max(Math.min(timestamp - frameData.timestamp, maxElapsed), 1);\n    frameData.timestamp = timestamp;\n    frameData.isProcessing = true;\n    stepsOrder.forEach(processStep);\n    frameData.isProcessing = false;\n    if (runNextFrame) {\n        useDefaultElapsed = false;\n        requestAnimationFrame(processFrame);\n    }\n};\nconst startLoop = () => {\n    runNextFrame = true;\n    useDefaultElapsed = true;\n    if (!frameData.isProcessing)\n        requestAnimationFrame(processFrame);\n};\nconst frame = stepsOrder.reduce((acc, key) => {\n    const step = steps[key];\n    acc[key] = (process, keepAlive = false, immediate = false) => {\n        if (!runNextFrame)\n            startLoop();\n        return step.schedule(process, keepAlive, immediate);\n    };\n    return acc;\n}, {});\nfunction cancelFrame(process) {\n    stepsOrder.forEach((key) => steps[key].cancel(process));\n}\n\nexport { cancelFrame, frame, steps, stepsOrder };\n","function createRenderStep(runNextFrame) {\n    /**\n     * We create and reuse two arrays, one to queue jobs for the current frame\n     * and one for the next. We reuse to avoid triggering GC after x frames.\n     */\n    let toRun = [];\n    let toRunNextFrame = [];\n    /**\n     *\n     */\n    let numToRun = 0;\n    /**\n     * Track whether we're currently processing jobs in this step. This way\n     * we can decide whether to schedule new jobs for this frame or next.\n     */\n    let isProcessing = false;\n    let flushNextFrame = false;\n    /**\n     * A set of processes which were marked keepAlive when scheduled.\n     */\n    const toKeepAlive = new WeakSet();\n    const step = {\n        /**\n         * Schedule a process to run on the next frame.\n         */\n        schedule: (callback, keepAlive = false, immediate = false) => {\n            const addToCurrentFrame = immediate && isProcessing;\n            const buffer = addToCurrentFrame ? toRun : toRunNextFrame;\n            if (keepAlive)\n                toKeepAlive.add(callback);\n            // If the buffer doesn't already contain this callback, add it\n            if (buffer.indexOf(callback) === -1) {\n                buffer.push(callback);\n                // If we're adding it to the currently running buffer, update its measured size\n                if (addToCurrentFrame && isProcessing)\n                    numToRun = toRun.length;\n            }\n            return callback;\n        },\n        /**\n         * Cancel the provided callback from running on the next frame.\n         */\n        cancel: (callback) => {\n            const index = toRunNextFrame.indexOf(callback);\n            if (index !== -1)\n                toRunNextFrame.splice(index, 1);\n            toKeepAlive.delete(callback);\n        },\n        /**\n         * Execute all schedule callbacks.\n         */\n        process: (frameData) => {\n            /**\n             * If we're already processing we've probably been triggered by a flushSync\n             * inside an existing process. Instead of executing, mark flushNextFrame\n             * as true and ensure we flush the following frame at the end of this one.\n             */\n            if (isProcessing) {\n                flushNextFrame = true;\n                return;\n            }\n            isProcessing = true;\n            [toRun, toRunNextFrame] = [toRunNextFrame, toRun];\n            // Clear the next frame list\n            toRunNextFrame.length = 0;\n            // Execute this frame\n            numToRun = toRun.length;\n            if (numToRun) {\n                for (let i = 0; i < numToRun; i++) {\n                    const callback = toRun[i];\n                    callback(frameData);\n                    if (toKeepAlive.has(callback)) {\n                        step.schedule(callback);\n                        runNextFrame();\n                    }\n                }\n            }\n            isProcessing = false;\n            if (flushNextFrame) {\n                flushNextFrame = false;\n                step.process(frameData);\n            }\n        },\n    };\n    return step;\n}\n\nexport { createRenderStep };\n","import { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { frame } from '../frameloop/index.mjs';\n\nfunction addHoverEvent(node, isActive) {\n    const eventName = \"pointer\" + (isActive ? \"enter\" : \"leave\");\n    const callbackName = \"onHover\" + (isActive ? \"Start\" : \"End\");\n    const handleEvent = (event, info) => {\n        if (event.type === \"touch\" || isDragActive())\n            return;\n        const props = node.getProps();\n        if (node.animationState && props.whileHover) {\n            node.animationState.setActive(\"whileHover\", isActive);\n        }\n        if (props[callbackName]) {\n            frame.update(() => props[callbackName](event, info));\n        }\n    };\n    return addPointerEvent(node.current, eventName, handleEvent, {\n        passive: !node.getProps()[callbackName],\n    });\n}\nclass HoverGesture extends Feature {\n    mount() {\n        this.unmount = pipe(addHoverEvent(this.node, true), addHoverEvent(this.node, false));\n    }\n    unmount() { }\n}\n\nexport { HoverGesture };\n","import { addDomEvent } from '../events/add-dom-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\n\nclass FocusGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.isActive = false;\n    }\n    onFocus() {\n        let isFocusVisible = false;\n        /**\n         * If this element doesn't match focus-visible then don't\n         * apply whileHover. But, if matches throws that focus-visible\n         * is not a valid selector then in that browser outline styles will be applied\n         * to the element by default and we want to match that behaviour with whileFocus.\n         */\n        try {\n            isFocusVisible = this.node.current.matches(\":focus-visible\");\n        }\n        catch (e) {\n            isFocusVisible = true;\n        }\n        if (!isFocusVisible || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", true);\n        this.isActive = true;\n    }\n    onBlur() {\n        if (!this.isActive || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", false);\n        this.isActive = false;\n    }\n    mount() {\n        this.unmount = pipe(addDomEvent(this.node.current, \"focus\", () => this.onFocus()), addDomEvent(this.node.current, \"blur\", () => this.onBlur()));\n    }\n    unmount() { }\n}\n\nexport { FocusGesture };\n","/**\n * Recursively traverse up the tree to check whether the provided child node\n * is the parent or a descendant of it.\n *\n * @param parent - Element to find\n * @param child - Element to test against parent\n */\nconst isNodeOrChild = (parent, child) => {\n    if (!child) {\n        return false;\n    }\n    else if (parent === child) {\n        return true;\n    }\n    else {\n        return isNodeOrChild(parent, child.parentElement);\n    }\n};\n\nexport { isNodeOrChild };\n","const noop = (any) => any;\n\nexport { noop };\n","import { extractEventInfo } from '../events/event-info.mjs';\nimport { addDomEvent } from '../events/add-dom-event.mjs';\nimport { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { isNodeOrChild } from './utils/is-node-or-child.mjs';\nimport { noop } from '../utils/noop.mjs';\nimport { frame } from '../frameloop/index.mjs';\n\nfunction fireSyntheticPointerEvent(name, handler) {\n    if (!handler)\n        return;\n    const syntheticPointerEvent = new PointerEvent(\"pointer\" + name);\n    handler(syntheticPointerEvent, extractEventInfo(syntheticPointerEvent));\n}\nclass PressGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removeStartListeners = noop;\n        this.removeEndListeners = noop;\n        this.removeAccessibleListeners = noop;\n        this.startPointerPress = (startEvent, startInfo) => {\n            this.removeEndListeners();\n            if (this.isPressing)\n                return;\n            const props = this.node.getProps();\n            const endPointerPress = (endEvent, endInfo) => {\n                if (!this.checkPressEnd())\n                    return;\n                const { onTap, onTapCancel } = this.node.getProps();\n                frame.update(() => {\n                    /**\n                     * We only count this as a tap gesture if the event.target is the same\n                     * as, or a child of, this component's element\n                     */\n                    !isNodeOrChild(this.node.current, endEvent.target)\n                        ? onTapCancel && onTapCancel(endEvent, endInfo)\n                        : onTap && onTap(endEvent, endInfo);\n                });\n            };\n            const removePointerUpListener = addPointerEvent(window, \"pointerup\", endPointerPress, { passive: !(props.onTap || props[\"onPointerUp\"]) });\n            const removePointerCancelListener = addPointerEvent(window, \"pointercancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo), { passive: !(props.onTapCancel || props[\"onPointerCancel\"]) });\n            this.removeEndListeners = pipe(removePointerUpListener, removePointerCancelListener);\n            this.startPress(startEvent, startInfo);\n        };\n        this.startAccessiblePress = () => {\n            const handleKeydown = (keydownEvent) => {\n                if (keydownEvent.key !== \"Enter\" || this.isPressing)\n                    return;\n                const handleKeyup = (keyupEvent) => {\n                    if (keyupEvent.key !== \"Enter\" || !this.checkPressEnd())\n                        return;\n                    fireSyntheticPointerEvent(\"up\", (event, info) => {\n                        const { onTap } = this.node.getProps();\n                        if (onTap) {\n                            frame.update(() => onTap(event, info));\n                        }\n                    });\n                };\n                this.removeEndListeners();\n                this.removeEndListeners = addDomEvent(this.node.current, \"keyup\", handleKeyup);\n                fireSyntheticPointerEvent(\"down\", (event, info) => {\n                    this.startPress(event, info);\n                });\n            };\n            const removeKeydownListener = addDomEvent(this.node.current, \"keydown\", handleKeydown);\n            const handleBlur = () => {\n                if (!this.isPressing)\n                    return;\n                fireSyntheticPointerEvent(\"cancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo));\n            };\n            const removeBlurListener = addDomEvent(this.node.current, \"blur\", handleBlur);\n            this.removeAccessibleListeners = pipe(removeKeydownListener, removeBlurListener);\n        };\n    }\n    startPress(event, info) {\n        this.isPressing = true;\n        const { onTapStart, whileTap } = this.node.getProps();\n        /**\n         * Ensure we trigger animations before firing event callback\n         */\n        if (whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", true);\n        }\n        if (onTapStart) {\n            frame.update(() => onTapStart(event, info));\n        }\n    }\n    checkPressEnd() {\n        this.removeEndListeners();\n        this.isPressing = false;\n        const props = this.node.getProps();\n        if (props.whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", false);\n        }\n        return !isDragActive();\n    }\n    cancelPress(event, info) {\n        if (!this.checkPressEnd())\n            return;\n        const { onTapCancel } = this.node.getProps();\n        if (onTapCancel) {\n            frame.update(() => onTapCancel(event, info));\n        }\n    }\n    mount() {\n        const props = this.node.getProps();\n        const removePointerListener = addPointerEvent(this.node.current, \"pointerdown\", this.startPointerPress, { passive: !(props.onTapStart || props[\"onPointerStart\"]) });\n        const removeFocusListener = addDomEvent(this.node.current, \"focus\", this.startAccessiblePress);\n        this.removeStartListeners = pipe(removePointerListener, removeFocusListener);\n    }\n    unmount() {\n        this.removeStartListeners();\n        this.removeEndListeners();\n        this.removeAccessibleListeners();\n    }\n}\n\nexport { PressGesture };\n","/**\n * Map an IntersectionHandler callback to an element. We only ever make one handler for one\n * element, so even though these handlers might all be triggered by different\n * observers, we can keep them in the same map.\n */\nconst observerCallbacks = new WeakMap();\n/**\n * Multiple observers can be created for multiple element/document roots. Each with\n * different settings. So here we store dictionaries of observers to each root,\n * using serialised settings (threshold/margin) as lookup keys.\n */\nconst observers = new WeakMap();\nconst fireObserverCallback = (entry) => {\n    const callback = observerCallbacks.get(entry.target);\n    callback && callback(entry);\n};\nconst fireAllObserverCallbacks = (entries) => {\n    entries.forEach(fireObserverCallback);\n};\nfunction initIntersectionObserver({ root, ...options }) {\n    const lookupRoot = root || document;\n    /**\n     * If we don't have an observer lookup map for this root, create one.\n     */\n    if (!observers.has(lookupRoot)) {\n        observers.set(lookupRoot, {});\n    }\n    const rootObservers = observers.get(lookupRoot);\n    const key = JSON.stringify(options);\n    /**\n     * If we don't have an observer for this combination of root and settings,\n     * create one.\n     */\n    if (!rootObservers[key]) {\n        rootObservers[key] = new IntersectionObserver(fireAllObserverCallbacks, { root, ...options });\n    }\n    return rootObservers[key];\n}\nfunction observeIntersection(element, options, callback) {\n    const rootInteresectionObserver = initIntersectionObserver(options);\n    observerCallbacks.set(element, callback);\n    rootInteresectionObserver.observe(element);\n    return () => {\n        observerCallbacks.delete(element);\n        rootInteresectionObserver.unobserve(element);\n    };\n}\n\nexport { observeIntersection };\n","import { Feature } from '../Feature.mjs';\nimport { observeIntersection } from './observers.mjs';\n\nconst thresholdNames = {\n    some: 0,\n    all: 1,\n};\nclass InViewFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.hasEnteredView = false;\n        this.isInView = false;\n    }\n    startObserver() {\n        this.unmount();\n        const { viewport = {} } = this.node.getProps();\n        const { root, margin: rootMargin, amount = \"some\", once } = viewport;\n        const options = {\n            root: root ? root.current : undefined,\n            rootMargin,\n            threshold: typeof amount === \"number\" ? amount : thresholdNames[amount],\n        };\n        const onIntersectionUpdate = (entry) => {\n            const { isIntersecting } = entry;\n            /**\n             * If there's been no change in the viewport state, early return.\n             */\n            if (this.isInView === isIntersecting)\n                return;\n            this.isInView = isIntersecting;\n            /**\n             * Handle hasEnteredView. If this is only meant to run once, and\n             * element isn't visible, early return. Otherwise set hasEnteredView to true.\n             */\n            if (once && !isIntersecting && this.hasEnteredView) {\n                return;\n            }\n            else if (isIntersecting) {\n                this.hasEnteredView = true;\n            }\n            if (this.node.animationState) {\n                this.node.animationState.setActive(\"whileInView\", isIntersecting);\n            }\n            /**\n             * Use the latest committed props rather than the ones in scope\n             * when this observer is created\n             */\n            const { onViewportEnter, onViewportLeave } = this.node.getProps();\n            const callback = isIntersecting ? onViewportEnter : onViewportLeave;\n            callback && callback(entry);\n        };\n        return observeIntersection(this.node.current, options, onIntersectionUpdate);\n    }\n    mount() {\n        this.startObserver();\n    }\n    update() {\n        if (typeof IntersectionObserver === \"undefined\")\n            return;\n        const { props, prevProps } = this.node;\n        const hasOptionsChanged = [\"amount\", \"margin\", \"root\"].some(hasViewportOptionChanged(props, prevProps));\n        if (hasOptionsChanged) {\n            this.startObserver();\n        }\n    }\n    unmount() { }\n}\nfunction hasViewportOptionChanged({ viewport = {} }, { viewport: prevViewport = {} } = {}) {\n    return (name) => viewport[name] !== prevViewport[name];\n}\n\nexport { InViewFeature };\n","import { HoverGesture } from '../../gestures/hover.mjs';\nimport { FocusGesture } from '../../gestures/focus.mjs';\nimport { PressGesture } from '../../gestures/press.mjs';\nimport { InViewFeature } from './viewport/index.mjs';\n\nconst gestureAnimations = {\n    inView: {\n        Feature: InViewFeature,\n    },\n    tap: {\n        Feature: PressGesture,\n    },\n    focus: {\n        Feature: FocusGesture,\n    },\n    hover: {\n        Feature: HoverGesture,\n    },\n};\n\nexport { gestureAnimations };\n","function shallowCompare(next, prev) {\n    if (!Array.isArray(prev))\n        return false;\n    const prevLength = prev.length;\n    if (prevLength !== next.length)\n        return false;\n    for (let i = 0; i < prevLength; i++) {\n        if (prev[i] !== next[i])\n            return false;\n    }\n    return true;\n}\n\nexport { shallowCompare };\n","import { resolveVariantFromProps } from './resolve-variants.mjs';\n\n/**\n * Creates an object containing the latest state of every MotionValue on a VisualElement\n */\nfunction getCurrent(visualElement) {\n    const current = {};\n    visualElement.values.forEach((value, key) => (current[key] = value.get()));\n    return current;\n}\n/**\n * Creates an object containing the latest velocity of every MotionValue on a VisualElement\n */\nfunction getVelocity(visualElement) {\n    const velocity = {};\n    visualElement.values.forEach((value, key) => (velocity[key] = value.getVelocity()));\n    return velocity;\n}\nfunction resolveVariant(visualElement, definition, custom) {\n    const props = visualElement.getProps();\n    return resolveVariantFromProps(props, definition, custom !== undefined ? custom : props.custom, getCurrent(visualElement), getVelocity(visualElement));\n}\n\nexport { resolveVariant };\n","import { camelToDash } from '../../render/dom/utils/camel-to-dash.mjs';\n\nconst optimizedAppearDataId = \"framerAppearId\";\nconst optimizedAppearDataAttribute = \"data-\" + camelToDash(optimizedAppearDataId);\n\nexport { optimizedAppearDataAttribute, optimizedAppearDataId };\n","import { noop } from './noop.mjs';\n\nlet warning = noop;\nlet invariant = noop;\nif (process.env.NODE_ENV !== \"production\") {\n    warning = (check, message) => {\n        if (!check && typeof console !== \"undefined\") {\n            console.warn(message);\n        }\n    };\n    invariant = (check, message) => {\n        if (!check) {\n            throw new Error(message);\n        }\n    };\n}\n\nexport { invariant, warning };\n","/**\n * Converts seconds to milliseconds\n *\n * @param seconds - Time in seconds.\n * @return milliseconds - Converted time in milliseconds.\n */\nconst secondsToMilliseconds = (seconds) => seconds * 1000;\nconst millisecondsToSeconds = (milliseconds) => milliseconds / 1000;\n\nexport { millisecondsToSeconds, secondsToMilliseconds };\n","const instantAnimationState = {\n    current: false,\n};\n\nexport { instantAnimationState };\n","const isBezierDefinition = (easing) => Array.isArray(easing) && typeof easing[0] === \"number\";\n\nexport { isBezierDefinition };\n","import { isBezierDefinition } from '../../../easing/utils/is-bezier-definition.mjs';\n\nfunction isWaapiSupportedEasing(easing) {\n    return Boolean(!easing ||\n        (typeof easing === \"string\" && supportedWaapiEasing[easing]) ||\n        isBezierDefinition(easing) ||\n        (Array.isArray(easing) && easing.every(isWaapiSupportedEasing)));\n}\nconst cubicBezierAsString = ([a, b, c, d]) => `cubic-bezier(${a}, ${b}, ${c}, ${d})`;\nconst supportedWaapiEasing = {\n    linear: \"linear\",\n    ease: \"ease\",\n    easeIn: \"ease-in\",\n    easeOut: \"ease-out\",\n    easeInOut: \"ease-in-out\",\n    circIn: cubicBezierAsString([0, 0.65, 0.55, 1]),\n    circOut: cubicBezierAsString([0.55, 0, 1, 0.45]),\n    backIn: cubicBezierAsString([0.31, 0.01, 0.66, -0.59]),\n    backOut: cubicBezierAsString([0.33, 1.53, 0.69, 0.99]),\n};\nfunction mapEasingToNativeEasing(easing) {\n    if (!easing)\n        return undefined;\n    return isBezierDefinition(easing)\n        ? cubicBezierAsString(easing)\n        : Array.isArray(easing)\n            ? easing.map(mapEasingToNativeEasing)\n            : supportedWaapiEasing[easing];\n}\n\nexport { cubicBezierAsString, isWaapiSupportedEasing, mapEasingToNativeEasing, supportedWaapiEasing };\n","const featureTests = {\n    waapi: () => Object.hasOwnProperty.call(Element.prototype, \"animate\"),\n};\nconst results = {};\nconst supports = {};\n/**\n * Generate features tests that cache their results.\n */\nfor (const key in featureTests) {\n    supports[key] = () => {\n        if (results[key] === undefined)\n            results[key] = featureTests[key]();\n        return results[key];\n    };\n}\n\nexport { supports };\n","import { noop } from '../utils/noop.mjs';\n\n/*\n  Bezier function generator\n  This has been modified from Gaëtan Renaudeau's BezierEasing\n  https://github.com/gre/bezier-easing/blob/master/src/index.js\n  https://github.com/gre/bezier-easing/blob/master/LICENSE\n  \n  I've removed the newtonRaphsonIterate algo because in benchmarking it\n  wasn't noticiably faster than binarySubdivision, indeed removing it\n  usually improved times, depending on the curve.\n  I also removed the lookup table, as for the added bundle size and loop we're\n  only cutting ~4 or so subdivision iterations. I bumped the max iterations up\n  to 12 to compensate and this still tended to be faster for no perceivable\n  loss in accuracy.\n  Usage\n    const easeOut = cubicBezier(.17,.67,.83,.67);\n    const x = easeOut(0.5); // returns 0.627...\n*/\n// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\nconst calcBezier = (t, a1, a2) => (((1.0 - 3.0 * a2 + 3.0 * a1) * t + (3.0 * a2 - 6.0 * a1)) * t + 3.0 * a1) *\n    t;\nconst subdivisionPrecision = 0.0000001;\nconst subdivisionMaxIterations = 12;\nfunction binarySubdivide(x, lowerBound, upperBound, mX1, mX2) {\n    let currentX;\n    let currentT;\n    let i = 0;\n    do {\n        currentT = lowerBound + (upperBound - lowerBound) / 2.0;\n        currentX = calcBezier(currentT, mX1, mX2) - x;\n        if (currentX > 0.0) {\n            upperBound = currentT;\n        }\n        else {\n            lowerBound = currentT;\n        }\n    } while (Math.abs(currentX) > subdivisionPrecision &&\n        ++i < subdivisionMaxIterations);\n    return currentT;\n}\nfunction cubicBezier(mX1, mY1, mX2, mY2) {\n    // If this is a linear gradient, return linear easing\n    if (mX1 === mY1 && mX2 === mY2)\n        return noop;\n    const getTForX = (aX) => binarySubdivide(aX, 0, 1, mX1, mX2);\n    // If animation is at start/end, return t without easing\n    return (t) => t === 0 || t === 1 ? t : calcBezier(getTForX(t), mY1, mY2);\n}\n\nexport { cubicBezier };\n","import { cubicBezier } from './cubic-bezier.mjs';\n\nconst easeIn = cubicBezier(0.42, 0, 1, 1);\nconst easeOut = cubicBezier(0, 0, 0.58, 1);\nconst easeInOut = cubicBezier(0.42, 0, 0.58, 1);\n\nexport { easeIn, easeInOut, easeOut };\n","// Accepts an easing function and returns a new one that outputs mirrored values for\n// the second half of the animation. Turns easeIn into easeInOut.\nconst mirrorEasing = (easing) => (p) => p <= 0.5 ? easing(2 * p) / 2 : (2 - easing(2 * (1 - p))) / 2;\n\nexport { mirrorEasing };\n","// Accepts an easing function and returns a new one that outputs reversed values.\n// Turns easeIn into easeOut.\nconst reverseEasing = (easing) => (p) => 1 - easing(1 - p);\n\nexport { reverseEasing };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst circIn = (p) => 1 - Math.sin(Math.acos(p));\nconst circOut = reverseEasing(circIn);\nconst circInOut = mirrorEasing(circOut);\n\nexport { circIn, circInOut, circOut };\n","import { cubicBezier } from './cubic-bezier.mjs';\nimport { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst backOut = cubicBezier(0.33, 1.53, 0.69, 0.99);\nconst backIn = reverseEasing(backOut);\nconst backInOut = mirrorEasing(backIn);\n\nexport { backIn, backInOut, backOut };\n","import { invariant } from '../../utils/errors.mjs';\nimport { cubicBezier } from '../cubic-bezier.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { easeIn, easeInOut, easeOut } from '../ease.mjs';\nimport { circIn, circInOut, circOut } from '../circ.mjs';\nimport { backIn, backInOut, backOut } from '../back.mjs';\nimport { anticipate } from '../anticipate.mjs';\n\nconst easingLookup = {\n    linear: noop,\n    easeIn,\n    easeInOut,\n    easeOut,\n    circIn,\n    circInOut,\n    circOut,\n    backIn,\n    backInOut,\n    backOut,\n    anticipate,\n};\nconst easingDefinitionToFunction = (definition) => {\n    if (Array.isArray(definition)) {\n        // If cubic bezier definition, create bezier curve\n        invariant(definition.length === 4, `Cubic bezier arrays must contain four numerical values.`);\n        const [x1, y1, x2, y2] = definition;\n        return cubicBezier(x1, y1, x2, y2);\n    }\n    else if (typeof definition === \"string\") {\n        // Else lookup from table\n        invariant(easingLookup[definition] !== undefined, `Invalid easing type '${definition}'`);\n        return easingLookup[definition];\n    }\n    return definition;\n};\n\nexport { easingDefinitionToFunction };\n","import { backIn } from './back.mjs';\n\nconst anticipate = (p) => (p *= 2) < 1 ? 0.5 * backIn(p) : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));\n\nexport { anticipate };\n","import { isString, singleColorRegex, floatRegex } from '../utils.mjs';\n\n/**\n * Returns true if the provided string is a color, ie rgba(0,0,0,0) or #000,\n * but false if a number or multiple colors\n */\nconst isColorString = (type, testProp) => (v) => {\n    return Boolean((isString(v) && singleColorRegex.test(v) && v.startsWith(type)) ||\n        (testProp && Object.prototype.hasOwnProperty.call(v, testProp)));\n};\nconst splitColor = (aName, bName, cName) => (v) => {\n    if (!isString(v))\n        return v;\n    const [a, b, c, alpha] = v.match(floatRegex);\n    return {\n        [aName]: parseFloat(a),\n        [bName]: parseFloat(b),\n        [cName]: parseFloat(c),\n        alpha: alpha !== undefined ? parseFloat(alpha) : 1,\n    };\n};\n\nexport { isColorString, splitColor };\n","import { clamp } from '../../../utils/clamp.mjs';\nimport { number, alpha } from '../numbers/index.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst clampRgbUnit = (v) => clamp(0, 255, v);\nconst rgbUnit = {\n    ...number,\n    transform: (v) => Math.round(clampRgbUnit(v)),\n};\nconst rgba = {\n    test: isColorString(\"rgb\", \"red\"),\n    parse: splitColor(\"red\", \"green\", \"blue\"),\n    transform: ({ red, green, blue, alpha: alpha$1 = 1 }) => \"rgba(\" +\n        rgbUnit.transform(red) +\n        \", \" +\n        rgbUnit.transform(green) +\n        \", \" +\n        rgbUnit.transform(blue) +\n        \", \" +\n        sanitize(alpha.transform(alpha$1)) +\n        \")\",\n};\n\nexport { rgbUnit, rgba };\n","import { rgba } from './rgba.mjs';\nimport { isColorString } from './utils.mjs';\n\nfunction parseHex(v) {\n    let r = \"\";\n    let g = \"\";\n    let b = \"\";\n    let a = \"\";\n    // If we have 6 characters, ie #FF0000\n    if (v.length > 5) {\n        r = v.substring(1, 3);\n        g = v.substring(3, 5);\n        b = v.substring(5, 7);\n        a = v.substring(7, 9);\n        // Or we have 3 characters, ie #F00\n    }\n    else {\n        r = v.substring(1, 2);\n        g = v.substring(2, 3);\n        b = v.substring(3, 4);\n        a = v.substring(4, 5);\n        r += r;\n        g += g;\n        b += b;\n        a += a;\n    }\n    return {\n        red: parseInt(r, 16),\n        green: parseInt(g, 16),\n        blue: parseInt(b, 16),\n        alpha: a ? parseInt(a, 16) / 255 : 1,\n    };\n}\nconst hex = {\n    test: isColorString(\"#\"),\n    parse: parseHex,\n    transform: rgba.transform,\n};\n\nexport { hex };\n","import { alpha } from '../numbers/index.mjs';\nimport { percent } from '../numbers/units.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst hsla = {\n    test: isColorString(\"hsl\", \"hue\"),\n    parse: splitColor(\"hue\", \"saturation\", \"lightness\"),\n    transform: ({ hue, saturation, lightness, alpha: alpha$1 = 1 }) => {\n        return (\"hsla(\" +\n            Math.round(hue) +\n            \", \" +\n            percent.transform(sanitize(saturation)) +\n            \", \" +\n            percent.transform(sanitize(lightness)) +\n            \", \" +\n            sanitize(alpha.transform(alpha$1)) +\n            \")\");\n    },\n};\n\nexport { hsla };\n","import { isString } from '../utils.mjs';\nimport { hex } from './hex.mjs';\nimport { hsla } from './hsla.mjs';\nimport { rgba } from './rgba.mjs';\n\nconst color = {\n    test: (v) => rgba.test(v) || hex.test(v) || hsla.test(v),\n    parse: (v) => {\n        if (rgba.test(v)) {\n            return rgba.parse(v);\n        }\n        else if (hsla.test(v)) {\n            return hsla.parse(v);\n        }\n        else {\n            return hex.parse(v);\n        }\n    },\n    transform: (v) => {\n        return isString(v)\n            ? v\n            : v.hasOwnProperty(\"red\")\n                ? rgba.transform(v)\n                : hsla.transform(v);\n    },\n};\n\nexport { color };\n","/*\n  Value in range from progress\n\n  Given a lower limit and an upper limit, we return the value within\n  that range as expressed by progress (usually a number from 0 to 1)\n\n  So progress = 0.5 would change\n\n  from -------- to\n\n  to\n\n  from ---- to\n\n  E.g. from = 10, to = 20, progress = 0.5 => 15\n\n  @param [number]: Lower limit of range\n  @param [number]: Upper limit of range\n  @param [number]: The progress between lower and upper limits expressed 0-1\n  @return [number]: Value as calculated from progress within range (not limited within range)\n*/\nconst mix = (from, to, progress) => -progress * from + progress * to + from;\n\nexport { mix };\n","// Adapted from https://gist.github.com/mjackson/5311256\nfunction hueToRgb(p, q, t) {\n    if (t < 0)\n        t += 1;\n    if (t > 1)\n        t -= 1;\n    if (t < 1 / 6)\n        return p + (q - p) * 6 * t;\n    if (t < 1 / 2)\n        return q;\n    if (t < 2 / 3)\n        return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\nfunction hslaToRgba({ hue, saturation, lightness, alpha }) {\n    hue /= 360;\n    saturation /= 100;\n    lightness /= 100;\n    let red = 0;\n    let green = 0;\n    let blue = 0;\n    if (!saturation) {\n        red = green = blue = lightness;\n    }\n    else {\n        const q = lightness < 0.5\n            ? lightness * (1 + saturation)\n            : lightness + saturation - lightness * saturation;\n        const p = 2 * lightness - q;\n        red = hueToRgb(p, q, hue + 1 / 3);\n        green = hueToRgb(p, q, hue);\n        blue = hueToRgb(p, q, hue - 1 / 3);\n    }\n    return {\n        red: Math.round(red * 255),\n        green: Math.round(green * 255),\n        blue: Math.round(blue * 255),\n        alpha,\n    };\n}\n\nexport { hslaToRgba };\n","import { mix } from './mix.mjs';\nimport { invariant } from './errors.mjs';\nimport { hslaToRgba } from './hsla-to-rgba.mjs';\nimport { hex } from '../value/types/color/hex.mjs';\nimport { rgba } from '../value/types/color/rgba.mjs';\nimport { hsla } from '../value/types/color/hsla.mjs';\n\n// Linear color space blending\n// Explained https://www.youtube.com/watch?v=LKnqECcg6Gw\n// Demonstrated http://codepen.io/osublake/pen/xGVVaN\nconst mixLinearColor = (from, to, v) => {\n    const fromExpo = from * from;\n    return Math.sqrt(Math.max(0, v * (to * to - fromExpo) + fromExpo));\n};\nconst colorTypes = [hex, rgba, hsla];\nconst getColorType = (v) => colorTypes.find((type) => type.test(v));\nfunction asRGBA(color) {\n    const type = getColorType(color);\n    invariant(Boolean(type), `'${color}' is not an animatable color. Use the equivalent color code instead.`);\n    let model = type.parse(color);\n    if (type === hsla) {\n        // TODO Remove this cast - needed since Framer Motion's stricter typing\n        model = hslaToRgba(model);\n    }\n    return model;\n}\nconst mixColor = (from, to) => {\n    const fromRGBA = asRGBA(from);\n    const toRGBA = asRGBA(to);\n    const blended = { ...fromRGBA };\n    return (v) => {\n        blended.red = mixLinearColor(fromRGBA.red, toRGBA.red, v);\n        blended.green = mixLinearColor(fromRGBA.green, toRGBA.green, v);\n        blended.blue = mixLinearColor(fromRGBA.blue, toRGBA.blue, v);\n        blended.alpha = mix(fromRGBA.alpha, toRGBA.alpha, v);\n        return rgba.transform(blended);\n    };\n};\n\nexport { mixColor, mixLinearColor };\n","import { cssVariableRegex } from '../../../render/dom/utils/is-css-variable.mjs';\nimport { noop } from '../../../utils/noop.mjs';\nimport { color } from '../color/index.mjs';\nimport { number } from '../numbers/index.mjs';\nimport { colorRegex, floatRegex, isString, sanitize } from '../utils.mjs';\n\nfunction test(v) {\n    var _a, _b;\n    return (isNaN(v) &&\n        isString(v) &&\n        (((_a = v.match(floatRegex)) === null || _a === void 0 ? void 0 : _a.length) || 0) +\n            (((_b = v.match(colorRegex)) === null || _b === void 0 ? void 0 : _b.length) || 0) >\n            0);\n}\nconst cssVarTokeniser = {\n    regex: cssVariableRegex,\n    countKey: \"Vars\",\n    token: \"${v}\",\n    parse: noop,\n};\nconst colorTokeniser = {\n    regex: colorRegex,\n    countKey: \"Colors\",\n    token: \"${c}\",\n    parse: color.parse,\n};\nconst numberTokeniser = {\n    regex: floatRegex,\n    countKey: \"Numbers\",\n    token: \"${n}\",\n    parse: number.parse,\n};\nfunction tokenise(info, { regex, countKey, token, parse }) {\n    const matches = info.tokenised.match(regex);\n    if (!matches)\n        return;\n    info[\"num\" + countKey] = matches.length;\n    info.tokenised = info.tokenised.replace(regex, token);\n    info.values.push(...matches.map(parse));\n}\nfunction analyseComplexValue(value) {\n    const originalValue = value.toString();\n    const info = {\n        value: originalValue,\n        tokenised: originalValue,\n        values: [],\n        numVars: 0,\n        numColors: 0,\n        numNumbers: 0,\n    };\n    if (info.value.includes(\"var(--\"))\n        tokenise(info, cssVarTokeniser);\n    tokenise(info, colorTokeniser);\n    tokenise(info, numberTokeniser);\n    return info;\n}\nfunction parseComplexValue(v) {\n    return analyseComplexValue(v).values;\n}\nfunction createTransformer(source) {\n    const { values, numColors, numVars, tokenised } = analyseComplexValue(source);\n    const numValues = values.length;\n    return (v) => {\n        let output = tokenised;\n        for (let i = 0; i < numValues; i++) {\n            if (i < numVars) {\n                output = output.replace(cssVarTokeniser.token, v[i]);\n            }\n            else if (i < numVars + numColors) {\n                output = output.replace(colorTokeniser.token, color.transform(v[i]));\n            }\n            else {\n                output = output.replace(numberTokeniser.token, sanitize(v[i]));\n            }\n        }\n        return output;\n    };\n}\nconst convertNumbersToZero = (v) => typeof v === \"number\" ? 0 : v;\nfunction getAnimatableNone(v) {\n    const parsed = parseComplexValue(v);\n    const transformer = createTransformer(v);\n    return transformer(parsed.map(convertNumbersToZero));\n}\nconst complex = {\n    test,\n    parse: parseComplexValue,\n    createTransformer,\n    getAnimatableNone,\n};\n\nexport { analyseComplexValue, complex };\n","import { mix } from './mix.mjs';\nimport { mixColor } from './mix-color.mjs';\nimport { pipe } from './pipe.mjs';\nimport { warning } from './errors.mjs';\nimport { color } from '../value/types/color/index.mjs';\nimport { complex, analyseComplexValue } from '../value/types/complex/index.mjs';\n\nconst mixImmediate = (origin, target) => (p) => `${p > 0 ? target : origin}`;\nfunction getMixer(origin, target) {\n    if (typeof origin === \"number\") {\n        return (v) => mix(origin, target, v);\n    }\n    else if (color.test(origin)) {\n        return mixColor(origin, target);\n    }\n    else {\n        return origin.startsWith(\"var(\")\n            ? mixImmediate(origin, target)\n            : mixComplex(origin, target);\n    }\n}\nconst mixArray = (from, to) => {\n    const output = [...from];\n    const numValues = output.length;\n    const blendValue = from.map((fromThis, i) => getMixer(fromThis, to[i]));\n    return (v) => {\n        for (let i = 0; i < numValues; i++) {\n            output[i] = blendValue[i](v);\n        }\n        return output;\n    };\n};\nconst mixObject = (origin, target) => {\n    const output = { ...origin, ...target };\n    const blendValue = {};\n    for (const key in output) {\n        if (origin[key] !== undefined && target[key] !== undefined) {\n            blendValue[key] = getMixer(origin[key], target[key]);\n        }\n    }\n    return (v) => {\n        for (const key in blendValue) {\n            output[key] = blendValue[key](v);\n        }\n        return output;\n    };\n};\nconst mixComplex = (origin, target) => {\n    const template = complex.createTransformer(target);\n    const originStats = analyseComplexValue(origin);\n    const targetStats = analyseComplexValue(target);\n    const canInterpolate = originStats.numVars === targetStats.numVars &&\n        originStats.numColors === targetStats.numColors &&\n        originStats.numNumbers >= targetStats.numNumbers;\n    if (canInterpolate) {\n        return pipe(mixArray(originStats.values, targetStats.values), template);\n    }\n    else {\n        warning(true, `Complex values '${origin}' and '${target}' too different to mix. Ensure all colors are of the same type, and that each contains the same quantity of number and color values. Falling back to instant transition.`);\n        return mixImmediate(origin, target);\n    }\n};\n\nexport { mixArray, mixComplex, mixObject };\n","/*\n  Progress within given range\n\n  Given a lower limit and an upper limit, we return the progress\n  (expressed as a number 0-1) represented by the given value, and\n  limit that progress to within 0-1.\n\n  @param [number]: Lower limit\n  @param [number]: Upper limit\n  @param [number]: Value to find progress within given range\n  @return [number]: Progress of value within range as expressed 0-1\n*/\nconst progress = (from, to, value) => {\n    const toFromDifference = to - from;\n    return toFromDifference === 0 ? 1 : (value - from) / toFromDifference;\n};\n\nexport { progress };\n","import { invariant } from './errors.mjs';\nimport { color } from '../value/types/color/index.mjs';\nimport { clamp } from './clamp.mjs';\nimport { mix } from './mix.mjs';\nimport { mixColor } from './mix-color.mjs';\nimport { mixComplex, mixArray, mixObject } from './mix-complex.mjs';\nimport { pipe } from './pipe.mjs';\nimport { progress } from './progress.mjs';\nimport { noop } from './noop.mjs';\n\nconst mixNumber = (from, to) => (p) => mix(from, to, p);\nfunction detectMixerFactory(v) {\n    if (typeof v === \"number\") {\n        return mixNumber;\n    }\n    else if (typeof v === \"string\") {\n        return color.test(v) ? mixColor : mixComplex;\n    }\n    else if (Array.isArray(v)) {\n        return mixArray;\n    }\n    else if (typeof v === \"object\") {\n        return mixObject;\n    }\n    return mixNumber;\n}\nfunction createMixers(output, ease, customMixer) {\n    const mixers = [];\n    const mixerFactory = customMixer || detectMixerFactory(output[0]);\n    const numMixers = output.length - 1;\n    for (let i = 0; i < numMixers; i++) {\n        let mixer = mixerFactory(output[i], output[i + 1]);\n        if (ease) {\n            const easingFunction = Array.isArray(ease) ? ease[i] || noop : ease;\n            mixer = pipe(easingFunction, mixer);\n        }\n        mixers.push(mixer);\n    }\n    return mixers;\n}\n/**\n * Create a function that maps from a numerical input array to a generic output array.\n *\n * Accepts:\n *   - Numbers\n *   - Colors (hex, hsl, hsla, rgb, rgba)\n *   - Complex (combinations of one or more numbers or strings)\n *\n * ```jsx\n * const mixColor = interpolate([0, 1], ['#fff', '#000'])\n *\n * mixColor(0.5) // 'rgba(128, 128, 128, 1)'\n * ```\n *\n * TODO Revist this approach once we've moved to data models for values,\n * probably not needed to pregenerate mixer functions.\n *\n * @public\n */\nfunction interpolate(input, output, { clamp: isClamp = true, ease, mixer } = {}) {\n    const inputLength = input.length;\n    invariant(inputLength === output.length, \"Both input and output ranges must be the same length\");\n    /**\n     * If we're only provided a single input, we can just make a function\n     * that returns the output.\n     */\n    if (inputLength === 1)\n        return () => output[0];\n    // If input runs highest -> lowest, reverse both arrays\n    if (input[0] > input[inputLength - 1]) {\n        input = [...input].reverse();\n        output = [...output].reverse();\n    }\n    const mixers = createMixers(output, ease, mixer);\n    const numMixers = mixers.length;\n    const interpolator = (v) => {\n        let i = 0;\n        if (numMixers > 1) {\n            for (; i < input.length - 2; i++) {\n                if (v < input[i + 1])\n                    break;\n            }\n        }\n        const progressInRange = progress(input[i], input[i + 1], v);\n        return mixers[i](progressInRange);\n    };\n    return isClamp\n        ? (v) => interpolator(clamp(input[0], input[inputLength - 1], v))\n        : interpolator;\n}\n\nexport { interpolate };\n","import { fillOffset } from './fill.mjs';\n\nfunction defaultOffset(arr) {\n    const offset = [0];\n    fillOffset(offset, arr.length - 1);\n    return offset;\n}\n\nexport { defaultOffset };\n","import { mix } from '../mix.mjs';\nimport { progress } from '../progress.mjs';\n\nfunction fillOffset(offset, remaining) {\n    const min = offset[offset.length - 1];\n    for (let i = 1; i <= remaining; i++) {\n        const offsetProgress = progress(0, remaining, i);\n        offset.push(mix(min, 1, offsetProgress));\n    }\n}\n\nexport { fillOffset };\n","import { easeInOut } from '../../easing/ease.mjs';\nimport { isEasingArray } from '../../easing/utils/is-easing-array.mjs';\nimport { easingDefinitionToFunction } from '../../easing/utils/map.mjs';\nimport { interpolate } from '../../utils/interpolate.mjs';\nimport { defaultOffset } from '../../utils/offsets/default.mjs';\nimport { convertOffsetToTimes } from '../../utils/offsets/time.mjs';\n\nfunction defaultEasing(values, easing) {\n    return values.map(() => easing || easeInOut).splice(0, values.length - 1);\n}\nfunction keyframes({ duration = 300, keyframes: keyframeValues, times, ease = \"easeInOut\", }) {\n    /**\n     * Easing functions can be externally defined as strings. Here we convert them\n     * into actual functions.\n     */\n    const easingFunctions = isEasingArray(ease)\n        ? ease.map(easingDefinitionToFunction)\n        : easingDefinitionToFunction(ease);\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = {\n        done: false,\n        value: keyframeValues[0],\n    };\n    /**\n     * Create a times array based on the provided 0-1 offsets\n     */\n    const absoluteTimes = convertOffsetToTimes(\n    // Only use the provided offsets if they're the correct length\n    // TODO Maybe we should warn here if there's a length mismatch\n    times && times.length === keyframeValues.length\n        ? times\n        : defaultOffset(keyframeValues), duration);\n    const mapTimeToKeyframe = interpolate(absoluteTimes, keyframeValues, {\n        ease: Array.isArray(easingFunctions)\n            ? easingFunctions\n            : defaultEasing(keyframeValues, easingFunctions),\n    });\n    return {\n        calculatedDuration: duration,\n        next: (t) => {\n            state.value = mapTimeToKeyframe(t);\n            state.done = t >= duration;\n            return state;\n        },\n    };\n}\n\nexport { defaultEasing, keyframes };\n","const isEasingArray = (ease) => {\n    return Array.isArray(ease) && typeof ease[0] !== \"number\";\n};\n\nexport { isEasingArray };\n","function convertOffsetToTimes(offset, duration) {\n    return offset.map((o) => o * duration);\n}\n\nexport { convertOffsetToTimes };\n","/*\n  Convert velocity into velocity per second\n\n  @param [number]: Unit per frame\n  @param [number]: Frame duration in ms\n*/\nfunction velocityPerSecond(velocity, frameDuration) {\n    return frameDuration ? velocity * (1000 / frameDuration) : 0;\n}\n\nexport { velocityPerSecond };\n","import { velocityPerSecond } from '../../../utils/velocity-per-second.mjs';\n\nconst velocitySampleDuration = 5; // ms\nfunction calcGeneratorVelocity(resolveValue, t, current) {\n    const prevT = Math.max(t - velocitySampleDuration, 0);\n    return velocityPerSecond(current - resolveValue(prevT), t - prevT);\n}\n\nexport { calcGeneratorVelocity };\n","import { warning } from '../../../utils/errors.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../../utils/time-conversion.mjs';\n\nconst safeMin = 0.001;\nconst minDuration = 0.01;\nconst maxDuration = 10.0;\nconst minDamping = 0.05;\nconst maxDamping = 1;\nfunction findSpring({ duration = 800, bounce = 0.25, velocity = 0, mass = 1, }) {\n    let envelope;\n    let derivative;\n    warning(duration <= secondsToMilliseconds(maxDuration), \"Spring duration must be 10 seconds or less\");\n    let dampingRatio = 1 - bounce;\n    /**\n     * Restrict dampingRatio and duration to within acceptable ranges.\n     */\n    dampingRatio = clamp(minDamping, maxDamping, dampingRatio);\n    duration = clamp(minDuration, maxDuration, millisecondsToSeconds(duration));\n    if (dampingRatio < 1) {\n        /**\n         * Underdamped spring\n         */\n        envelope = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const a = exponentialDecay - velocity;\n            const b = calcAngularFreq(undampedFreq, dampingRatio);\n            const c = Math.exp(-delta);\n            return safeMin - (a / b) * c;\n        };\n        derivative = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const d = delta * velocity + velocity;\n            const e = Math.pow(dampingRatio, 2) * Math.pow(undampedFreq, 2) * duration;\n            const f = Math.exp(-delta);\n            const g = calcAngularFreq(Math.pow(undampedFreq, 2), dampingRatio);\n            const factor = -envelope(undampedFreq) + safeMin > 0 ? -1 : 1;\n            return (factor * ((d - e) * f)) / g;\n        };\n    }\n    else {\n        /**\n         * Critically-damped spring\n         */\n        envelope = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (undampedFreq - velocity) * duration + 1;\n            return -safeMin + a * b;\n        };\n        derivative = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (velocity - undampedFreq) * (duration * duration);\n            return a * b;\n        };\n    }\n    const initialGuess = 5 / duration;\n    const undampedFreq = approximateRoot(envelope, derivative, initialGuess);\n    duration = secondsToMilliseconds(duration);\n    if (isNaN(undampedFreq)) {\n        return {\n            stiffness: 100,\n            damping: 10,\n            duration,\n        };\n    }\n    else {\n        const stiffness = Math.pow(undampedFreq, 2) * mass;\n        return {\n            stiffness,\n            damping: dampingRatio * 2 * Math.sqrt(mass * stiffness),\n            duration,\n        };\n    }\n}\nconst rootIterations = 12;\nfunction approximateRoot(envelope, derivative, initialGuess) {\n    let result = initialGuess;\n    for (let i = 1; i < rootIterations; i++) {\n        result = result - envelope(result) / derivative(result);\n    }\n    return result;\n}\nfunction calcAngularFreq(undampedFreq, dampingRatio) {\n    return undampedFreq * Math.sqrt(1 - dampingRatio * dampingRatio);\n}\n\nexport { calcAngularFreq, findSpring, maxDamping, maxDuration, minDamping, minDuration };\n","import { millisecondsToSeconds } from '../../../utils/time-conversion.mjs';\nimport { calcGeneratorVelocity } from '../utils/velocity.mjs';\nimport { findSpring, calcAngularFreq } from './find.mjs';\n\nconst durationKeys = [\"duration\", \"bounce\"];\nconst physicsKeys = [\"stiffness\", \"damping\", \"mass\"];\nfunction isSpringType(options, keys) {\n    return keys.some((key) => options[key] !== undefined);\n}\nfunction getSpringOptions(options) {\n    let springOptions = {\n        velocity: 0.0,\n        stiffness: 100,\n        damping: 10,\n        mass: 1.0,\n        isResolvedFromDuration: false,\n        ...options,\n    };\n    // stiffness/damping/mass overrides duration/bounce\n    if (!isSpringType(options, physicsKeys) &&\n        isSpringType(options, durationKeys)) {\n        const derived = findSpring(options);\n        springOptions = {\n            ...springOptions,\n            ...derived,\n            velocity: 0.0,\n            mass: 1.0,\n        };\n        springOptions.isResolvedFromDuration = true;\n    }\n    return springOptions;\n}\nfunction spring({ keyframes, restDelta, restSpeed, ...options }) {\n    const origin = keyframes[0];\n    const target = keyframes[keyframes.length - 1];\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    const { stiffness, damping, mass, velocity, duration, isResolvedFromDuration, } = getSpringOptions(options);\n    const initialVelocity = velocity ? -millisecondsToSeconds(velocity) : 0.0;\n    const dampingRatio = damping / (2 * Math.sqrt(stiffness * mass));\n    const initialDelta = target - origin;\n    const undampedAngularFreq = millisecondsToSeconds(Math.sqrt(stiffness / mass));\n    /**\n     * If we're working on a granular scale, use smaller defaults for determining\n     * when the spring is finished.\n     *\n     * These defaults have been selected emprically based on what strikes a good\n     * ratio between feeling good and finishing as soon as changes are imperceptible.\n     */\n    const isGranularScale = Math.abs(initialDelta) < 5;\n    restSpeed || (restSpeed = isGranularScale ? 0.01 : 2);\n    restDelta || (restDelta = isGranularScale ? 0.005 : 0.5);\n    let resolveSpring;\n    if (dampingRatio < 1) {\n        const angularFreq = calcAngularFreq(undampedAngularFreq, dampingRatio);\n        // Underdamped spring\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            return (target -\n                envelope *\n                    (((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) /\n                        angularFreq) *\n                        Math.sin(angularFreq * t) +\n                        initialDelta * Math.cos(angularFreq * t)));\n        };\n    }\n    else if (dampingRatio === 1) {\n        // Critically damped spring\n        resolveSpring = (t) => target -\n            Math.exp(-undampedAngularFreq * t) *\n                (initialDelta +\n                    (initialVelocity + undampedAngularFreq * initialDelta) * t);\n    }\n    else {\n        // Overdamped spring\n        const dampedAngularFreq = undampedAngularFreq * Math.sqrt(dampingRatio * dampingRatio - 1);\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            // When performing sinh or cosh values can hit Infinity so we cap them here\n            const freqForT = Math.min(dampedAngularFreq * t, 300);\n            return (target -\n                (envelope *\n                    ((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) *\n                        Math.sinh(freqForT) +\n                        dampedAngularFreq *\n                            initialDelta *\n                            Math.cosh(freqForT))) /\n                    dampedAngularFreq);\n        };\n    }\n    return {\n        calculatedDuration: isResolvedFromDuration ? duration || null : null,\n        next: (t) => {\n            const current = resolveSpring(t);\n            if (!isResolvedFromDuration) {\n                let currentVelocity = initialVelocity;\n                if (t !== 0) {\n                    /**\n                     * We only need to calculate velocity for under-damped springs\n                     * as over- and critically-damped springs can't overshoot, so\n                     * checking only for displacement is enough.\n                     */\n                    if (dampingRatio < 1) {\n                        currentVelocity = calcGeneratorVelocity(resolveSpring, t, current);\n                    }\n                    else {\n                        currentVelocity = 0;\n                    }\n                }\n                const isBelowVelocityThreshold = Math.abs(currentVelocity) <= restSpeed;\n                const isBelowDisplacementThreshold = Math.abs(target - current) <= restDelta;\n                state.done =\n                    isBelowVelocityThreshold && isBelowDisplacementThreshold;\n            }\n            else {\n                state.done = t >= duration;\n            }\n            state.value = state.done ? target : current;\n            return state;\n        },\n    };\n}\n\nexport { spring };\n","import { spring } from './spring/index.mjs';\nimport { calcGeneratorVelocity } from './utils/velocity.mjs';\n\nfunction inertia({ keyframes, velocity = 0.0, power = 0.8, timeConstant = 325, bounceDamping = 10, bounceStiffness = 500, modifyTarget, min, max, restDelta = 0.5, restSpeed, }) {\n    const origin = keyframes[0];\n    const state = {\n        done: false,\n        value: origin,\n    };\n    const isOutOfBounds = (v) => (min !== undefined && v < min) || (max !== undefined && v > max);\n    const nearestBoundary = (v) => {\n        if (min === undefined)\n            return max;\n        if (max === undefined)\n            return min;\n        return Math.abs(min - v) < Math.abs(max - v) ? min : max;\n    };\n    let amplitude = power * velocity;\n    const ideal = origin + amplitude;\n    const target = modifyTarget === undefined ? ideal : modifyTarget(ideal);\n    /**\n     * If the target has changed we need to re-calculate the amplitude, otherwise\n     * the animation will start from the wrong position.\n     */\n    if (target !== ideal)\n        amplitude = target - origin;\n    const calcDelta = (t) => -amplitude * Math.exp(-t / timeConstant);\n    const calcLatest = (t) => target + calcDelta(t);\n    const applyFriction = (t) => {\n        const delta = calcDelta(t);\n        const latest = calcLatest(t);\n        state.done = Math.abs(delta) <= restDelta;\n        state.value = state.done ? target : latest;\n    };\n    /**\n     * Ideally this would resolve for t in a stateless way, we could\n     * do that by always precalculating the animation but as we know\n     * this will be done anyway we can assume that spring will\n     * be discovered during that.\n     */\n    let timeReachedBoundary;\n    let spring$1;\n    const checkCatchBoundary = (t) => {\n        if (!isOutOfBounds(state.value))\n            return;\n        timeReachedBoundary = t;\n        spring$1 = spring({\n            keyframes: [state.value, nearestBoundary(state.value)],\n            velocity: calcGeneratorVelocity(calcLatest, t, state.value),\n            damping: bounceDamping,\n            stiffness: bounceStiffness,\n            restDelta,\n            restSpeed,\n        });\n    };\n    checkCatchBoundary(0);\n    return {\n        calculatedDuration: null,\n        next: (t) => {\n            /**\n             * We need to resolve the friction to figure out if we need a\n             * spring but we don't want to do this twice per frame. So here\n             * we flag if we updated for this frame and later if we did\n             * we can skip doing it again.\n             */\n            let hasUpdatedFrame = false;\n            if (!spring$1 && timeReachedBoundary === undefined) {\n                hasUpdatedFrame = true;\n                applyFriction(t);\n                checkCatchBoundary(t);\n            }\n            /**\n             * If we have a spring and the provided t is beyond the moment the friction\n             * animation crossed the min/max boundary, use the spring.\n             */\n            if (timeReachedBoundary !== undefined && t > timeReachedBoundary) {\n                return spring$1.next(t - timeReachedBoundary);\n            }\n            else {\n                !hasUpdatedFrame && applyFriction(t);\n                return state;\n            }\n        },\n    };\n}\n\nexport { inertia };\n","import { frame, cancelFrame } from '../../../frameloop/index.mjs';\nimport { frameData } from '../../../frameloop/data.mjs';\n\nconst frameloopDriver = (update) => {\n    const passTimestamp = ({ timestamp }) => update(timestamp);\n    return {\n        start: () => frame.update(passTimestamp, true),\n        stop: () => cancelFrame(passTimestamp),\n        /**\n         * If we're processing this frame we can use the\n         * framelocked timestamp to keep things in sync.\n         */\n        now: () => frameData.isProcessing ? frameData.timestamp : performance.now(),\n    };\n};\n\nexport { frameloopDriver };\n","/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxGeneratorDuration = 20000;\nfunction calcGeneratorDuration(generator) {\n    let duration = 0;\n    const timeStep = 50;\n    let state = generator.next(duration);\n    while (!state.done && duration < maxGeneratorDuration) {\n        duration += timeStep;\n        state = generator.next(duration);\n    }\n    return duration >= maxGeneratorDuration ? Infinity : duration;\n}\n\nexport { calcGeneratorDuration, maxGeneratorDuration };\n","import { keyframes } from '../../generators/keyframes.mjs';\nimport { spring } from '../../generators/spring/index.mjs';\nimport { inertia } from '../../generators/inertia.mjs';\nimport { frameloopDriver } from './driver-frameloop.mjs';\nimport { interpolate } from '../../../utils/interpolate.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../../utils/time-conversion.mjs';\nimport { calcGeneratorDuration } from '../../generators/utils/calc-duration.mjs';\n\nconst types = {\n    decay: inertia,\n    inertia,\n    tween: keyframes,\n    keyframes: keyframes,\n    spring,\n};\n/**\n * Animate a single value on the main thread.\n *\n * This function is written, where functionality overlaps,\n * to be largely spec-compliant with WAAPI to allow fungibility\n * between the two.\n */\nfunction animateValue({ autoplay = true, delay = 0, driver = frameloopDriver, keyframes: keyframes$1, type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType = \"loop\", onPlay, onStop, onComplete, onUpdate, ...options }) {\n    let speed = 1;\n    let hasStopped = false;\n    let resolveFinishedPromise;\n    let currentFinishedPromise;\n    /**\n     * Create a new finished Promise every time we enter the\n     * finished state and resolve the old Promise. This is\n     * WAAPI-compatible behaviour.\n     */\n    const updateFinishedPromise = () => {\n        resolveFinishedPromise && resolveFinishedPromise();\n        currentFinishedPromise = new Promise((resolve) => {\n            resolveFinishedPromise = resolve;\n        });\n    };\n    // Create the first finished promise\n    updateFinishedPromise();\n    let animationDriver;\n    const generatorFactory = types[type] || keyframes;\n    /**\n     * If this isn't the keyframes generator and we've been provided\n     * strings as keyframes, we need to interpolate these.\n     * TODO: Support velocity for units and complex value types/\n     */\n    let mapNumbersToKeyframes;\n    if (generatorFactory !== keyframes &&\n        typeof keyframes$1[0] !== \"number\") {\n        mapNumbersToKeyframes = interpolate([0, 100], keyframes$1, {\n            clamp: false,\n        });\n        keyframes$1 = [0, 100];\n    }\n    const generator = generatorFactory({ ...options, keyframes: keyframes$1 });\n    let mirroredGenerator;\n    if (repeatType === \"mirror\") {\n        mirroredGenerator = generatorFactory({\n            ...options,\n            keyframes: [...keyframes$1].reverse(),\n            velocity: -(options.velocity || 0),\n        });\n    }\n    let playState = \"idle\";\n    let holdTime = null;\n    let startTime = null;\n    let cancelTime = null;\n    /**\n     * If duration is undefined and we have repeat options,\n     * we need to calculate a duration from the generator.\n     *\n     * We set it to the generator itself to cache the duration.\n     * Any timeline resolver will need to have already precalculated\n     * the duration by this step.\n     */\n    if (generator.calculatedDuration === null && repeat) {\n        generator.calculatedDuration = calcGeneratorDuration(generator);\n    }\n    const { calculatedDuration } = generator;\n    let resolvedDuration = Infinity;\n    let totalDuration = Infinity;\n    if (calculatedDuration !== null) {\n        resolvedDuration = calculatedDuration + repeatDelay;\n        totalDuration = resolvedDuration * (repeat + 1) - repeatDelay;\n    }\n    let currentTime = 0;\n    const tick = (timestamp) => {\n        if (startTime === null)\n            return;\n        /**\n         * requestAnimationFrame timestamps can come through as lower than\n         * the startTime as set by performance.now(). Here we prevent this,\n         * though in the future it could be possible to make setting startTime\n         * a pending operation that gets resolved here.\n         */\n        if (speed > 0)\n            startTime = Math.min(startTime, timestamp);\n        if (holdTime !== null) {\n            currentTime = holdTime;\n        }\n        else {\n            currentTime = (timestamp - startTime) * speed;\n        }\n        // Rebase on delay\n        const timeWithoutDelay = currentTime - delay;\n        const isInDelayPhase = timeWithoutDelay < 0;\n        currentTime = Math.max(timeWithoutDelay, 0);\n        /**\n         * If this animation has finished, set the current time\n         * to the total duration.\n         */\n        if (playState === \"finished\" && holdTime === null) {\n            currentTime = totalDuration;\n        }\n        let elapsed = currentTime;\n        let frameGenerator = generator;\n        if (repeat) {\n            /**\n             * Get the current progress (0-1) of the animation. If t is >\n             * than duration we'll get values like 2.5 (midway through the\n             * third iteration)\n             */\n            const progress = currentTime / resolvedDuration;\n            /**\n             * Get the current iteration (0 indexed). For instance the floor of\n             * 2.5 is 2.\n             */\n            let currentIteration = Math.floor(progress);\n            /**\n             * Get the current progress of the iteration by taking the remainder\n             * so 2.5 is 0.5 through iteration 2\n             */\n            let iterationProgress = progress % 1.0;\n            /**\n             * If iteration progress is 1 we count that as the end\n             * of the previous iteration.\n             */\n            if (!iterationProgress && progress >= 1) {\n                iterationProgress = 1;\n            }\n            iterationProgress === 1 && currentIteration--;\n            currentIteration = Math.min(currentIteration, repeat + 1);\n            /**\n             * Reverse progress if we're not running in \"normal\" direction\n             */\n            const iterationIsOdd = Boolean(currentIteration % 2);\n            if (iterationIsOdd) {\n                if (repeatType === \"reverse\") {\n                    iterationProgress = 1 - iterationProgress;\n                    if (repeatDelay) {\n                        iterationProgress -= repeatDelay / resolvedDuration;\n                    }\n                }\n                else if (repeatType === \"mirror\") {\n                    frameGenerator = mirroredGenerator;\n                }\n            }\n            let p = clamp(0, 1, iterationProgress);\n            if (currentTime > totalDuration) {\n                p = repeatType === \"reverse\" && iterationIsOdd ? 1 : 0;\n            }\n            elapsed = p * resolvedDuration;\n        }\n        /**\n         * If we're in negative time, set state as the initial keyframe.\n         * This prevents delay: x, duration: 0 animations from finishing\n         * instantly.\n         */\n        const state = isInDelayPhase\n            ? { done: false, value: keyframes$1[0] }\n            : frameGenerator.next(elapsed);\n        if (mapNumbersToKeyframes) {\n            state.value = mapNumbersToKeyframes(state.value);\n        }\n        let { done } = state;\n        if (!isInDelayPhase && calculatedDuration !== null) {\n            done = currentTime >= totalDuration;\n        }\n        const isAnimationFinished = holdTime === null &&\n            (playState === \"finished\" ||\n                (playState === \"running\" && done) ||\n                (speed < 0 && currentTime <= 0));\n        if (onUpdate) {\n            onUpdate(state.value);\n        }\n        if (isAnimationFinished) {\n            finish();\n        }\n        return state;\n    };\n    const stopAnimationDriver = () => {\n        animationDriver && animationDriver.stop();\n        animationDriver = undefined;\n    };\n    const cancel = () => {\n        playState = \"idle\";\n        stopAnimationDriver();\n        updateFinishedPromise();\n        startTime = cancelTime = null;\n    };\n    const finish = () => {\n        playState = \"finished\";\n        onComplete && onComplete();\n        stopAnimationDriver();\n        updateFinishedPromise();\n    };\n    const play = () => {\n        if (hasStopped)\n            return;\n        if (!animationDriver)\n            animationDriver = driver(tick);\n        const now = animationDriver.now();\n        onPlay && onPlay();\n        if (holdTime !== null) {\n            startTime = now - holdTime;\n        }\n        else if (!startTime || playState === \"finished\") {\n            startTime = now;\n        }\n        cancelTime = startTime;\n        holdTime = null;\n        /**\n         * Set playState to running only after we've used it in\n         * the previous logic.\n         */\n        playState = \"running\";\n        animationDriver.start();\n    };\n    if (autoplay) {\n        play();\n    }\n    const controls = {\n        then(resolve, reject) {\n            return currentFinishedPromise.then(resolve, reject);\n        },\n        get time() {\n            return millisecondsToSeconds(currentTime);\n        },\n        set time(newTime) {\n            newTime = secondsToMilliseconds(newTime);\n            currentTime = newTime;\n            if (holdTime !== null || !animationDriver || speed === 0) {\n                holdTime = newTime;\n            }\n            else {\n                startTime = animationDriver.now() - newTime / speed;\n            }\n        },\n        get duration() {\n            const duration = generator.calculatedDuration === null\n                ? calcGeneratorDuration(generator)\n                : generator.calculatedDuration;\n            return millisecondsToSeconds(duration);\n        },\n        get speed() {\n            return speed;\n        },\n        set speed(newSpeed) {\n            if (newSpeed === speed || !animationDriver)\n                return;\n            speed = newSpeed;\n            controls.time = millisecondsToSeconds(currentTime);\n        },\n        get state() {\n            return playState;\n        },\n        play,\n        pause: () => {\n            playState = \"paused\";\n            holdTime = currentTime;\n        },\n        stop: () => {\n            hasStopped = true;\n            if (playState === \"idle\")\n                return;\n            playState = \"idle\";\n            onStop && onStop();\n            cancel();\n        },\n        cancel: () => {\n            if (cancelTime !== null)\n                tick(cancelTime);\n            cancel();\n        },\n        complete: () => {\n            playState = \"finished\";\n        },\n        sample: (elapsed) => {\n            startTime = 0;\n            return tick(elapsed);\n        },\n    };\n    return controls;\n}\n\nexport { animateValue };\n","import { cancelFrame, frame } from '../../../frameloop/index.mjs';\nimport { animateStyle } from './index.mjs';\nimport { isWaapiSupportedEasing } from './easing.mjs';\nimport { supports } from './supports.mjs';\nimport { getFinalKeyframe } from './utils/get-final-keyframe.mjs';\nimport { animateValue } from '../js/index.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../../utils/time-conversion.mjs';\n\n/**\n * A list of values that can be hardware-accelerated.\n */\nconst acceleratedValues = new Set([\n    \"opacity\",\n    \"clipPath\",\n    \"filter\",\n    \"transform\",\n    \"backgroundColor\",\n]);\n/**\n * 10ms is chosen here as it strikes a balance between smooth\n * results (more than one keyframe per frame at 60fps) and\n * keyframe quantity.\n */\nconst sampleDelta = 10; //ms\n/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxDuration = 20000;\nconst requiresPregeneratedKeyframes = (valueName, options) => options.type === \"spring\" ||\n    valueName === \"backgroundColor\" ||\n    !isWaapiSupportedEasing(options.ease);\nfunction createAcceleratedAnimation(value, valueName, { onUpdate, onComplete, ...options }) {\n    const canAccelerateAnimation = supports.waapi() &&\n        acceleratedValues.has(valueName) &&\n        !options.repeatDelay &&\n        options.repeatType !== \"mirror\" &&\n        options.damping !== 0 &&\n        options.type !== \"inertia\";\n    if (!canAccelerateAnimation)\n        return false;\n    /**\n     * TODO: Unify with js/index\n     */\n    let hasStopped = false;\n    let resolveFinishedPromise;\n    let currentFinishedPromise;\n    /**\n     * Create a new finished Promise every time we enter the\n     * finished state and resolve the old Promise. This is\n     * WAAPI-compatible behaviour.\n     */\n    const updateFinishedPromise = () => {\n        currentFinishedPromise = new Promise((resolve) => {\n            resolveFinishedPromise = resolve;\n        });\n    };\n    // Create the first finished promise\n    updateFinishedPromise();\n    let { keyframes, duration = 300, ease, times } = options;\n    /**\n     * If this animation needs pre-generated keyframes then generate.\n     */\n    if (requiresPregeneratedKeyframes(valueName, options)) {\n        const sampleAnimation = animateValue({\n            ...options,\n            repeat: 0,\n            delay: 0,\n        });\n        let state = { done: false, value: keyframes[0] };\n        const pregeneratedKeyframes = [];\n        /**\n         * Bail after 20 seconds of pre-generated keyframes as it's likely\n         * we're heading for an infinite loop.\n         */\n        let t = 0;\n        while (!state.done && t < maxDuration) {\n            state = sampleAnimation.sample(t);\n            pregeneratedKeyframes.push(state.value);\n            t += sampleDelta;\n        }\n        times = undefined;\n        keyframes = pregeneratedKeyframes;\n        duration = t - sampleDelta;\n        ease = \"linear\";\n    }\n    const animation = animateStyle(value.owner.current, valueName, keyframes, {\n        ...options,\n        duration,\n        /**\n         * This function is currently not called if ease is provided\n         * as a function so the cast is safe.\n         *\n         * However it would be possible for a future refinement to port\n         * in easing pregeneration from Motion One for browsers that\n         * support the upcoming `linear()` easing function.\n         */\n        ease: ease,\n        times,\n    });\n    const cancelAnimation = () => animation.cancel();\n    const safeCancel = () => {\n        frame.update(cancelAnimation);\n        resolveFinishedPromise();\n        updateFinishedPromise();\n    };\n    /**\n     * Prefer the `onfinish` prop as it's more widely supported than\n     * the `finished` promise.\n     *\n     * Here, we synchronously set the provided MotionValue to the end\n     * keyframe. If we didn't, when the WAAPI animation is finished it would\n     * be removed from the element which would then revert to its old styles.\n     */\n    animation.onfinish = () => {\n        value.set(getFinalKeyframe(keyframes, options));\n        onComplete && onComplete();\n        safeCancel();\n    };\n    /**\n     * Animation interrupt callback.\n     */\n    return {\n        then(resolve, reject) {\n            return currentFinishedPromise.then(resolve, reject);\n        },\n        get time() {\n            return millisecondsToSeconds(animation.currentTime || 0);\n        },\n        set time(newTime) {\n            animation.currentTime = secondsToMilliseconds(newTime);\n        },\n        get speed() {\n            return animation.playbackRate;\n        },\n        set speed(newSpeed) {\n            animation.playbackRate = newSpeed;\n        },\n        get duration() {\n            return millisecondsToSeconds(duration);\n        },\n        play: () => {\n            if (hasStopped)\n                return;\n            animation.play();\n            /**\n             * Cancel any pending cancel tasks\n             */\n            cancelFrame(cancelAnimation);\n        },\n        pause: () => animation.pause(),\n        stop: () => {\n            hasStopped = true;\n            if (animation.playState === \"idle\")\n                return;\n            /**\n             * WAAPI doesn't natively have any interruption capabilities.\n             *\n             * Rather than read commited styles back out of the DOM, we can\n             * create a renderless JS animation and sample it twice to calculate\n             * its current value, \"previous\" value, and therefore allow\n             * Motion to calculate velocity for any subsequent animation.\n             */\n            const { currentTime } = animation;\n            if (currentTime) {\n                const sampleAnimation = animateValue({\n                    ...options,\n                    autoplay: false,\n                });\n                value.setWithVelocity(sampleAnimation.sample(currentTime - sampleDelta).value, sampleAnimation.sample(currentTime).value, sampleDelta);\n            }\n            safeCancel();\n        },\n        complete: () => animation.finish(),\n        cancel: safeCancel,\n    };\n}\n\nexport { createAcceleratedAnimation };\n","import { mapEasingToNativeEasing } from './easing.mjs';\n\nfunction animateStyle(element, valueName, keyframes, { delay = 0, duration, repeat = 0, repeatType = \"loop\", ease, times, } = {}) {\n    const keyframeOptions = { [valueName]: keyframes };\n    if (times)\n        keyframeOptions.offset = times;\n    const easing = mapEasingToNativeEasing(ease);\n    /**\n     * If this is an easing array, apply to keyframes, not animation as a whole\n     */\n    if (Array.isArray(easing))\n        keyframeOptions.easing = easing;\n    return element.animate(keyframeOptions, {\n        delay,\n        duration,\n        easing: !Array.isArray(easing) ? easing : \"linear\",\n        fill: \"both\",\n        iterations: repeat + 1,\n        direction: repeatType === \"reverse\" ? \"alternate\" : \"normal\",\n    });\n}\n\nexport { animateStyle };\n","function getFinalKeyframe(keyframes, { repeat, repeatType = \"loop\" }) {\n    const index = repeat && repeatType !== \"loop\" && repeat % 2 === 1\n        ? 0\n        : keyframes.length - 1;\n    return keyframes[index];\n}\n\nexport { getFinalKeyframe };\n","import { animateValue } from './js/index.mjs';\nimport { noop } from '../../utils/noop.mjs';\n\nfunction createInstantAnimation({ keyframes, delay, onUpdate, onComplete, }) {\n    const setValue = () => {\n        onUpdate && onUpdate(keyframes[keyframes.length - 1]);\n        onComplete && onComplete();\n        /**\n         * TODO: As this API grows it could make sense to always return\n         * animateValue. This will be a bigger project as animateValue\n         * is frame-locked whereas this function resolves instantly.\n         * This is a behavioural change and also has ramifications regarding\n         * assumptions within tests.\n         */\n        return {\n            time: 0,\n            speed: 1,\n            duration: 0,\n            play: (noop),\n            pause: (noop),\n            stop: (noop),\n            then: (resolve) => {\n                resolve();\n                return Promise.resolve();\n            },\n            cancel: (noop),\n            complete: (noop),\n        };\n    };\n    return delay\n        ? animateValue({\n            keyframes: [0, 1],\n            duration: 0,\n            delay,\n            onComplete: setValue,\n        })\n        : setValue();\n}\n\nexport { createInstantAnimation };\n","import { transformProps } from '../../render/html/utils/transform.mjs';\n\nconst underDampedSpring = {\n    type: \"spring\",\n    stiffness: 500,\n    damping: 25,\n    restSpeed: 10,\n};\nconst criticallyDampedSpring = (target) => ({\n    type: \"spring\",\n    stiffness: 550,\n    damping: target === 0 ? 2 * Math.sqrt(550) : 30,\n    restSpeed: 10,\n});\nconst keyframesTransition = {\n    type: \"keyframes\",\n    duration: 0.8,\n};\n/**\n * Default easing curve is a slightly shallower version of\n * the default browser easing curve.\n */\nconst ease = {\n    type: \"keyframes\",\n    ease: [0.25, 0.1, 0.35, 1],\n    duration: 0.3,\n};\nconst getDefaultTransition = (valueKey, { keyframes }) => {\n    if (keyframes.length > 2) {\n        return keyframesTransition;\n    }\n    else if (transformProps.has(valueKey)) {\n        return valueKey.startsWith(\"scale\")\n            ? criticallyDampedSpring(keyframes[1])\n            : underDampedSpring;\n    }\n    return ease;\n};\n\nexport { getDefaultTransition };\n","import { complex } from '../../value/types/complex/index.mjs';\n\n/**\n * Check if a value is animatable. Examples:\n *\n * ✅: 100, \"100px\", \"#fff\"\n * ❌: \"block\", \"url(2.jpg)\"\n * @param value\n *\n * @internal\n */\nconst isAnimatable = (key, value) => {\n    // If the list of keys tat might be non-animatable grows, replace with Set\n    if (key === \"zIndex\")\n        return false;\n    // If it's a number or a keyframes array, we can animate it. We might at some point\n    // need to do a deep isAnimatable check of keyframes, or let Popmotion handle this,\n    // but for now lets leave it like this for performance reasons\n    if (typeof value === \"number\" || Array.isArray(value))\n        return true;\n    if (typeof value === \"string\" && // It's animatable if we have a string\n        (complex.test(value) || value === \"0\") && // And it contains numbers and/or colors\n        !value.startsWith(\"url(\") // Unless it starts with \"url(\"\n    ) {\n        return true;\n    }\n    return false;\n};\n\nexport { isAnimatable };\n","import { complex } from './index.mjs';\nimport { floatRegex } from '../utils.mjs';\n\n/**\n * Properties that should default to 1 or 100%\n */\nconst maxDefaults = new Set([\"brightness\", \"contrast\", \"saturate\", \"opacity\"]);\nfunction applyDefaultFilter(v) {\n    const [name, value] = v.slice(0, -1).split(\"(\");\n    if (name === \"drop-shadow\")\n        return v;\n    const [number] = value.match(floatRegex) || [];\n    if (!number)\n        return v;\n    const unit = value.replace(number, \"\");\n    let defaultValue = maxDefaults.has(name) ? 1 : 0;\n    if (number !== value)\n        defaultValue *= 100;\n    return name + \"(\" + defaultValue + unit + \")\";\n}\nconst functionRegex = /([a-z-]*)\\(.*?\\)/g;\nconst filter = {\n    ...complex,\n    getAnimatableNone: (v) => {\n        const functions = v.match(functionRegex);\n        return functions ? functions.map(applyDefaultFilter).join(\" \") : v;\n    },\n};\n\nexport { filter };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { numberValueTypes } from './number.mjs';\n\n/**\n * A map of default value types for common values\n */\nconst defaultValueTypes = {\n    ...numberValueTypes,\n    // Color props\n    color,\n    backgroundColor: color,\n    outlineColor: color,\n    fill: color,\n    stroke: color,\n    // Border props\n    borderColor: color,\n    borderTopColor: color,\n    borderRightColor: color,\n    borderBottomColor: color,\n    borderLeftColor: color,\n    filter,\n    WebkitFilter: filter,\n};\n/**\n * Gets the default ValueType for the provided value key\n */\nconst getDefaultValueType = (key) => defaultValueTypes[key];\n\nexport { defaultValueTypes, getDefaultValueType };\n","import { complex } from '../../../value/types/complex/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { getDefaultValueType } from './defaults.mjs';\n\nfunction getAnimatableNone(key, value) {\n    let defaultValueType = getDefaultValueType(key);\n    if (defaultValueType !== filter)\n        defaultValueType = complex;\n    // If value is not recognised as animatable, ie \"none\", create an animatable version origin based on the target\n    return defaultValueType.getAnimatableNone\n        ? defaultValueType.getAnimatableNone(value)\n        : undefined;\n}\n\nexport { getAnimatableNone };\n","/**\n * Check if the value is a zero value string like \"0px\" or \"0%\"\n */\nconst isZeroValueString = (v) => /^0[^.\\s]+$/.test(v);\n\nexport { isZeroValueString };\n","import { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\n\nfunction isNone(value) {\n    if (typeof value === \"number\") {\n        return value === 0;\n    }\n    else if (value !== null) {\n        return value === \"none\" || value === \"0\" || isZeroValueString(value);\n    }\n}\n\nexport { isNone };\n","import { getAnimatableNone } from '../../render/dom/value-types/animatable-none.mjs';\nimport { isAnimatable } from './is-animatable.mjs';\nimport { isNone } from './is-none.mjs';\n\nfunction getKeyframes(value, valueName, target, transition) {\n    const isTargetAnimatable = isAnimatable(valueName, target);\n    let keyframes;\n    if (Array.isArray(target)) {\n        keyframes = [...target];\n    }\n    else {\n        keyframes = [null, target];\n    }\n    const defaultOrigin = transition.from !== undefined ? transition.from : value.get();\n    let animatableTemplateValue = undefined;\n    const noneKeyframeIndexes = [];\n    for (let i = 0; i < keyframes.length; i++) {\n        /**\n         * Fill null/wildcard keyframes\n         */\n        if (keyframes[i] === null) {\n            keyframes[i] = i === 0 ? defaultOrigin : keyframes[i - 1];\n        }\n        if (isNone(keyframes[i])) {\n            noneKeyframeIndexes.push(i);\n        }\n        // TODO: Clean this conditional, it works for now\n        if (typeof keyframes[i] === \"string\" &&\n            keyframes[i] !== \"none\" &&\n            keyframes[i] !== \"0\") {\n            animatableTemplateValue = keyframes[i];\n        }\n    }\n    if (isTargetAnimatable &&\n        noneKeyframeIndexes.length &&\n        animatableTemplateValue) {\n        for (let i = 0; i < noneKeyframeIndexes.length; i++) {\n            const index = noneKeyframeIndexes[i];\n            keyframes[index] = getAnimatableNone(valueName, animatableTemplateValue);\n        }\n    }\n    return keyframes;\n}\n\nexport { getKeyframes };\n","/**\n * Decide whether a transition is defined on a given Transition.\n * This filters out orchestration options and returns true\n * if any options are left.\n */\nfunction isTransitionDefined({ when, delay: _delay, delayChildren, staggerChildren, staggerDirection, repeat, repeatType, repeatDelay, from, elapsed, ...transition }) {\n    return !!Object.keys(transition).length;\n}\nfunction getValueTransition(transition, key) {\n    return transition[key] || transition[\"default\"] || transition;\n}\n\nexport { getValueTransition, isTransitionDefined };\n","import { warning } from '../../utils/errors.mjs';\nimport { secondsToMilliseconds } from '../../utils/time-conversion.mjs';\nimport { instantAnimationState } from '../../utils/use-instant-transition-state.mjs';\nimport { createAcceleratedAnimation } from '../animators/waapi/create-accelerated-animation.mjs';\nimport { createInstantAnimation } from '../animators/instant.mjs';\nimport { getDefaultTransition } from '../utils/default-transitions.mjs';\nimport { isAnimatable } from '../utils/is-animatable.mjs';\nimport { getKeyframes } from '../utils/keyframes.mjs';\nimport { getValueTransition, isTransitionDefined } from '../utils/transitions.mjs';\nimport { animateValue } from '../animators/js/index.mjs';\n\nconst animateMotionValue = (valueName, value, target, transition = {}) => {\n    return (onComplete) => {\n        const valueTransition = getValueTransition(transition, valueName) || {};\n        /**\n         * Most transition values are currently completely overwritten by value-specific\n         * transitions. In the future it'd be nicer to blend these transitions. But for now\n         * delay actually does inherit from the root transition if not value-specific.\n         */\n        const delay = valueTransition.delay || transition.delay || 0;\n        /**\n         * Elapsed isn't a public transition option but can be passed through from\n         * optimized appear effects in milliseconds.\n         */\n        let { elapsed = 0 } = transition;\n        elapsed = elapsed - secondsToMilliseconds(delay);\n        const keyframes = getKeyframes(value, valueName, target, valueTransition);\n        /**\n         * Check if we're able to animate between the start and end keyframes,\n         * and throw a warning if we're attempting to animate between one that's\n         * animatable and another that isn't.\n         */\n        const originKeyframe = keyframes[0];\n        const targetKeyframe = keyframes[keyframes.length - 1];\n        const isOriginAnimatable = isAnimatable(valueName, originKeyframe);\n        const isTargetAnimatable = isAnimatable(valueName, targetKeyframe);\n        warning(isOriginAnimatable === isTargetAnimatable, `You are trying to animate ${valueName} from \"${originKeyframe}\" to \"${targetKeyframe}\". ${originKeyframe} is not an animatable value - to enable this animation set ${originKeyframe} to a value animatable to ${targetKeyframe} via the \\`style\\` property.`);\n        let options = {\n            keyframes,\n            velocity: value.getVelocity(),\n            ease: \"easeOut\",\n            ...valueTransition,\n            delay: -elapsed,\n            onUpdate: (v) => {\n                value.set(v);\n                valueTransition.onUpdate && valueTransition.onUpdate(v);\n            },\n            onComplete: () => {\n                onComplete();\n                valueTransition.onComplete && valueTransition.onComplete();\n            },\n        };\n        /**\n         * If there's no transition defined for this value, we can generate\n         * unqiue transition settings for this value.\n         */\n        if (!isTransitionDefined(valueTransition)) {\n            options = {\n                ...options,\n                ...getDefaultTransition(valueName, options),\n            };\n        }\n        /**\n         * Both WAAPI and our internal animation functions use durations\n         * as defined by milliseconds, while our external API defines them\n         * as seconds.\n         */\n        if (options.duration) {\n            options.duration = secondsToMilliseconds(options.duration);\n        }\n        if (options.repeatDelay) {\n            options.repeatDelay = secondsToMilliseconds(options.repeatDelay);\n        }\n        if (!isOriginAnimatable ||\n            !isTargetAnimatable ||\n            instantAnimationState.current ||\n            valueTransition.type === false) {\n            /**\n             * If we can't animate this value, or the global instant animation flag is set,\n             * or this is simply defined as an instant transition, return an instant transition.\n             */\n            return createInstantAnimation(options);\n        }\n        /**\n         * Animate via WAAPI if possible.\n         */\n        if (value.owner &&\n            value.owner.current instanceof HTMLElement &&\n            !value.owner.getProps().onUpdate) {\n            const acceleratedAnimation = createAcceleratedAnimation(value, valueName, options);\n            if (acceleratedAnimation)\n                return acceleratedAnimation;\n        }\n        /**\n         * If we didn't create an accelerated animation, create a JS animation\n         */\n        return animateValue(options);\n    };\n};\n\nexport { animateMotionValue };\n","import { isMotionValue } from '../utils/is-motion-value.mjs';\n\nfunction isWillChangeMotionValue(value) {\n    return Boolean(isMotionValue(value) && value.add);\n}\n\nexport { isWillChangeMotionValue };\n","function addUniqueItem(arr, item) {\n    if (arr.indexOf(item) === -1)\n        arr.push(item);\n}\nfunction removeItem(arr, item) {\n    const index = arr.indexOf(item);\n    if (index > -1)\n        arr.splice(index, 1);\n}\n// Adapted from array-move\nfunction moveItem([...arr], fromIndex, toIndex) {\n    const startIndex = fromIndex < 0 ? arr.length + fromIndex : fromIndex;\n    if (startIndex >= 0 && startIndex < arr.length) {\n        const endIndex = toIndex < 0 ? arr.length + toIndex : toIndex;\n        const [item] = arr.splice(fromIndex, 1);\n        arr.splice(endIndex, 0, item);\n    }\n    return arr;\n}\n\nexport { addUniqueItem, moveItem, removeItem };\n","import { addUniqueItem, removeItem } from './array.mjs';\n\nclass SubscriptionManager {\n    constructor() {\n        this.subscriptions = [];\n    }\n    add(handler) {\n        addUniqueItem(this.subscriptions, handler);\n        return () => removeItem(this.subscriptions, handler);\n    }\n    notify(a, b, c) {\n        const numSubscriptions = this.subscriptions.length;\n        if (!numSubscriptions)\n            return;\n        if (numSubscriptions === 1) {\n            /**\n             * If there's only a single handler we can just call it without invoking a loop.\n             */\n            this.subscriptions[0](a, b, c);\n        }\n        else {\n            for (let i = 0; i < numSubscriptions; i++) {\n                /**\n                 * Check whether the handler exists before firing as it's possible\n                 * the subscriptions were modified during this loop running.\n                 */\n                const handler = this.subscriptions[i];\n                handler && handler(a, b, c);\n            }\n        }\n    }\n    getSize() {\n        return this.subscriptions.length;\n    }\n    clear() {\n        this.subscriptions.length = 0;\n    }\n}\n\nexport { SubscriptionManager };\n","import { frameData } from '../frameloop/data.mjs';\nimport { frame } from '../frameloop/index.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { velocityPerSecond } from '../utils/velocity-per-second.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\n\nconst isFloat = (value) => {\n    return !isNaN(parseFloat(value));\n};\n/**\n * `MotionValue` is used to track the state and velocity of motion values.\n *\n * @public\n */\nclass MotionValue {\n    /**\n     * @param init - The initiating value\n     * @param config - Optional configuration options\n     *\n     * -  `transformer`: A function to transform incoming values with.\n     *\n     * @internal\n     */\n    constructor(init, options = {}) {\n        /**\n         * This will be replaced by the build step with the latest version number.\n         * When MotionValues are provided to motion components, warn if versions are mixed.\n         */\n        this.version = \"10.12.12\";\n        /**\n         * Duration, in milliseconds, since last updating frame.\n         *\n         * @internal\n         */\n        this.timeDelta = 0;\n        /**\n         * Timestamp of the last time this `MotionValue` was updated.\n         *\n         * @internal\n         */\n        this.lastUpdated = 0;\n        /**\n         * Tracks whether this value can output a velocity. Currently this is only true\n         * if the value is numerical, but we might be able to widen the scope here and support\n         * other value types.\n         *\n         * @internal\n         */\n        this.canTrackVelocity = false;\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        this.updateAndNotify = (v, render = true) => {\n            this.prev = this.current;\n            this.current = v;\n            // Update timestamp\n            const { delta, timestamp } = frameData;\n            if (this.lastUpdated !== timestamp) {\n                this.timeDelta = delta;\n                this.lastUpdated = timestamp;\n                frame.postRender(this.scheduleVelocityCheck);\n            }\n            // Update update subscribers\n            if (this.prev !== this.current && this.events.change) {\n                this.events.change.notify(this.current);\n            }\n            // Update velocity subscribers\n            if (this.events.velocityChange) {\n                this.events.velocityChange.notify(this.getVelocity());\n            }\n            // Update render subscribers\n            if (render && this.events.renderRequest) {\n                this.events.renderRequest.notify(this.current);\n            }\n        };\n        /**\n         * Schedule a velocity check for the next frame.\n         *\n         * This is an instanced and bound function to prevent generating a new\n         * function once per frame.\n         *\n         * @internal\n         */\n        this.scheduleVelocityCheck = () => frame.postRender(this.velocityCheck);\n        /**\n         * Updates `prev` with `current` if the value hasn't been updated this frame.\n         * This ensures velocity calculations return `0`.\n         *\n         * This is an instanced and bound function to prevent generating a new\n         * function once per frame.\n         *\n         * @internal\n         */\n        this.velocityCheck = ({ timestamp }) => {\n            if (timestamp !== this.lastUpdated) {\n                this.prev = this.current;\n                if (this.events.velocityChange) {\n                    this.events.velocityChange.notify(this.getVelocity());\n                }\n            }\n        };\n        this.hasAnimated = false;\n        this.prev = this.current = init;\n        this.canTrackVelocity = isFloat(this.current);\n        this.owner = options.owner;\n    }\n    /**\n     * Adds a function that will be notified when the `MotionValue` is updated.\n     *\n     * It returns a function that, when called, will cancel the subscription.\n     *\n     * When calling `onChange` inside a React component, it should be wrapped with the\n     * `useEffect` hook. As it returns an unsubscribe function, this should be returned\n     * from the `useEffect` function to ensure you don't add duplicate subscribers..\n     *\n     * ```jsx\n     * export const MyComponent = () => {\n     *   const x = useMotionValue(0)\n     *   const y = useMotionValue(0)\n     *   const opacity = useMotionValue(1)\n     *\n     *   useEffect(() => {\n     *     function updateOpacity() {\n     *       const maxXY = Math.max(x.get(), y.get())\n     *       const newOpacity = transform(maxXY, [0, 100], [1, 0])\n     *       opacity.set(newOpacity)\n     *     }\n     *\n     *     const unsubscribeX = x.on(\"change\", updateOpacity)\n     *     const unsubscribeY = y.on(\"change\", updateOpacity)\n     *\n     *     return () => {\n     *       unsubscribeX()\n     *       unsubscribeY()\n     *     }\n     *   }, [])\n     *\n     *   return <motion.div style={{ x }} />\n     * }\n     * ```\n     *\n     * @param subscriber - A function that receives the latest value.\n     * @returns A function that, when called, will cancel this subscription.\n     *\n     * @deprecated\n     */\n    onChange(subscription) {\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, `value.onChange(callback) is deprecated. Switch to value.on(\"change\", callback).`);\n        }\n        return this.on(\"change\", subscription);\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        const unsubscribe = this.events[eventName].add(callback);\n        if (eventName === \"change\") {\n            return () => {\n                unsubscribe();\n                /**\n                 * If we have no more change listeners by the start\n                 * of the next frame, stop active animations.\n                 */\n                frame.read(() => {\n                    if (!this.events.change.getSize()) {\n                        this.stop();\n                    }\n                });\n            };\n        }\n        return unsubscribe;\n    }\n    clearListeners() {\n        for (const eventManagers in this.events) {\n            this.events[eventManagers].clear();\n        }\n    }\n    /**\n     * Attaches a passive effect to the `MotionValue`.\n     *\n     * @internal\n     */\n    attach(passiveEffect, stopPassiveEffect) {\n        this.passiveEffect = passiveEffect;\n        this.stopPassiveEffect = stopPassiveEffect;\n    }\n    /**\n     * Sets the state of the `MotionValue`.\n     *\n     * @remarks\n     *\n     * ```jsx\n     * const x = useMotionValue(0)\n     * x.set(10)\n     * ```\n     *\n     * @param latest - Latest value to set.\n     * @param render - Whether to notify render subscribers. Defaults to `true`\n     *\n     * @public\n     */\n    set(v, render = true) {\n        if (!render || !this.passiveEffect) {\n            this.updateAndNotify(v, render);\n        }\n        else {\n            this.passiveEffect(v, this.updateAndNotify);\n        }\n    }\n    setWithVelocity(prev, current, delta) {\n        this.set(current);\n        this.prev = prev;\n        this.timeDelta = delta;\n    }\n    /**\n     * Set the state of the `MotionValue`, stopping any active animations,\n     * effects, and resets velocity to `0`.\n     */\n    jump(v) {\n        this.updateAndNotify(v);\n        this.prev = v;\n        this.stop();\n        if (this.stopPassiveEffect)\n            this.stopPassiveEffect();\n    }\n    /**\n     * Returns the latest state of `MotionValue`\n     *\n     * @returns - The latest state of `MotionValue`\n     *\n     * @public\n     */\n    get() {\n        return this.current;\n    }\n    /**\n     * @public\n     */\n    getPrevious() {\n        return this.prev;\n    }\n    /**\n     * Returns the latest velocity of `MotionValue`\n     *\n     * @returns - The latest velocity of `MotionValue`. Returns `0` if the state is non-numerical.\n     *\n     * @public\n     */\n    getVelocity() {\n        // This could be isFloat(this.prev) && isFloat(this.current), but that would be wasteful\n        return this.canTrackVelocity\n            ? // These casts could be avoided if parseFloat would be typed better\n                velocityPerSecond(parseFloat(this.current) -\n                    parseFloat(this.prev), this.timeDelta)\n            : 0;\n    }\n    /**\n     * Registers a new animation to control this `MotionValue`. Only one\n     * animation can drive a `MotionValue` at one time.\n     *\n     * ```jsx\n     * value.start()\n     * ```\n     *\n     * @param animation - A function that starts the provided animation\n     *\n     * @internal\n     */\n    start(startAnimation) {\n        this.stop();\n        return new Promise((resolve) => {\n            this.hasAnimated = true;\n            this.animation = startAnimation(resolve);\n            if (this.events.animationStart) {\n                this.events.animationStart.notify();\n            }\n        }).then(() => {\n            if (this.events.animationComplete) {\n                this.events.animationComplete.notify();\n            }\n            this.clearAnimation();\n        });\n    }\n    /**\n     * Stop the currently active animation.\n     *\n     * @public\n     */\n    stop() {\n        if (this.animation) {\n            this.animation.stop();\n            if (this.events.animationCancel) {\n                this.events.animationCancel.notify();\n            }\n        }\n        this.clearAnimation();\n    }\n    /**\n     * Returns `true` if this value is currently animating.\n     *\n     * @public\n     */\n    isAnimating() {\n        return !!this.animation;\n    }\n    clearAnimation() {\n        delete this.animation;\n    }\n    /**\n     * Destroy and clean up subscribers to this `MotionValue`.\n     *\n     * The `MotionValue` hooks like `useMotionValue` and `useTransform` automatically\n     * handle the lifecycle of the returned `MotionValue`, so this method is only necessary if you've manually\n     * created a `MotionValue` via the `motionValue` function.\n     *\n     * @public\n     */\n    destroy() {\n        this.clearListeners();\n        this.stop();\n        if (this.stopPassiveEffect) {\n            this.stopPassiveEffect();\n        }\n    }\n}\nfunction motionValue(init, options) {\n    return new MotionValue(init, options);\n}\n\nexport { MotionValue, motionValue };\n","/**\n * Tests a provided value against a ValueType\n */\nconst testValueType = (v) => (type) => type.test(v);\n\nexport { testValueType };\n","import { number } from '../../../value/types/numbers/index.mjs';\nimport { px, percent, degrees, vw, vh } from '../../../value/types/numbers/units.mjs';\nimport { testValueType } from './test.mjs';\nimport { auto } from './type-auto.mjs';\n\n/**\n * A list of value types commonly used for dimensions\n */\nconst dimensionValueTypes = [number, px, percent, degrees, vw, vh, auto];\n/**\n * Tests a dimensional value against the list of dimension ValueTypes\n */\nconst findDimensionValueType = (v) => dimensionValueTypes.find(testValueType(v));\n\nexport { dimensionValueTypes, findDimensionValueType };\n","/**\n * ValueType for \"auto\"\n */\nconst auto = {\n    test: (v) => v === \"auto\",\n    parse: (v) => v,\n};\n\nexport { auto };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { complex } from '../../../value/types/complex/index.mjs';\nimport { dimensionValueTypes } from './dimensions.mjs';\nimport { testValueType } from './test.mjs';\n\n/**\n * A list of all ValueTypes\n */\nconst valueTypes = [...dimensionValueTypes, color, complex];\n/**\n * Tests a value against the list of ValueTypes\n */\nconst findValueType = (v) => valueTypes.find(testValueType(v));\n\nexport { findValueType };\n","import { isNumericalString } from '../../utils/is-numerical-string.mjs';\nimport { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\nimport { resolveFinalValueInKeyframes } from '../../utils/resolve-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\nimport { getAnimatableNone } from '../dom/value-types/animatable-none.mjs';\nimport { findValueType } from '../dom/value-types/find.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\n/**\n * Set VisualElement's MotionValue, creating a new MotionValue for it if\n * it doesn't exist.\n */\nfunction setMotionValue(visualElement, key, value) {\n    if (visualElement.hasValue(key)) {\n        visualElement.getValue(key).set(value);\n    }\n    else {\n        visualElement.addValue(key, motionValue(value));\n    }\n}\nfunction setTarget(visualElement, definition) {\n    const resolved = resolveVariant(visualElement, definition);\n    let { transitionEnd = {}, transition = {}, ...target } = resolved ? visualElement.makeTargetAnimatable(resolved, false) : {};\n    target = { ...target, ...transitionEnd };\n    for (const key in target) {\n        const value = resolveFinalValueInKeyframes(target[key]);\n        setMotionValue(visualElement, key, value);\n    }\n}\nfunction setVariants(visualElement, variantLabels) {\n    const reversedLabels = [...variantLabels].reverse();\n    reversedLabels.forEach((key) => {\n        const variant = visualElement.getVariant(key);\n        variant && setTarget(visualElement, variant);\n        if (visualElement.variantChildren) {\n            visualElement.variantChildren.forEach((child) => {\n                setVariants(child, variantLabels);\n            });\n        }\n    });\n}\nfunction setValues(visualElement, definition) {\n    if (Array.isArray(definition)) {\n        return setVariants(visualElement, definition);\n    }\n    else if (typeof definition === \"string\") {\n        return setVariants(visualElement, [definition]);\n    }\n    else {\n        setTarget(visualElement, definition);\n    }\n}\nfunction checkTargetForNewValues(visualElement, target, origin) {\n    var _a, _b;\n    const newValueKeys = Object.keys(target).filter((key) => !visualElement.hasValue(key));\n    const numNewValues = newValueKeys.length;\n    if (!numNewValues)\n        return;\n    for (let i = 0; i < numNewValues; i++) {\n        const key = newValueKeys[i];\n        const targetValue = target[key];\n        let value = null;\n        /**\n         * If the target is a series of keyframes, we can use the first value\n         * in the array. If this first value is null, we'll still need to read from the DOM.\n         */\n        if (Array.isArray(targetValue)) {\n            value = targetValue[0];\n        }\n        /**\n         * If the target isn't keyframes, or the first keyframe was null, we need to\n         * first check if an origin value was explicitly defined in the transition as \"from\",\n         * if not read the value from the DOM. As an absolute fallback, take the defined target value.\n         */\n        if (value === null) {\n            value = (_b = (_a = origin[key]) !== null && _a !== void 0 ? _a : visualElement.readValue(key)) !== null && _b !== void 0 ? _b : target[key];\n        }\n        /**\n         * If value is still undefined or null, ignore it. Preferably this would throw,\n         * but this was causing issues in Framer.\n         */\n        if (value === undefined || value === null)\n            continue;\n        if (typeof value === \"string\" &&\n            (isNumericalString(value) || isZeroValueString(value))) {\n            // If this is a number read as a string, ie \"0\" or \"200\", convert it to a number\n            value = parseFloat(value);\n        }\n        else if (!findValueType(value) && complex.test(targetValue)) {\n            value = getAnimatableNone(key, targetValue);\n        }\n        visualElement.addValue(key, motionValue(value, { owner: visualElement }));\n        if (origin[key] === undefined) {\n            origin[key] = value;\n        }\n        if (value !== null)\n            visualElement.setBaseTarget(key, value);\n    }\n}\nfunction getOriginFromTransition(key, transition) {\n    if (!transition)\n        return;\n    const valueTransition = transition[key] || transition[\"default\"] || transition;\n    return valueTransition.from;\n}\nfunction getOrigin(target, transition, visualElement) {\n    const origin = {};\n    for (const key in target) {\n        const transitionOrigin = getOriginFromTransition(key, transition);\n        if (transitionOrigin !== undefined) {\n            origin[key] = transitionOrigin;\n        }\n        else {\n            const value = visualElement.getValue(key);\n            if (value) {\n                origin[key] = value.get();\n            }\n        }\n    }\n    return origin;\n}\n\nexport { checkTargetForNewValues, getOrigin, getOriginFromTransition, setTarget, setValues };\n","import { frame } from '../../frameloop/index.mjs';\nimport { transformProps } from '../../render/html/utils/transform.mjs';\nimport { optimizedAppearDataAttribute } from '../optimized-appear/data-id.mjs';\nimport { animateMotionValue } from './motion-value.mjs';\nimport { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { setTarget } from '../../render/utils/setters.mjs';\n\n/**\n * Decide whether we should block this animation. Previously, we achieved this\n * just by checking whether the key was listed in protectedKeys, but this\n * posed problems if an animation was triggered by afterChildren and protectedKeys\n * had been set to true in the meantime.\n */\nfunction shouldBlockAnimation({ protectedKeys, needsAnimating }, key) {\n    const shouldBlock = protectedKeys.hasOwnProperty(key) && needsAnimating[key] !== true;\n    needsAnimating[key] = false;\n    return shouldBlock;\n}\nfunction animateTarget(visualElement, definition, { delay = 0, transitionOverride, type } = {}) {\n    let { transition = visualElement.getDefaultTransition(), transitionEnd, ...target } = visualElement.makeTargetAnimatable(definition);\n    const willChange = visualElement.getValue(\"willChange\");\n    if (transitionOverride)\n        transition = transitionOverride;\n    const animations = [];\n    const animationTypeState = type &&\n        visualElement.animationState &&\n        visualElement.animationState.getState()[type];\n    for (const key in target) {\n        const value = visualElement.getValue(key);\n        const valueTarget = target[key];\n        if (!value ||\n            valueTarget === undefined ||\n            (animationTypeState &&\n                shouldBlockAnimation(animationTypeState, key))) {\n            continue;\n        }\n        const valueTransition = { delay, elapsed: 0, ...transition };\n        /**\n         * If this is the first time a value is being animated, check\n         * to see if we're handling off from an existing animation.\n         */\n        if (window.HandoffAppearAnimations && !value.hasAnimated) {\n            const appearId = visualElement.getProps()[optimizedAppearDataAttribute];\n            if (appearId) {\n                valueTransition.elapsed = window.HandoffAppearAnimations(appearId, key, value, frame);\n            }\n        }\n        value.start(animateMotionValue(key, value, valueTarget, visualElement.shouldReduceMotion && transformProps.has(key)\n            ? { type: false }\n            : valueTransition));\n        const animation = value.animation;\n        if (isWillChangeMotionValue(willChange)) {\n            willChange.add(key);\n            animation.then(() => willChange.remove(key));\n        }\n        animations.push(animation);\n    }\n    if (transitionEnd) {\n        Promise.all(animations).then(() => {\n            transitionEnd && setTarget(visualElement, transitionEnd);\n        });\n    }\n    return animations;\n}\n\nexport { animateTarget };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\n\nfunction animateVariant(visualElement, variant, options = {}) {\n    const resolved = resolveVariant(visualElement, variant, options.custom);\n    let { transition = visualElement.getDefaultTransition() || {} } = resolved || {};\n    if (options.transitionOverride) {\n        transition = options.transitionOverride;\n    }\n    /**\n     * If we have a variant, create a callback that runs it as an animation.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getAnimation = resolved\n        ? () => Promise.all(animateTarget(visualElement, resolved, options))\n        : () => Promise.resolve();\n    /**\n     * If we have children, create a callback that runs all their animations.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getChildAnimations = visualElement.variantChildren && visualElement.variantChildren.size\n        ? (forwardDelay = 0) => {\n            const { delayChildren = 0, staggerChildren, staggerDirection, } = transition;\n            return animateChildren(visualElement, variant, delayChildren + forwardDelay, staggerChildren, staggerDirection, options);\n        }\n        : () => Promise.resolve();\n    /**\n     * If the transition explicitly defines a \"when\" option, we need to resolve either\n     * this animation or all children animations before playing the other.\n     */\n    const { when } = transition;\n    if (when) {\n        const [first, last] = when === \"beforeChildren\"\n            ? [getAnimation, getChildAnimations]\n            : [getChildAnimations, getAnimation];\n        return first().then(() => last());\n    }\n    else {\n        return Promise.all([getAnimation(), getChildAnimations(options.delay)]);\n    }\n}\nfunction animateChildren(visualElement, variant, delayChildren = 0, staggerChildren = 0, staggerDirection = 1, options) {\n    const animations = [];\n    const maxStaggerDuration = (visualElement.variantChildren.size - 1) * staggerChildren;\n    const generateStaggerDuration = staggerDirection === 1\n        ? (i = 0) => i * staggerChildren\n        : (i = 0) => maxStaggerDuration - i * staggerChildren;\n    Array.from(visualElement.variantChildren)\n        .sort(sortByTreeOrder)\n        .forEach((child, i) => {\n        child.notify(\"AnimationStart\", variant);\n        animations.push(animateVariant(child, variant, {\n            ...options,\n            delay: delayChildren + generateStaggerDuration(i),\n        }).then(() => child.notify(\"AnimationComplete\", variant)));\n    });\n    return Promise.all(animations);\n}\nfunction sortByTreeOrder(a, b) {\n    return a.sortNodePosition(b);\n}\n\nexport { animateVariant, sortByTreeOrder };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.mjs';\nimport { shallowCompare } from '../../utils/shallow-compare.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\nimport { variantPriorityOrder } from './variant-props.mjs';\nimport { animateVisualElement } from '../../animation/interfaces/visual-element.mjs';\n\nconst reversePriorityOrder = [...variantPriorityOrder].reverse();\nconst numAnimationTypes = variantPriorityOrder.length;\nfunction animateList(visualElement) {\n    return (animations) => Promise.all(animations.map(({ animation, options }) => animateVisualElement(visualElement, animation, options)));\n}\nfunction createAnimationState(visualElement) {\n    let animate = animateList(visualElement);\n    const state = createState();\n    let isInitialRender = true;\n    /**\n     * This function will be used to reduce the animation definitions for\n     * each active animation type into an object of resolved values for it.\n     */\n    const buildResolvedTypeValues = (acc, definition) => {\n        const resolved = resolveVariant(visualElement, definition);\n        if (resolved) {\n            const { transition, transitionEnd, ...target } = resolved;\n            acc = { ...acc, ...target, ...transitionEnd };\n        }\n        return acc;\n    };\n    /**\n     * This just allows us to inject mocked animation functions\n     * @internal\n     */\n    function setAnimateFunction(makeAnimator) {\n        animate = makeAnimator(visualElement);\n    }\n    /**\n     * When we receive new props, we need to:\n     * 1. Create a list of protected keys for each type. This is a directory of\n     *    value keys that are currently being \"handled\" by types of a higher priority\n     *    so that whenever an animation is played of a given type, these values are\n     *    protected from being animated.\n     * 2. Determine if an animation type needs animating.\n     * 3. Determine if any values have been removed from a type and figure out\n     *    what to animate those to.\n     */\n    function animateChanges(options, changedActiveType) {\n        const props = visualElement.getProps();\n        const context = visualElement.getVariantContext(true) || {};\n        /**\n         * A list of animations that we'll build into as we iterate through the animation\n         * types. This will get executed at the end of the function.\n         */\n        const animations = [];\n        /**\n         * Keep track of which values have been removed. Then, as we hit lower priority\n         * animation types, we can check if they contain removed values and animate to that.\n         */\n        const removedKeys = new Set();\n        /**\n         * A dictionary of all encountered keys. This is an object to let us build into and\n         * copy it without iteration. Each time we hit an animation type we set its protected\n         * keys - the keys its not allowed to animate - to the latest version of this object.\n         */\n        let encounteredKeys = {};\n        /**\n         * If a variant has been removed at a given index, and this component is controlling\n         * variant animations, we want to ensure lower-priority variants are forced to animate.\n         */\n        let removedVariantIndex = Infinity;\n        /**\n         * Iterate through all animation types in reverse priority order. For each, we want to\n         * detect which values it's handling and whether or not they've changed (and therefore\n         * need to be animated). If any values have been removed, we want to detect those in\n         * lower priority props and flag for animation.\n         */\n        for (let i = 0; i < numAnimationTypes; i++) {\n            const type = reversePriorityOrder[i];\n            const typeState = state[type];\n            const prop = props[type] !== undefined ? props[type] : context[type];\n            const propIsVariant = isVariantLabel(prop);\n            /**\n             * If this type has *just* changed isActive status, set activeDelta\n             * to that status. Otherwise set to null.\n             */\n            const activeDelta = type === changedActiveType ? typeState.isActive : null;\n            if (activeDelta === false)\n                removedVariantIndex = i;\n            /**\n             * If this prop is an inherited variant, rather than been set directly on the\n             * component itself, we want to make sure we allow the parent to trigger animations.\n             *\n             * TODO: Can probably change this to a !isControllingVariants check\n             */\n            let isInherited = prop === context[type] && prop !== props[type] && propIsVariant;\n            /**\n             *\n             */\n            if (isInherited &&\n                isInitialRender &&\n                visualElement.manuallyAnimateOnMount) {\n                isInherited = false;\n            }\n            /**\n             * Set all encountered keys so far as the protected keys for this type. This will\n             * be any key that has been animated or otherwise handled by active, higher-priortiy types.\n             */\n            typeState.protectedKeys = { ...encounteredKeys };\n            // Check if we can skip analysing this prop early\n            if (\n            // If it isn't active and hasn't *just* been set as inactive\n            (!typeState.isActive && activeDelta === null) ||\n                // If we didn't and don't have any defined prop for this animation type\n                (!prop && !typeState.prevProp) ||\n                // Or if the prop doesn't define an animation\n                isAnimationControls(prop) ||\n                typeof prop === \"boolean\") {\n                continue;\n            }\n            /**\n             * As we go look through the values defined on this type, if we detect\n             * a changed value or a value that was removed in a higher priority, we set\n             * this to true and add this prop to the animation list.\n             */\n            const variantDidChange = checkVariantsDidChange(typeState.prevProp, prop);\n            let shouldAnimateType = variantDidChange ||\n                // If we're making this variant active, we want to always make it active\n                (type === changedActiveType &&\n                    typeState.isActive &&\n                    !isInherited &&\n                    propIsVariant) ||\n                // If we removed a higher-priority variant (i is in reverse order)\n                (i > removedVariantIndex && propIsVariant);\n            /**\n             * As animations can be set as variant lists, variants or target objects, we\n             * coerce everything to an array if it isn't one already\n             */\n            const definitionList = Array.isArray(prop) ? prop : [prop];\n            /**\n             * Build an object of all the resolved values. We'll use this in the subsequent\n             * animateChanges calls to determine whether a value has changed.\n             */\n            let resolvedValues = definitionList.reduce(buildResolvedTypeValues, {});\n            if (activeDelta === false)\n                resolvedValues = {};\n            /**\n             * Now we need to loop through all the keys in the prev prop and this prop,\n             * and decide:\n             * 1. If the value has changed, and needs animating\n             * 2. If it has been removed, and needs adding to the removedKeys set\n             * 3. If it has been removed in a higher priority type and needs animating\n             * 4. If it hasn't been removed in a higher priority but hasn't changed, and\n             *    needs adding to the type's protectedKeys list.\n             */\n            const { prevResolvedValues = {} } = typeState;\n            const allKeys = {\n                ...prevResolvedValues,\n                ...resolvedValues,\n            };\n            const markToAnimate = (key) => {\n                shouldAnimateType = true;\n                removedKeys.delete(key);\n                typeState.needsAnimating[key] = true;\n            };\n            for (const key in allKeys) {\n                const next = resolvedValues[key];\n                const prev = prevResolvedValues[key];\n                // If we've already handled this we can just skip ahead\n                if (encounteredKeys.hasOwnProperty(key))\n                    continue;\n                /**\n                 * If the value has changed, we probably want to animate it.\n                 */\n                if (next !== prev) {\n                    /**\n                     * If both values are keyframes, we need to shallow compare them to\n                     * detect whether any value has changed. If it has, we animate it.\n                     */\n                    if (isKeyframesTarget(next) && isKeyframesTarget(prev)) {\n                        if (!shallowCompare(next, prev) || variantDidChange) {\n                            markToAnimate(key);\n                        }\n                        else {\n                            /**\n                             * If it hasn't changed, we want to ensure it doesn't animate by\n                             * adding it to the list of protected keys.\n                             */\n                            typeState.protectedKeys[key] = true;\n                        }\n                    }\n                    else if (next !== undefined) {\n                        // If next is defined and doesn't equal prev, it needs animating\n                        markToAnimate(key);\n                    }\n                    else {\n                        // If it's undefined, it's been removed.\n                        removedKeys.add(key);\n                    }\n                }\n                else if (next !== undefined && removedKeys.has(key)) {\n                    /**\n                     * If next hasn't changed and it isn't undefined, we want to check if it's\n                     * been removed by a higher priority\n                     */\n                    markToAnimate(key);\n                }\n                else {\n                    /**\n                     * If it hasn't changed, we add it to the list of protected values\n                     * to ensure it doesn't get animated.\n                     */\n                    typeState.protectedKeys[key] = true;\n                }\n            }\n            /**\n             * Update the typeState so next time animateChanges is called we can compare the\n             * latest prop and resolvedValues to these.\n             */\n            typeState.prevProp = prop;\n            typeState.prevResolvedValues = resolvedValues;\n            /**\n             *\n             */\n            if (typeState.isActive) {\n                encounteredKeys = { ...encounteredKeys, ...resolvedValues };\n            }\n            if (isInitialRender && visualElement.blockInitialAnimation) {\n                shouldAnimateType = false;\n            }\n            /**\n             * If this is an inherited prop we want to hard-block animations\n             * TODO: Test as this should probably still handle animations triggered\n             * by removed values?\n             */\n            if (shouldAnimateType && !isInherited) {\n                animations.push(...definitionList.map((animation) => ({\n                    animation: animation,\n                    options: { type, ...options },\n                })));\n            }\n        }\n        /**\n         * If there are some removed value that haven't been dealt with,\n         * we need to create a new animation that falls back either to the value\n         * defined in the style prop, or the last read value.\n         */\n        if (removedKeys.size) {\n            const fallbackAnimation = {};\n            removedKeys.forEach((key) => {\n                const fallbackTarget = visualElement.getBaseTarget(key);\n                if (fallbackTarget !== undefined) {\n                    fallbackAnimation[key] = fallbackTarget;\n                }\n            });\n            animations.push({ animation: fallbackAnimation });\n        }\n        let shouldAnimate = Boolean(animations.length);\n        if (isInitialRender &&\n            props.initial === false &&\n            !visualElement.manuallyAnimateOnMount) {\n            shouldAnimate = false;\n        }\n        isInitialRender = false;\n        return shouldAnimate ? animate(animations) : Promise.resolve();\n    }\n    /**\n     * Change whether a certain animation type is active.\n     */\n    function setActive(type, isActive, options) {\n        var _a;\n        // If the active state hasn't changed, we can safely do nothing here\n        if (state[type].isActive === isActive)\n            return Promise.resolve();\n        // Propagate active change to children\n        (_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.forEach((child) => { var _a; return (_a = child.animationState) === null || _a === void 0 ? void 0 : _a.setActive(type, isActive); });\n        state[type].isActive = isActive;\n        const animations = animateChanges(options, type);\n        for (const key in state) {\n            state[key].protectedKeys = {};\n        }\n        return animations;\n    }\n    return {\n        animateChanges,\n        setActive,\n        setAnimateFunction,\n        getState: () => state,\n    };\n}\nfunction checkVariantsDidChange(prev, next) {\n    if (typeof next === \"string\") {\n        return next !== prev;\n    }\n    else if (Array.isArray(next)) {\n        return !shallowCompare(next, prev);\n    }\n    return false;\n}\nfunction createTypeState(isActive = false) {\n    return {\n        isActive,\n        protectedKeys: {},\n        needsAnimating: {},\n        prevResolvedValues: {},\n    };\n}\nfunction createState() {\n    return {\n        animate: createTypeState(true),\n        whileInView: createTypeState(),\n        whileHover: createTypeState(),\n        whileTap: createTypeState(),\n        whileDrag: createTypeState(),\n        whileFocus: createTypeState(),\n        exit: createTypeState(),\n    };\n}\n\nexport { checkVariantsDidChange, createAnimationState };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\nimport { animateVariant } from './visual-element-variant.mjs';\n\nfunction animateVisualElement(visualElement, definition, options = {}) {\n    visualElement.notify(\"AnimationStart\", definition);\n    let animation;\n    if (Array.isArray(definition)) {\n        const animations = definition.map((variant) => animateVariant(visualElement, variant, options));\n        animation = Promise.all(animations);\n    }\n    else if (typeof definition === \"string\") {\n        animation = animateVariant(visualElement, definition, options);\n    }\n    else {\n        const resolvedDefinition = typeof definition === \"function\"\n            ? resolveVariant(visualElement, definition, options.custom)\n            : definition;\n        animation = Promise.all(animateTarget(visualElement, resolvedDefinition, options));\n    }\n    return animation.then(() => visualElement.notify(\"AnimationComplete\", definition));\n}\n\nexport { animateVisualElement };\n","import { isAnimationControls } from '../../../animation/utils/is-animation-controls.mjs';\nimport { createAnimationState } from '../../../render/utils/animation-state.mjs';\nimport { Feature } from '../Feature.mjs';\n\nclass AnimationFeature extends Feature {\n    /**\n     * We dynamically generate the AnimationState manager as it contains a reference\n     * to the underlying animation library. We only want to load that if we load this,\n     * so people can optionally code split it out using the `m` component.\n     */\n    constructor(node) {\n        super(node);\n        node.animationState || (node.animationState = createAnimationState(node));\n    }\n    updateAnimationControlsSubscription() {\n        const { animate } = this.node.getProps();\n        this.unmount();\n        if (isAnimationControls(animate)) {\n            this.unmount = animate.subscribe(this.node);\n        }\n    }\n    /**\n     * Subscribe any provided AnimationControls to the component's VisualElement\n     */\n    mount() {\n        this.updateAnimationControlsSubscription();\n    }\n    update() {\n        const { animate } = this.node.getProps();\n        const { animate: prevAnimate } = this.node.prevProps || {};\n        if (animate !== prevAnimate) {\n            this.updateAnimationControlsSubscription();\n        }\n    }\n    unmount() { }\n}\n\nexport { AnimationFeature };\n","import { Feature } from '../Feature.mjs';\n\nlet id = 0;\nclass ExitAnimationFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.id = id++;\n    }\n    update() {\n        if (!this.node.presenceContext)\n            return;\n        const { isPresent, onExitComplete, custom } = this.node.presenceContext;\n        const { isPresent: prevIsPresent } = this.node.prevPresenceContext || {};\n        if (!this.node.animationState || isPresent === prevIsPresent) {\n            return;\n        }\n        const exitAnimation = this.node.animationState.setActive(\"exit\", !isPresent, { custom: custom !== null && custom !== void 0 ? custom : this.node.getProps().custom });\n        if (onExitComplete && !isPresent) {\n            exitAnimation.then(() => onExitComplete(this.id));\n        }\n    }\n    mount() {\n        const { register } = this.node.presenceContext || {};\n        if (register) {\n            this.unmount = register(this.id);\n        }\n    }\n    unmount() { }\n}\n\nexport { ExitAnimationFeature };\n","import { AnimationFeature } from './animation/index.mjs';\nimport { ExitAnimationFeature } from './animation/exit.mjs';\n\nconst animations = {\n    animation: {\n        Feature: AnimationFeature,\n    },\n    exit: {\n        Feature: ExitAnimationFeature,\n    },\n};\n\nexport { animations };\n","const distance = (a, b) => Math.abs(a - b);\nfunction distance2D(a, b) {\n    // Multi-dimensional\n    const xDelta = distance(a.x, b.x);\n    const yDelta = distance(a.y, b.y);\n    return Math.sqrt(xDelta ** 2 + yDelta ** 2);\n}\n\nexport { distance, distance2D };\n","import { extractEventInfo } from '../../events/event-info.mjs';\nimport { frame, cancelFrame } from '../../frameloop/index.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../utils/time-conversion.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { pipe } from '../../utils/pipe.mjs';\nimport { distance2D } from '../../utils/distance.mjs';\nimport { frameData } from '../../frameloop/data.mjs';\nimport { isPrimaryPointer } from '../../events/utils/is-primary-pointer.mjs';\n\n/**\n * @internal\n */\nclass PanSession {\n    constructor(event, handlers, { transformPagePoint } = {}) {\n        /**\n         * @internal\n         */\n        this.startEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEventInfo = null;\n        /**\n         * @internal\n         */\n        this.handlers = {};\n        this.updatePoint = () => {\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const info = getPanInfo(this.lastMoveEventInfo, this.history);\n            const isPanStarted = this.startEvent !== null;\n            // Only start panning if the offset is larger than 3 pixels. If we make it\n            // any larger than this we'll want to reset the pointer history\n            // on the first update to avoid visual snapping to the cursoe.\n            const isDistancePastThreshold = distance2D(info.offset, { x: 0, y: 0 }) >= 3;\n            if (!isPanStarted && !isDistancePastThreshold)\n                return;\n            const { point } = info;\n            const { timestamp } = frameData;\n            this.history.push({ ...point, timestamp });\n            const { onStart, onMove } = this.handlers;\n            if (!isPanStarted) {\n                onStart && onStart(this.lastMoveEvent, info);\n                this.startEvent = this.lastMoveEvent;\n            }\n            onMove && onMove(this.lastMoveEvent, info);\n        };\n        this.handlePointerMove = (event, info) => {\n            this.lastMoveEvent = event;\n            this.lastMoveEventInfo = transformPoint(info, this.transformPagePoint);\n            // Throttle mouse move event to once per frame\n            frame.update(this.updatePoint, true);\n        };\n        this.handlePointerUp = (event, info) => {\n            this.end();\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const { onEnd, onSessionEnd } = this.handlers;\n            const panInfo = getPanInfo(event.type === \"pointercancel\"\n                ? this.lastMoveEventInfo\n                : transformPoint(info, this.transformPagePoint), this.history);\n            if (this.startEvent && onEnd) {\n                onEnd(event, panInfo);\n            }\n            onSessionEnd && onSessionEnd(event, panInfo);\n        };\n        // If we have more than one touch, don't start detecting this gesture\n        if (!isPrimaryPointer(event))\n            return;\n        this.handlers = handlers;\n        this.transformPagePoint = transformPagePoint;\n        const info = extractEventInfo(event);\n        const initialInfo = transformPoint(info, this.transformPagePoint);\n        const { point } = initialInfo;\n        const { timestamp } = frameData;\n        this.history = [{ ...point, timestamp }];\n        const { onSessionStart } = handlers;\n        onSessionStart &&\n            onSessionStart(event, getPanInfo(initialInfo, this.history));\n        this.removeListeners = pipe(addPointerEvent(window, \"pointermove\", this.handlePointerMove), addPointerEvent(window, \"pointerup\", this.handlePointerUp), addPointerEvent(window, \"pointercancel\", this.handlePointerUp));\n    }\n    updateHandlers(handlers) {\n        this.handlers = handlers;\n    }\n    end() {\n        this.removeListeners && this.removeListeners();\n        cancelFrame(this.updatePoint);\n    }\n}\nfunction transformPoint(info, transformPagePoint) {\n    return transformPagePoint ? { point: transformPagePoint(info.point) } : info;\n}\nfunction subtractPoint(a, b) {\n    return { x: a.x - b.x, y: a.y - b.y };\n}\nfunction getPanInfo({ point }, history) {\n    return {\n        point,\n        delta: subtractPoint(point, lastDevicePoint(history)),\n        offset: subtractPoint(point, startDevicePoint(history)),\n        velocity: getVelocity(history, 0.1),\n    };\n}\nfunction startDevicePoint(history) {\n    return history[0];\n}\nfunction lastDevicePoint(history) {\n    return history[history.length - 1];\n}\nfunction getVelocity(history, timeDelta) {\n    if (history.length < 2) {\n        return { x: 0, y: 0 };\n    }\n    let i = history.length - 1;\n    let timestampedPoint = null;\n    const lastPoint = lastDevicePoint(history);\n    while (i >= 0) {\n        timestampedPoint = history[i];\n        if (lastPoint.timestamp - timestampedPoint.timestamp >\n            secondsToMilliseconds(timeDelta)) {\n            break;\n        }\n        i--;\n    }\n    if (!timestampedPoint) {\n        return { x: 0, y: 0 };\n    }\n    const time = millisecondsToSeconds(lastPoint.timestamp - timestampedPoint.timestamp);\n    if (time === 0) {\n        return { x: 0, y: 0 };\n    }\n    const currentVelocity = {\n        x: (lastPoint.x - timestampedPoint.x) / time,\n        y: (lastPoint.y - timestampedPoint.y) / time,\n    };\n    if (currentVelocity.x === Infinity) {\n        currentVelocity.x = 0;\n    }\n    if (currentVelocity.y === Infinity) {\n        currentVelocity.y = 0;\n    }\n    return currentVelocity;\n}\n\nexport { PanSession };\n","import { mix } from '../../utils/mix.mjs';\n\nfunction calcLength(axis) {\n    return axis.max - axis.min;\n}\nfunction isNear(value, target = 0, maxDistance = 0.01) {\n    return Math.abs(value - target) <= maxDistance;\n}\nfunction calcAxisDelta(delta, source, target, origin = 0.5) {\n    delta.origin = origin;\n    delta.originPoint = mix(source.min, source.max, delta.origin);\n    delta.scale = calcLength(target) / calcLength(source);\n    if (isNear(delta.scale, 1, 0.0001) || isNaN(delta.scale))\n        delta.scale = 1;\n    delta.translate =\n        mix(target.min, target.max, delta.origin) - delta.originPoint;\n    if (isNear(delta.translate) || isNaN(delta.translate))\n        delta.translate = 0;\n}\nfunction calcBoxDelta(delta, source, target, origin) {\n    calcAxisDelta(delta.x, source.x, target.x, origin ? origin.originX : undefined);\n    calcAxisDelta(delta.y, source.y, target.y, origin ? origin.originY : undefined);\n}\nfunction calcRelativeAxis(target, relative, parent) {\n    target.min = parent.min + relative.min;\n    target.max = target.min + calcLength(relative);\n}\nfunction calcRelativeBox(target, relative, parent) {\n    calcRelativeAxis(target.x, relative.x, parent.x);\n    calcRelativeAxis(target.y, relative.y, parent.y);\n}\nfunction calcRelativeAxisPosition(target, layout, parent) {\n    target.min = layout.min - parent.min;\n    target.max = target.min + calcLength(layout);\n}\nfunction calcRelativePosition(target, layout, parent) {\n    calcRelativeAxisPosition(target.x, layout.x, parent.x);\n    calcRelativeAxisPosition(target.y, layout.y, parent.y);\n}\n\nexport { calcAxisDelta, calcBoxDelta, calcLength, calcRelativeAxis, calcRelativeAxisPosition, calcRelativeBox, calcRelativePosition, isNear };\n","import { progress } from '../../../utils/progress.mjs';\nimport { calcLength } from '../../../projection/geometry/delta-calc.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { mix } from '../../../utils/mix.mjs';\n\n/**\n * Apply constraints to a point. These constraints are both physical along an\n * axis, and an elastic factor that determines how much to constrain the point\n * by if it does lie outside the defined parameters.\n */\nfunction applyConstraints(point, { min, max }, elastic) {\n    if (min !== undefined && point < min) {\n        // If we have a min point defined, and this is outside of that, constrain\n        point = elastic ? mix(min, point, elastic.min) : Math.max(point, min);\n    }\n    else if (max !== undefined && point > max) {\n        // If we have a max point defined, and this is outside of that, constrain\n        point = elastic ? mix(max, point, elastic.max) : Math.min(point, max);\n    }\n    return point;\n}\n/**\n * Calculate constraints in terms of the viewport when defined relatively to the\n * measured axis. This is measured from the nearest edge, so a max constraint of 200\n * on an axis with a max value of 300 would return a constraint of 500 - axis length\n */\nfunction calcRelativeAxisConstraints(axis, min, max) {\n    return {\n        min: min !== undefined ? axis.min + min : undefined,\n        max: max !== undefined\n            ? axis.max + max - (axis.max - axis.min)\n            : undefined,\n    };\n}\n/**\n * Calculate constraints in terms of the viewport when\n * defined relatively to the measured bounding box.\n */\nfunction calcRelativeConstraints(layoutBox, { top, left, bottom, right }) {\n    return {\n        x: calcRelativeAxisConstraints(layoutBox.x, left, right),\n        y: calcRelativeAxisConstraints(layoutBox.y, top, bottom),\n    };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative axis\n */\nfunction calcViewportAxisConstraints(layoutAxis, constraintsAxis) {\n    let min = constraintsAxis.min - layoutAxis.min;\n    let max = constraintsAxis.max - layoutAxis.max;\n    // If the constraints axis is actually smaller than the layout axis then we can\n    // flip the constraints\n    if (constraintsAxis.max - constraintsAxis.min <\n        layoutAxis.max - layoutAxis.min) {\n        [min, max] = [max, min];\n    }\n    return { min, max };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative box\n */\nfunction calcViewportConstraints(layoutBox, constraintsBox) {\n    return {\n        x: calcViewportAxisConstraints(layoutBox.x, constraintsBox.x),\n        y: calcViewportAxisConstraints(layoutBox.y, constraintsBox.y),\n    };\n}\n/**\n * Calculate a transform origin relative to the source axis, between 0-1, that results\n * in an asthetically pleasing scale/transform needed to project from source to target.\n */\nfunction calcOrigin(source, target) {\n    let origin = 0.5;\n    const sourceLength = calcLength(source);\n    const targetLength = calcLength(target);\n    if (targetLength > sourceLength) {\n        origin = progress(target.min, target.max - sourceLength, source.min);\n    }\n    else if (sourceLength > targetLength) {\n        origin = progress(source.min, source.max - targetLength, target.min);\n    }\n    return clamp(0, 1, origin);\n}\n/**\n * Rebase the calculated viewport constraints relative to the layout.min point.\n */\nfunction rebaseAxisConstraints(layout, constraints) {\n    const relativeConstraints = {};\n    if (constraints.min !== undefined) {\n        relativeConstraints.min = constraints.min - layout.min;\n    }\n    if (constraints.max !== undefined) {\n        relativeConstraints.max = constraints.max - layout.min;\n    }\n    return relativeConstraints;\n}\nconst defaultElastic = 0.35;\n/**\n * Accepts a dragElastic prop and returns resolved elastic values for each axis.\n */\nfunction resolveDragElastic(dragElastic = defaultElastic) {\n    if (dragElastic === false) {\n        dragElastic = 0;\n    }\n    else if (dragElastic === true) {\n        dragElastic = defaultElastic;\n    }\n    return {\n        x: resolveAxisElastic(dragElastic, \"left\", \"right\"),\n        y: resolveAxisElastic(dragElastic, \"top\", \"bottom\"),\n    };\n}\nfunction resolveAxisElastic(dragElastic, minLabel, maxLabel) {\n    return {\n        min: resolvePointElastic(dragElastic, minLabel),\n        max: resolvePointElastic(dragElastic, maxLabel),\n    };\n}\nfunction resolvePointElastic(dragElastic, label) {\n    return typeof dragElastic === \"number\"\n        ? dragElastic\n        : dragElastic[label] || 0;\n}\n\nexport { applyConstraints, calcOrigin, calcRelativeAxisConstraints, calcRelativeConstraints, calcViewportAxisConstraints, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, resolveAxisElastic, resolveDragElastic, resolvePointElastic };\n","function eachAxis(callback) {\n    return [callback(\"x\"), callback(\"y\")];\n}\n\nexport { eachAxis };\n","/**\n * Bounding boxes tend to be defined as top, left, right, bottom. For various operations\n * it's easier to consider each axis individually. This function returns a bounding box\n * as a map of single-axis min/max values.\n */\nfunction convertBoundingBoxToBox({ top, left, right, bottom, }) {\n    return {\n        x: { min: left, max: right },\n        y: { min: top, max: bottom },\n    };\n}\nfunction convertBoxToBoundingBox({ x, y }) {\n    return { top: y.min, right: x.max, bottom: y.max, left: x.min };\n}\n/**\n * Applies a TransformPoint function to a bounding box. TransformPoint is usually a function\n * provided by Framer to allow measured points to be corrected for device scaling. This is used\n * when measuring DOM elements and DOM event points.\n */\nfunction transformBoxPoints(point, transformPoint) {\n    if (!transformPoint)\n        return point;\n    const topLeft = transformPoint({ x: point.left, y: point.top });\n    const bottomRight = transformPoint({ x: point.right, y: point.bottom });\n    return {\n        top: topLeft.y,\n        left: topLeft.x,\n        bottom: bottomRight.y,\n        right: bottomRight.x,\n    };\n}\n\nexport { convertBoundingBoxToBox, convertBoxToBoundingBox, transformBoxPoints };\n","function isIdentityScale(scale) {\n    return scale === undefined || scale === 1;\n}\nfunction hasScale({ scale, scaleX, scaleY }) {\n    return (!isIdentityScale(scale) ||\n        !isIdentityScale(scaleX) ||\n        !isIdentityScale(scaleY));\n}\nfunction hasTransform(values) {\n    return (hasScale(values) ||\n        has2DTranslate(values) ||\n        values.z ||\n        values.rotate ||\n        values.rotateX ||\n        values.rotateY);\n}\nfunction has2DTranslate(values) {\n    return is2DTranslate(values.x) || is2DTranslate(values.y);\n}\nfunction is2DTranslate(value) {\n    return value && value !== \"0%\";\n}\n\nexport { has2DTranslate, hasScale, hasTransform };\n","import { mix } from '../../utils/mix.mjs';\nimport { hasTransform } from '../utils/has-transform.mjs';\n\n/**\n * Scales a point based on a factor and an originPoint\n */\nfunction scalePoint(point, scale, originPoint) {\n    const distanceFromOrigin = point - originPoint;\n    const scaled = scale * distanceFromOrigin;\n    return originPoint + scaled;\n}\n/**\n * Applies a translate/scale delta to a point\n */\nfunction applyPointDelta(point, translate, scale, originPoint, boxScale) {\n    if (boxScale !== undefined) {\n        point = scalePoint(point, boxScale, originPoint);\n    }\n    return scalePoint(point, scale, originPoint) + translate;\n}\n/**\n * Applies a translate/scale delta to an axis\n */\nfunction applyAxisDelta(axis, translate = 0, scale = 1, originPoint, boxScale) {\n    axis.min = applyPointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = applyPointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Applies a translate/scale delta to a box\n */\nfunction applyBoxDelta(box, { x, y }) {\n    applyAxisDelta(box.x, x.translate, x.scale, x.originPoint);\n    applyAxisDelta(box.y, y.translate, y.scale, y.originPoint);\n}\n/**\n * Apply a tree of deltas to a box. We do this to calculate the effect of all the transforms\n * in a tree upon our box before then calculating how to project it into our desired viewport-relative box\n *\n * This is the final nested loop within updateLayoutDelta for future refactoring\n */\nfunction applyTreeDeltas(box, treeScale, treePath, isSharedTransition = false) {\n    const treeLength = treePath.length;\n    if (!treeLength)\n        return;\n    // Reset the treeScale\n    treeScale.x = treeScale.y = 1;\n    let node;\n    let delta;\n    for (let i = 0; i < treeLength; i++) {\n        node = treePath[i];\n        delta = node.projectionDelta;\n        /**\n         * TODO: Prefer to remove this, but currently we have motion components with\n         * display: contents in Framer.\n         */\n        const instance = node.instance;\n        if (instance &&\n            instance.style &&\n            instance.style.display === \"contents\") {\n            continue;\n        }\n        if (isSharedTransition &&\n            node.options.layoutScroll &&\n            node.scroll &&\n            node !== node.root) {\n            transformBox(box, {\n                x: -node.scroll.offset.x,\n                y: -node.scroll.offset.y,\n            });\n        }\n        if (delta) {\n            // Incoporate each ancestor's scale into a culmulative treeScale for this component\n            treeScale.x *= delta.x.scale;\n            treeScale.y *= delta.y.scale;\n            // Apply each ancestor's calculated delta into this component's recorded layout box\n            applyBoxDelta(box, delta);\n        }\n        if (isSharedTransition && hasTransform(node.latestValues)) {\n            transformBox(box, node.latestValues);\n        }\n    }\n    /**\n     * Snap tree scale back to 1 if it's within a non-perceivable threshold.\n     * This will help reduce useless scales getting rendered.\n     */\n    treeScale.x = snapToDefault(treeScale.x);\n    treeScale.y = snapToDefault(treeScale.y);\n}\nfunction snapToDefault(scale) {\n    if (Number.isInteger(scale))\n        return scale;\n    return scale > 1.0000000000001 || scale < 0.999999999999 ? scale : 1;\n}\nfunction translateAxis(axis, distance) {\n    axis.min = axis.min + distance;\n    axis.max = axis.max + distance;\n}\n/**\n * Apply a transform to an axis from the latest resolved motion values.\n * This function basically acts as a bridge between a flat motion value map\n * and applyAxisDelta\n */\nfunction transformAxis(axis, transforms, [key, scaleKey, originKey]) {\n    const axisOrigin = transforms[originKey] !== undefined ? transforms[originKey] : 0.5;\n    const originPoint = mix(axis.min, axis.max, axisOrigin);\n    // Apply the axis delta to the final axis\n    applyAxisDelta(axis, transforms[key], transforms[scaleKey], originPoint, transforms.scale);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Apply a transform to a box from the latest resolved motion values.\n */\nfunction transformBox(box, transform) {\n    transformAxis(box.x, transform, xKeys);\n    transformAxis(box.y, transform, yKeys);\n}\n\nexport { applyAxisDelta, applyBoxDelta, applyPointDelta, applyTreeDeltas, scalePoint, transformAxis, transformBox, translateAxis };\n","import { convertBoundingBoxToBox, transformBoxPoints } from '../geometry/conversion.mjs';\nimport { translateAxis } from '../geometry/delta-apply.mjs';\n\nfunction measureViewportBox(instance, transformPoint) {\n    return convertBoundingBoxToBox(transformBoxPoints(instance.getBoundingClientRect(), transformPoint));\n}\nfunction measurePageBox(element, rootProjectionNode, transformPagePoint) {\n    const viewportBox = measureViewportBox(element, transformPagePoint);\n    const { scroll } = rootProjectionNode;\n    if (scroll) {\n        translateAxis(viewportBox.x, scroll.offset.x);\n        translateAxis(viewportBox.y, scroll.offset.y);\n    }\n    return viewportBox;\n}\n\nexport { measurePageBox, measureViewportBox };\n","import { invariant } from '../../utils/errors.mjs';\nimport { PanSession } from '../pan/PanSession.mjs';\nimport { getGlobalLock } from './utils/lock.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { applyConstraints, calcRelativeConstraints, resolveDragElastic, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, calcOrigin } from './utils/constraints.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { eachAxis } from '../../projection/utils/each-axis.mjs';\nimport { measurePageBox } from '../../projection/utils/measure.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { convertBoxToBoundingBox, convertBoundingBoxToBox } from '../../projection/geometry/conversion.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\nimport { calcLength } from '../../projection/geometry/delta-calc.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { animateMotionValue } from '../../animation/interfaces/motion-value.mjs';\nimport { frame } from '../../frameloop/index.mjs';\n\nconst elementDragControls = new WeakMap();\n/**\n *\n */\n// let latestPointerEvent: PointerEvent\nclass VisualElementDragControls {\n    constructor(visualElement) {\n        // This is a reference to the global drag gesture lock, ensuring only one component\n        // can \"capture\" the drag of one or both axes.\n        // TODO: Look into moving this into pansession?\n        this.openGlobalLock = null;\n        this.isDragging = false;\n        this.currentDirection = null;\n        this.originPoint = { x: 0, y: 0 };\n        /**\n         * The permitted boundaries of travel, in pixels.\n         */\n        this.constraints = false;\n        this.hasMutatedConstraints = false;\n        /**\n         * The per-axis resolved elastic values.\n         */\n        this.elastic = createBox();\n        this.visualElement = visualElement;\n    }\n    start(originEvent, { snapToCursor = false } = {}) {\n        /**\n         * Don't start dragging if this component is exiting\n         */\n        const { presenceContext } = this.visualElement;\n        if (presenceContext && presenceContext.isPresent === false)\n            return;\n        const onSessionStart = (event) => {\n            // Stop any animations on both axis values immediately. This allows the user to throw and catch\n            // the component.\n            this.stopAnimation();\n            if (snapToCursor) {\n                this.snapToCursor(extractEventInfo(event, \"page\").point);\n            }\n        };\n        const onStart = (event, info) => {\n            // Attempt to grab the global drag gesture lock - maybe make this part of PanSession\n            const { drag, dragPropagation, onDragStart } = this.getProps();\n            if (drag && !dragPropagation) {\n                if (this.openGlobalLock)\n                    this.openGlobalLock();\n                this.openGlobalLock = getGlobalLock(drag);\n                // If we don 't have the lock, don't start dragging\n                if (!this.openGlobalLock)\n                    return;\n            }\n            this.isDragging = true;\n            this.currentDirection = null;\n            this.resolveConstraints();\n            if (this.visualElement.projection) {\n                this.visualElement.projection.isAnimationBlocked = true;\n                this.visualElement.projection.target = undefined;\n            }\n            /**\n             * Record gesture origin\n             */\n            eachAxis((axis) => {\n                let current = this.getAxisMotionValue(axis).get() || 0;\n                /**\n                 * If the MotionValue is a percentage value convert to px\n                 */\n                if (percent.test(current)) {\n                    const { projection } = this.visualElement;\n                    if (projection && projection.layout) {\n                        const measuredAxis = projection.layout.layoutBox[axis];\n                        if (measuredAxis) {\n                            const length = calcLength(measuredAxis);\n                            current = length * (parseFloat(current) / 100);\n                        }\n                    }\n                }\n                this.originPoint[axis] = current;\n            });\n            // Fire onDragStart event\n            if (onDragStart) {\n                frame.update(() => onDragStart(event, info), false, true);\n            }\n            const { animationState } = this.visualElement;\n            animationState && animationState.setActive(\"whileDrag\", true);\n        };\n        const onMove = (event, info) => {\n            // latestPointerEvent = event\n            const { dragPropagation, dragDirectionLock, onDirectionLock, onDrag, } = this.getProps();\n            // If we didn't successfully receive the gesture lock, early return.\n            if (!dragPropagation && !this.openGlobalLock)\n                return;\n            const { offset } = info;\n            // Attempt to detect drag direction if directionLock is true\n            if (dragDirectionLock && this.currentDirection === null) {\n                this.currentDirection = getCurrentDirection(offset);\n                // If we've successfully set a direction, notify listener\n                if (this.currentDirection !== null) {\n                    onDirectionLock && onDirectionLock(this.currentDirection);\n                }\n                return;\n            }\n            // Update each point with the latest position\n            this.updateAxis(\"x\", info.point, offset);\n            this.updateAxis(\"y\", info.point, offset);\n            /**\n             * Ideally we would leave the renderer to fire naturally at the end of\n             * this frame but if the element is about to change layout as the result\n             * of a re-render we want to ensure the browser can read the latest\n             * bounding box to ensure the pointer and element don't fall out of sync.\n             */\n            this.visualElement.render();\n            /**\n             * This must fire after the render call as it might trigger a state\n             * change which itself might trigger a layout update.\n             */\n            onDrag && onDrag(event, info);\n        };\n        const onSessionEnd = (event, info) => this.stop(event, info);\n        this.panSession = new PanSession(originEvent, {\n            onSessionStart,\n            onStart,\n            onMove,\n            onSessionEnd,\n        }, { transformPagePoint: this.visualElement.getTransformPagePoint() });\n    }\n    stop(event, info) {\n        const isDragging = this.isDragging;\n        this.cancel();\n        if (!isDragging)\n            return;\n        const { velocity } = info;\n        this.startAnimation(velocity);\n        const { onDragEnd } = this.getProps();\n        if (onDragEnd) {\n            frame.update(() => onDragEnd(event, info));\n        }\n    }\n    cancel() {\n        this.isDragging = false;\n        const { projection, animationState } = this.visualElement;\n        if (projection) {\n            projection.isAnimationBlocked = false;\n        }\n        this.panSession && this.panSession.end();\n        this.panSession = undefined;\n        const { dragPropagation } = this.getProps();\n        if (!dragPropagation && this.openGlobalLock) {\n            this.openGlobalLock();\n            this.openGlobalLock = null;\n        }\n        animationState && animationState.setActive(\"whileDrag\", false);\n    }\n    updateAxis(axis, _point, offset) {\n        const { drag } = this.getProps();\n        // If we're not dragging this axis, do an early return.\n        if (!offset || !shouldDrag(axis, drag, this.currentDirection))\n            return;\n        const axisValue = this.getAxisMotionValue(axis);\n        let next = this.originPoint[axis] + offset[axis];\n        // Apply constraints\n        if (this.constraints && this.constraints[axis]) {\n            next = applyConstraints(next, this.constraints[axis], this.elastic[axis]);\n        }\n        axisValue.set(next);\n    }\n    resolveConstraints() {\n        const { dragConstraints, dragElastic } = this.getProps();\n        const { layout } = this.visualElement.projection || {};\n        const prevConstraints = this.constraints;\n        if (dragConstraints && isRefObject(dragConstraints)) {\n            if (!this.constraints) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        }\n        else {\n            if (dragConstraints && layout) {\n                this.constraints = calcRelativeConstraints(layout.layoutBox, dragConstraints);\n            }\n            else {\n                this.constraints = false;\n            }\n        }\n        this.elastic = resolveDragElastic(dragElastic);\n        /**\n         * If we're outputting to external MotionValues, we want to rebase the measured constraints\n         * from viewport-relative to component-relative.\n         */\n        if (prevConstraints !== this.constraints &&\n            layout &&\n            this.constraints &&\n            !this.hasMutatedConstraints) {\n            eachAxis((axis) => {\n                if (this.getAxisMotionValue(axis)) {\n                    this.constraints[axis] = rebaseAxisConstraints(layout.layoutBox[axis], this.constraints[axis]);\n                }\n            });\n        }\n    }\n    resolveRefConstraints() {\n        const { dragConstraints: constraints, onMeasureDragConstraints } = this.getProps();\n        if (!constraints || !isRefObject(constraints))\n            return false;\n        const constraintsElement = constraints.current;\n        invariant(constraintsElement !== null, \"If `dragConstraints` is set as a React ref, that ref must be passed to another component's `ref` prop.\");\n        const { projection } = this.visualElement;\n        // TODO\n        if (!projection || !projection.layout)\n            return false;\n        const constraintsBox = measurePageBox(constraintsElement, projection.root, this.visualElement.getTransformPagePoint());\n        let measuredConstraints = calcViewportConstraints(projection.layout.layoutBox, constraintsBox);\n        /**\n         * If there's an onMeasureDragConstraints listener we call it and\n         * if different constraints are returned, set constraints to that\n         */\n        if (onMeasureDragConstraints) {\n            const userConstraints = onMeasureDragConstraints(convertBoxToBoundingBox(measuredConstraints));\n            this.hasMutatedConstraints = !!userConstraints;\n            if (userConstraints) {\n                measuredConstraints = convertBoundingBoxToBox(userConstraints);\n            }\n        }\n        return measuredConstraints;\n    }\n    startAnimation(velocity) {\n        const { drag, dragMomentum, dragElastic, dragTransition, dragSnapToOrigin, onDragTransitionEnd, } = this.getProps();\n        const constraints = this.constraints || {};\n        const momentumAnimations = eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, this.currentDirection)) {\n                return;\n            }\n            let transition = (constraints && constraints[axis]) || {};\n            if (dragSnapToOrigin)\n                transition = { min: 0, max: 0 };\n            /**\n             * Overdamp the boundary spring if `dragElastic` is disabled. There's still a frame\n             * of spring animations so we should look into adding a disable spring option to `inertia`.\n             * We could do something here where we affect the `bounceStiffness` and `bounceDamping`\n             * using the value of `dragElastic`.\n             */\n            const bounceStiffness = dragElastic ? 200 : 1000000;\n            const bounceDamping = dragElastic ? 40 : 10000000;\n            const inertia = {\n                type: \"inertia\",\n                velocity: dragMomentum ? velocity[axis] : 0,\n                bounceStiffness,\n                bounceDamping,\n                timeConstant: 750,\n                restDelta: 1,\n                restSpeed: 10,\n                ...dragTransition,\n                ...transition,\n            };\n            // If we're not animating on an externally-provided `MotionValue` we can use the\n            // component's animation controls which will handle interactions with whileHover (etc),\n            // otherwise we just have to animate the `MotionValue` itself.\n            return this.startAxisValueAnimation(axis, inertia);\n        });\n        // Run all animations and then resolve the new drag constraints.\n        return Promise.all(momentumAnimations).then(onDragTransitionEnd);\n    }\n    startAxisValueAnimation(axis, transition) {\n        const axisValue = this.getAxisMotionValue(axis);\n        return axisValue.start(animateMotionValue(axis, axisValue, 0, transition));\n    }\n    stopAnimation() {\n        eachAxis((axis) => this.getAxisMotionValue(axis).stop());\n    }\n    /**\n     * Drag works differently depending on which props are provided.\n     *\n     * - If _dragX and _dragY are provided, we output the gesture delta directly to those motion values.\n     * - Otherwise, we apply the delta to the x/y motion values.\n     */\n    getAxisMotionValue(axis) {\n        const dragKey = \"_drag\" + axis.toUpperCase();\n        const props = this.visualElement.getProps();\n        const externalMotionValue = props[dragKey];\n        return externalMotionValue\n            ? externalMotionValue\n            : this.visualElement.getValue(axis, (props.initial ? props.initial[axis] : undefined) || 0);\n    }\n    snapToCursor(point) {\n        eachAxis((axis) => {\n            const { drag } = this.getProps();\n            // If we're not dragging this axis, do an early return.\n            if (!shouldDrag(axis, drag, this.currentDirection))\n                return;\n            const { projection } = this.visualElement;\n            const axisValue = this.getAxisMotionValue(axis);\n            if (projection && projection.layout) {\n                const { min, max } = projection.layout.layoutBox[axis];\n                axisValue.set(point[axis] - mix(min, max, 0.5));\n            }\n        });\n    }\n    /**\n     * When the viewport resizes we want to check if the measured constraints\n     * have changed and, if so, reposition the element within those new constraints\n     * relative to where it was before the resize.\n     */\n    scalePositionWithinConstraints() {\n        if (!this.visualElement.current)\n            return;\n        const { drag, dragConstraints } = this.getProps();\n        const { projection } = this.visualElement;\n        if (!isRefObject(dragConstraints) || !projection || !this.constraints)\n            return;\n        /**\n         * Stop current animations as there can be visual glitching if we try to do\n         * this mid-animation\n         */\n        this.stopAnimation();\n        /**\n         * Record the relative position of the dragged element relative to the\n         * constraints box and save as a progress value.\n         */\n        const boxProgress = { x: 0, y: 0 };\n        eachAxis((axis) => {\n            const axisValue = this.getAxisMotionValue(axis);\n            if (axisValue) {\n                const latest = axisValue.get();\n                boxProgress[axis] = calcOrigin({ min: latest, max: latest }, this.constraints[axis]);\n            }\n        });\n        /**\n         * Update the layout of this element and resolve the latest drag constraints\n         */\n        const { transformTemplate } = this.visualElement.getProps();\n        this.visualElement.current.style.transform = transformTemplate\n            ? transformTemplate({}, \"\")\n            : \"none\";\n        projection.root && projection.root.updateScroll();\n        projection.updateLayout();\n        this.resolveConstraints();\n        /**\n         * For each axis, calculate the current progress of the layout axis\n         * within the new constraints.\n         */\n        eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, null))\n                return;\n            /**\n             * Calculate a new transform based on the previous box progress\n             */\n            const axisValue = this.getAxisMotionValue(axis);\n            const { min, max } = this.constraints[axis];\n            axisValue.set(mix(min, max, boxProgress[axis]));\n        });\n    }\n    addListeners() {\n        if (!this.visualElement.current)\n            return;\n        elementDragControls.set(this.visualElement, this);\n        const element = this.visualElement.current;\n        /**\n         * Attach a pointerdown event listener on this DOM element to initiate drag tracking.\n         */\n        const stopPointerListener = addPointerEvent(element, \"pointerdown\", (event) => {\n            const { drag, dragListener = true } = this.getProps();\n            drag && dragListener && this.start(event);\n        });\n        const measureDragConstraints = () => {\n            const { dragConstraints } = this.getProps();\n            if (isRefObject(dragConstraints)) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        };\n        const { projection } = this.visualElement;\n        const stopMeasureLayoutListener = projection.addEventListener(\"measure\", measureDragConstraints);\n        if (projection && !projection.layout) {\n            projection.root && projection.root.updateScroll();\n            projection.updateLayout();\n        }\n        measureDragConstraints();\n        /**\n         * Attach a window resize listener to scale the draggable target within its defined\n         * constraints as the window resizes.\n         */\n        const stopResizeListener = addDomEvent(window, \"resize\", () => this.scalePositionWithinConstraints());\n        /**\n         * If the element's layout changes, calculate the delta and apply that to\n         * the drag gesture's origin point.\n         */\n        const stopLayoutUpdateListener = projection.addEventListener(\"didUpdate\", (({ delta, hasLayoutChanged }) => {\n            if (this.isDragging && hasLayoutChanged) {\n                eachAxis((axis) => {\n                    const motionValue = this.getAxisMotionValue(axis);\n                    if (!motionValue)\n                        return;\n                    this.originPoint[axis] += delta[axis].translate;\n                    motionValue.set(motionValue.get() + delta[axis].translate);\n                });\n                this.visualElement.render();\n            }\n        }));\n        return () => {\n            stopResizeListener();\n            stopPointerListener();\n            stopMeasureLayoutListener();\n            stopLayoutUpdateListener && stopLayoutUpdateListener();\n        };\n    }\n    getProps() {\n        const props = this.visualElement.getProps();\n        const { drag = false, dragDirectionLock = false, dragPropagation = false, dragConstraints = false, dragElastic = defaultElastic, dragMomentum = true, } = props;\n        return {\n            ...props,\n            drag,\n            dragDirectionLock,\n            dragPropagation,\n            dragConstraints,\n            dragElastic,\n            dragMomentum,\n        };\n    }\n}\nfunction shouldDrag(direction, drag, currentDirection) {\n    return ((drag === true || drag === direction) &&\n        (currentDirection === null || currentDirection === direction));\n}\n/**\n * Based on an x/y offset determine the current drag direction. If both axis' offsets are lower\n * than the provided threshold, return `null`.\n *\n * @param offset - The x/y offset from origin.\n * @param lockThreshold - (Optional) - the minimum absolute offset before we can determine a drag direction.\n */\nfunction getCurrentDirection(offset, lockThreshold = 10) {\n    let direction = null;\n    if (Math.abs(offset.y) > lockThreshold) {\n        direction = \"y\";\n    }\n    else if (Math.abs(offset.x) > lockThreshold) {\n        direction = \"x\";\n    }\n    return direction;\n}\n\nexport { VisualElementDragControls, elementDragControls };\n","const createAxisDelta = () => ({\n    translate: 0,\n    scale: 1,\n    origin: 0,\n    originPoint: 0,\n});\nconst createDelta = () => ({\n    x: createAxisDelta(),\n    y: createAxisDelta(),\n});\nconst createAxis = () => ({ min: 0, max: 0 });\nconst createBox = () => ({\n    x: createAxis(),\n    y: createAxis(),\n});\n\nexport { createAxis, createAxisDelta, createBox, createDelta };\n","import { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { VisualElementDragControls } from './VisualElementDragControls.mjs';\n\nclass DragGesture extends Feature {\n    constructor(node) {\n        super(node);\n        this.removeGroupControls = noop;\n        this.removeListeners = noop;\n        this.controls = new VisualElementDragControls(node);\n    }\n    mount() {\n        // If we've been provided a DragControls for manual control over the drag gesture,\n        // subscribe this component to it on mount.\n        const { dragControls } = this.node.getProps();\n        if (dragControls) {\n            this.removeGroupControls = dragControls.subscribe(this.controls);\n        }\n        this.removeListeners = this.controls.addListeners() || noop;\n    }\n    unmount() {\n        this.removeGroupControls();\n        this.removeListeners();\n    }\n}\n\nexport { DragGesture };\n","import { PanSession } from './PanSession.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { frame } from '../../frameloop/index.mjs';\n\nconst asyncHandler = (handler) => (event, info) => {\n    if (handler) {\n        frame.update(() => handler(event, info));\n    }\n};\nclass PanGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removePointerDownListener = noop;\n    }\n    onPointerDown(pointerDownEvent) {\n        this.session = new PanSession(pointerDownEvent, this.createPanHandlers(), { transformPagePoint: this.node.getTransformPagePoint() });\n    }\n    createPanHandlers() {\n        const { onPanSessionStart, onPanStart, onPan, onPanEnd } = this.node.getProps();\n        return {\n            onSessionStart: asyncHandler(onPanSessionStart),\n            onStart: asyncHandler(onPanStart),\n            onMove: onPan,\n            onEnd: (event, info) => {\n                delete this.session;\n                if (onPanEnd) {\n                    frame.update(() => onPanEnd(event, info));\n                }\n            },\n        };\n    }\n    mount() {\n        this.removePointerDownListener = addPointerEvent(this.node.current, \"pointerdown\", (event) => this.onPointerDown(event));\n    }\n    update() {\n        this.session && this.session.updateHandlers(this.createPanHandlers());\n    }\n    unmount() {\n        this.removePointerDownListener();\n        this.session && this.session.end();\n    }\n}\n\nexport { PanGesture };\n","/**\n * This should only ever be modified on the client otherwise it'll\n * persist through server requests. If we need instanced states we\n * could lazy-init via root.\n */\nconst globalProjectionState = {\n    /**\n     * Global flag as to whether the tree has animated since the last time\n     * we resized the window\n     */\n    hasAnimatedSinceResize: true,\n    /**\n     * We set this to true once, on the first update. Any nodes added to the tree beyond that\n     * update will be given a `data-projection-id` attribute.\n     */\n    hasEverUpdated: false,\n};\n\nexport { globalProjectionState };\n","import { px } from '../../value/types/numbers/units.mjs';\n\nfunction pixelsToPercent(pixels, axis) {\n    if (axis.max === axis.min)\n        return 0;\n    return (pixels / (axis.max - axis.min)) * 100;\n}\n/**\n * We always correct borderRadius as a percentage rather than pixels to reduce paints.\n * For example, if you are projecting a box that is 100px wide with a 10px borderRadius\n * into a box that is 200px wide with a 20px borderRadius, that is actually a 10%\n * borderRadius in both states. If we animate between the two in pixels that will trigger\n * a paint each time. If we animate between the two in percentage we'll avoid a paint.\n */\nconst correctBorderRadius = {\n    correct: (latest, node) => {\n        if (!node.target)\n            return latest;\n        /**\n         * If latest is a string, if it's a percentage we can return immediately as it's\n         * going to be stretched appropriately. Otherwise, if it's a pixel, convert it to a number.\n         */\n        if (typeof latest === \"string\") {\n            if (px.test(latest)) {\n                latest = parseFloat(latest);\n            }\n            else {\n                return latest;\n            }\n        }\n        /**\n         * If latest is a number, it's a pixel value. We use the current viewportBox to calculate that\n         * pixel value as a percentage of each axis\n         */\n        const x = pixelsToPercent(latest, node.target.x);\n        const y = pixelsToPercent(latest, node.target.y);\n        return `${x}% ${y}%`;\n    },\n};\n\nexport { correctBorderRadius, pixelsToPercent };\n","import { mix } from '../../utils/mix.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\n\nconst correctBoxShadow = {\n    correct: (latest, { treeScale, projectionDelta }) => {\n        const original = latest;\n        const shadow = complex.parse(latest);\n        // TODO: Doesn't support multiple shadows\n        if (shadow.length > 5)\n            return original;\n        const template = complex.createTransformer(latest);\n        const offset = typeof shadow[0] !== \"number\" ? 1 : 0;\n        // Calculate the overall context scale\n        const xScale = projectionDelta.x.scale * treeScale.x;\n        const yScale = projectionDelta.y.scale * treeScale.y;\n        shadow[0 + offset] /= xScale;\n        shadow[1 + offset] /= yScale;\n        /**\n         * Ideally we'd correct x and y scales individually, but because blur and\n         * spread apply to both we have to take a scale average and apply that instead.\n         * We could potentially improve the outcome of this by incorporating the ratio between\n         * the two scales.\n         */\n        const averageScale = mix(xScale, yScale, 0.5);\n        // Blur\n        if (typeof shadow[2 + offset] === \"number\")\n            shadow[2 + offset] /= averageScale;\n        // Spread\n        if (typeof shadow[3 + offset] === \"number\")\n            shadow[3 + offset] /= averageScale;\n        return template(shadow);\n    },\n};\n\nexport { correctBoxShadow };\n","import { frame } from '../../../frameloop/index.mjs';\nimport React__default, { useContext } from 'react';\nimport { usePresence } from '../../../components/AnimatePresence/use-presence.mjs';\nimport { LayoutGroupContext } from '../../../context/LayoutGroupContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../../context/SwitchLayoutGroupContext.mjs';\nimport { globalProjectionState } from '../../../projection/node/state.mjs';\nimport { correctBorderRadius } from '../../../projection/styles/scale-border-radius.mjs';\nimport { correctBoxShadow } from '../../../projection/styles/scale-box-shadow.mjs';\nimport { addScaleCorrector } from '../../../projection/styles/scale-correction.mjs';\n\nclass MeasureLayoutWithContext extends React__default.Component {\n    /**\n     * This only mounts projection nodes for components that\n     * need measuring, we might want to do it for all components\n     * in order to incorporate transforms\n     */\n    componentDidMount() {\n        const { visualElement, layoutGroup, switchLayoutGroup, layoutId } = this.props;\n        const { projection } = visualElement;\n        addScaleCorrector(defaultScaleCorrectors);\n        if (projection) {\n            if (layoutGroup.group)\n                layoutGroup.group.add(projection);\n            if (switchLayoutGroup && switchLayoutGroup.register && layoutId) {\n                switchLayoutGroup.register(projection);\n            }\n            projection.root.didUpdate();\n            projection.addEventListener(\"animationComplete\", () => {\n                this.safeToRemove();\n            });\n            projection.setOptions({\n                ...projection.options,\n                onExitComplete: () => this.safeToRemove(),\n            });\n        }\n        globalProjectionState.hasEverUpdated = true;\n    }\n    getSnapshotBeforeUpdate(prevProps) {\n        const { layoutDependency, visualElement, drag, isPresent } = this.props;\n        const projection = visualElement.projection;\n        if (!projection)\n            return null;\n        /**\n         * TODO: We use this data in relegate to determine whether to\n         * promote a previous element. There's no guarantee its presence data\n         * will have updated by this point - if a bug like this arises it will\n         * have to be that we markForRelegation and then find a new lead some other way,\n         * perhaps in didUpdate\n         */\n        projection.isPresent = isPresent;\n        if (drag ||\n            prevProps.layoutDependency !== layoutDependency ||\n            layoutDependency === undefined) {\n            projection.willUpdate();\n        }\n        else {\n            this.safeToRemove();\n        }\n        if (prevProps.isPresent !== isPresent) {\n            if (isPresent) {\n                projection.promote();\n            }\n            else if (!projection.relegate()) {\n                /**\n                 * If there's another stack member taking over from this one,\n                 * it's in charge of the exit animation and therefore should\n                 * be in charge of the safe to remove. Otherwise we call it here.\n                 */\n                frame.postRender(() => {\n                    const stack = projection.getStack();\n                    if (!stack || !stack.members.length) {\n                        this.safeToRemove();\n                    }\n                });\n            }\n        }\n        return null;\n    }\n    componentDidUpdate() {\n        const { projection } = this.props.visualElement;\n        if (projection) {\n            projection.root.didUpdate();\n            queueMicrotask(() => {\n                if (!projection.currentAnimation && projection.isLead()) {\n                    this.safeToRemove();\n                }\n            });\n        }\n    }\n    componentWillUnmount() {\n        const { visualElement, layoutGroup, switchLayoutGroup: promoteContext, } = this.props;\n        const { projection } = visualElement;\n        if (projection) {\n            projection.scheduleCheckAfterUnmount();\n            if (layoutGroup && layoutGroup.group)\n                layoutGroup.group.remove(projection);\n            if (promoteContext && promoteContext.deregister)\n                promoteContext.deregister(projection);\n        }\n    }\n    safeToRemove() {\n        const { safeToRemove } = this.props;\n        safeToRemove && safeToRemove();\n    }\n    render() {\n        return null;\n    }\n}\nfunction MeasureLayout(props) {\n    const [isPresent, safeToRemove] = usePresence();\n    const layoutGroup = useContext(LayoutGroupContext);\n    return (React__default.createElement(MeasureLayoutWithContext, { ...props, layoutGroup: layoutGroup, switchLayoutGroup: useContext(SwitchLayoutGroupContext), isPresent: isPresent, safeToRemove: safeToRemove }));\n}\nconst defaultScaleCorrectors = {\n    borderRadius: {\n        ...correctBorderRadius,\n        applyTo: [\n            \"borderTopLeftRadius\",\n            \"borderTopRightRadius\",\n            \"borderBottomLeftRadius\",\n            \"borderBottomRightRadius\",\n        ],\n    },\n    borderTopLeftRadius: correctBorderRadius,\n    borderTopRightRadius: correctBorderRadius,\n    borderBottomLeftRadius: correctBorderRadius,\n    borderBottomRightRadius: correctBorderRadius,\n    boxShadow: correctBoxShadow,\n};\n\nexport { MeasureLayout };\n","import { useContext, useId, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\n\n/**\n * When a component is the child of `AnimatePresence`, it can use `usePresence`\n * to access information about whether it's still present in the React tree.\n *\n * ```jsx\n * import { usePresence } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const [isPresent, safeToRemove] = usePresence()\n *\n *   useEffect(() => {\n *     !isPresent && setTimeout(safeToRemove, 1000)\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * If `isPresent` is `false`, it means that a component has been removed the tree, but\n * `AnimatePresence` won't really remove it until `safeToRemove` has been called.\n *\n * @public\n */\nfunction usePresence() {\n    const context = useContext(PresenceContext);\n    if (context === null)\n        return [true, null];\n    const { isPresent, onExitComplete, register } = context;\n    // It's safe to call the following hooks conditionally (after an early return) because the context will always\n    // either be null or non-null for the lifespan of the component.\n    const id = useId();\n    useEffect(() => register(id), []);\n    const safeToRemove = () => onExitComplete && onExitComplete(id);\n    return !isPresent && onExitComplete ? [false, safeToRemove] : [true];\n}\n/**\n * Similar to `usePresence`, except `useIsPresent` simply returns whether or not the component is present.\n * There is no `safeToRemove` function.\n *\n * ```jsx\n * import { useIsPresent } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const isPresent = useIsPresent()\n *\n *   useEffect(() => {\n *     !isPresent && console.log(\"I've been removed!\")\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * @public\n */\nfunction useIsPresent() {\n    return isPresent(useContext(PresenceContext));\n}\nfunction isPresent(context) {\n    return context === null ? true : context.isPresent;\n}\n\nexport { isPresent, useIsPresent, usePresence };\n","import { circOut } from '../../easing/circ.mjs';\nimport { progress } from '../../utils/progress.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { percent, px } from '../../value/types/numbers/units.mjs';\n\nconst borders = [\"TopLeft\", \"TopRight\", \"BottomLeft\", \"BottomRight\"];\nconst numBorders = borders.length;\nconst asNumber = (value) => typeof value === \"string\" ? parseFloat(value) : value;\nconst isPx = (value) => typeof value === \"number\" || px.test(value);\nfunction mixValues(target, follow, lead, progress, shouldCrossfadeOpacity, isOnlyMember) {\n    if (shouldCrossfadeOpacity) {\n        target.opacity = mix(0, \n        // TODO Reinstate this if only child\n        lead.opacity !== undefined ? lead.opacity : 1, easeCrossfadeIn(progress));\n        target.opacityExit = mix(follow.opacity !== undefined ? follow.opacity : 1, 0, easeCrossfadeOut(progress));\n    }\n    else if (isOnlyMember) {\n        target.opacity = mix(follow.opacity !== undefined ? follow.opacity : 1, lead.opacity !== undefined ? lead.opacity : 1, progress);\n    }\n    /**\n     * Mix border radius\n     */\n    for (let i = 0; i < numBorders; i++) {\n        const borderLabel = `border${borders[i]}Radius`;\n        let followRadius = getRadius(follow, borderLabel);\n        let leadRadius = getRadius(lead, borderLabel);\n        if (followRadius === undefined && leadRadius === undefined)\n            continue;\n        followRadius || (followRadius = 0);\n        leadRadius || (leadRadius = 0);\n        const canMix = followRadius === 0 ||\n            leadRadius === 0 ||\n            isPx(followRadius) === isPx(leadRadius);\n        if (canMix) {\n            target[borderLabel] = Math.max(mix(asNumber(followRadius), asNumber(leadRadius), progress), 0);\n            if (percent.test(leadRadius) || percent.test(followRadius)) {\n                target[borderLabel] += \"%\";\n            }\n        }\n        else {\n            target[borderLabel] = leadRadius;\n        }\n    }\n    /**\n     * Mix rotation\n     */\n    if (follow.rotate || lead.rotate) {\n        target.rotate = mix(follow.rotate || 0, lead.rotate || 0, progress);\n    }\n}\nfunction getRadius(values, radiusName) {\n    return values[radiusName] !== undefined\n        ? values[radiusName]\n        : values.borderRadius;\n}\n// /**\n//  * We only want to mix the background color if there's a follow element\n//  * that we're not crossfading opacity between. For instance with switch\n//  * AnimateSharedLayout animations, this helps the illusion of a continuous\n//  * element being animated but also cuts down on the number of paints triggered\n//  * for elements where opacity is doing that work for us.\n//  */\n// if (\n//     !hasFollowElement &&\n//     latestLeadValues.backgroundColor &&\n//     latestFollowValues.backgroundColor\n// ) {\n//     /**\n//      * This isn't ideal performance-wise as mixColor is creating a new function every frame.\n//      * We could probably create a mixer that runs at the start of the animation but\n//      * the idea behind the crossfader is that it runs dynamically between two potentially\n//      * changing targets (ie opacity or borderRadius may be animating independently via variants)\n//      */\n//     leadState.backgroundColor = followState.backgroundColor = mixColor(\n//         latestFollowValues.backgroundColor as string,\n//         latestLeadValues.backgroundColor as string\n//     )(p)\n// }\nconst easeCrossfadeIn = compress(0, 0.5, circOut);\nconst easeCrossfadeOut = compress(0.5, 0.95, noop);\nfunction compress(min, max, easing) {\n    return (p) => {\n        // Could replace ifs with clamp\n        if (p < min)\n            return 0;\n        if (p > max)\n            return 1;\n        return easing(progress(min, max, p));\n    };\n}\n\nexport { mixValues };\n","/**\n * Reset an axis to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisInto(axis, originAxis) {\n    axis.min = originAxis.min;\n    axis.max = originAxis.max;\n}\n/**\n * Reset a box to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyBoxInto(box, originBox) {\n    copyAxisInto(box.x, originBox.x);\n    copyAxisInto(box.y, originBox.y);\n}\n\nexport { copyAxisInto, copyBoxInto };\n","import { mix } from '../../utils/mix.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { scalePoint } from './delta-apply.mjs';\n\n/**\n * Remove a delta from a point. This is essentially the steps of applyPointDelta in reverse\n */\nfunction removePointDelta(point, translate, scale, originPoint, boxScale) {\n    point -= translate;\n    point = scalePoint(point, 1 / scale, originPoint);\n    if (boxScale !== undefined) {\n        point = scalePoint(point, 1 / boxScale, originPoint);\n    }\n    return point;\n}\n/**\n * Remove a delta from an axis. This is essentially the steps of applyAxisDelta in reverse\n */\nfunction removeAxisDelta(axis, translate = 0, scale = 1, origin = 0.5, boxScale, originAxis = axis, sourceAxis = axis) {\n    if (percent.test(translate)) {\n        translate = parseFloat(translate);\n        const relativeProgress = mix(sourceAxis.min, sourceAxis.max, translate / 100);\n        translate = relativeProgress - sourceAxis.min;\n    }\n    if (typeof translate !== \"number\")\n        return;\n    let originPoint = mix(originAxis.min, originAxis.max, origin);\n    if (axis === originAxis)\n        originPoint -= translate;\n    axis.min = removePointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = removePointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Remove a transforms from an axis. This is essentially the steps of applyAxisTransforms in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeAxisTransforms(axis, transforms, [key, scaleKey, originKey], origin, sourceAxis) {\n    removeAxisDelta(axis, transforms[key], transforms[scaleKey], transforms[originKey], transforms.scale, origin, sourceAxis);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Remove a transforms from an box. This is essentially the steps of applyAxisBox in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeBoxTransforms(box, transforms, originBox, sourceBox) {\n    removeAxisTransforms(box.x, transforms, xKeys, originBox ? originBox.x : undefined, sourceBox ? sourceBox.x : undefined);\n    removeAxisTransforms(box.y, transforms, yKeys, originBox ? originBox.y : undefined, sourceBox ? sourceBox.y : undefined);\n}\n\nexport { removeAxisDelta, removeAxisTransforms, removeBoxTransforms, removePointDelta };\n","import { calcLength } from './delta-calc.mjs';\n\nfunction isAxisDeltaZero(delta) {\n    return delta.translate === 0 && delta.scale === 1;\n}\nfunction isDeltaZero(delta) {\n    return isAxisDeltaZero(delta.x) && isAxisDeltaZero(delta.y);\n}\nfunction boxEquals(a, b) {\n    return (a.x.min === b.x.min &&\n        a.x.max === b.x.max &&\n        a.y.min === b.y.min &&\n        a.y.max === b.y.max);\n}\nfunction aspectRatio(box) {\n    return calcLength(box.x) / calcLength(box.y);\n}\n\nexport { aspectRatio, boxEquals, isDeltaZero };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\n\nclass NodeStack {\n    constructor() {\n        this.members = [];\n    }\n    add(node) {\n        addUniqueItem(this.members, node);\n        node.scheduleRender();\n    }\n    remove(node) {\n        removeItem(this.members, node);\n        if (node === this.prevLead) {\n            this.prevLead = undefined;\n        }\n        if (node === this.lead) {\n            const prevLead = this.members[this.members.length - 1];\n            if (prevLead) {\n                this.promote(prevLead);\n            }\n        }\n    }\n    relegate(node) {\n        const indexOfNode = this.members.findIndex((member) => node === member);\n        if (indexOfNode === 0)\n            return false;\n        /**\n         * Find the next projection node that is present\n         */\n        let prevLead;\n        for (let i = indexOfNode; i >= 0; i--) {\n            const member = this.members[i];\n            if (member.isPresent !== false) {\n                prevLead = member;\n                break;\n            }\n        }\n        if (prevLead) {\n            this.promote(prevLead);\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    promote(node, preserveFollowOpacity) {\n        const prevLead = this.lead;\n        if (node === prevLead)\n            return;\n        this.prevLead = prevLead;\n        this.lead = node;\n        node.show();\n        if (prevLead) {\n            prevLead.instance && prevLead.scheduleRender();\n            node.scheduleRender();\n            node.resumeFrom = prevLead;\n            if (preserveFollowOpacity) {\n                node.resumeFrom.preserveOpacity = true;\n            }\n            if (prevLead.snapshot) {\n                node.snapshot = prevLead.snapshot;\n                node.snapshot.latestValues =\n                    prevLead.animationValues || prevLead.latestValues;\n            }\n            if (node.root && node.root.isUpdating) {\n                node.isLayoutDirty = true;\n            }\n            const { crossfade } = node.options;\n            if (crossfade === false) {\n                prevLead.hide();\n            }\n            /**\n             * TODO:\n             *   - Test border radius when previous node was deleted\n             *   - boxShadow mixing\n             *   - Shared between element A in scrolled container and element B (scroll stays the same or changes)\n             *   - Shared between element A in transformed container and element B (transform stays the same or changes)\n             *   - Shared between element A in scrolled page and element B (scroll stays the same or changes)\n             * ---\n             *   - Crossfade opacity of root nodes\n             *   - layoutId changes after animation\n             *   - layoutId changes mid animation\n             */\n        }\n    }\n    exitAnimationComplete() {\n        this.members.forEach((node) => {\n            const { options, resumingFrom } = node;\n            options.onExitComplete && options.onExitComplete();\n            if (resumingFrom) {\n                resumingFrom.options.onExitComplete &&\n                    resumingFrom.options.onExitComplete();\n            }\n        });\n    }\n    scheduleRender() {\n        this.members.forEach((node) => {\n            node.instance && node.scheduleRender(false);\n        });\n    }\n    /**\n     * Clear any leads that have been removed this render to prevent them from being\n     * used in future animations and to prevent memory leaks\n     */\n    removeLeadSnapshot() {\n        if (this.lead && this.lead.snapshot) {\n            this.lead.snapshot = undefined;\n        }\n    }\n}\n\nexport { NodeStack };\n","function buildProjectionTransform(delta, treeScale, latestTransform) {\n    let transform = \"\";\n    /**\n     * The translations we use to calculate are always relative to the viewport coordinate space.\n     * But when we apply scales, we also scale the coordinate space of an element and its children.\n     * For instance if we have a treeScale (the culmination of all parent scales) of 0.5 and we need\n     * to move an element 100 pixels, we actually need to move it 200 in within that scaled space.\n     */\n    const xTranslate = delta.x.translate / treeScale.x;\n    const yTranslate = delta.y.translate / treeScale.y;\n    if (xTranslate || yTranslate) {\n        transform = `translate3d(${xTranslate}px, ${yTranslate}px, 0) `;\n    }\n    /**\n     * Apply scale correction for the tree transform.\n     * This will apply scale to the screen-orientated axes.\n     */\n    if (treeScale.x !== 1 || treeScale.y !== 1) {\n        transform += `scale(${1 / treeScale.x}, ${1 / treeScale.y}) `;\n    }\n    if (latestTransform) {\n        const { rotate, rotateX, rotateY } = latestTransform;\n        if (rotate)\n            transform += `rotate(${rotate}deg) `;\n        if (rotateX)\n            transform += `rotateX(${rotateX}deg) `;\n        if (rotateY)\n            transform += `rotateY(${rotateY}deg) `;\n    }\n    /**\n     * Apply scale to match the size of the element to the size we want it.\n     * This will apply scale to the element-orientated axes.\n     */\n    const elementScaleX = delta.x.scale * treeScale.x;\n    const elementScaleY = delta.y.scale * treeScale.y;\n    if (elementScaleX !== 1 || elementScaleY !== 1) {\n        transform += `scale(${elementScaleX}, ${elementScaleY})`;\n    }\n    return transform || \"none\";\n}\n\nexport { buildProjectionTransform };\n","const compareByDepth = (a, b) => a.depth - b.depth;\n\nexport { compareByDepth };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\nimport { compareByDepth } from './compare-by-depth.mjs';\n\nclass FlatTree {\n    constructor() {\n        this.children = [];\n        this.isDirty = false;\n    }\n    add(child) {\n        addUniqueItem(this.children, child);\n        this.isDirty = true;\n    }\n    remove(child) {\n        removeItem(this.children, child);\n        this.isDirty = true;\n    }\n    forEach(callback) {\n        this.isDirty && this.children.sort(compareByDepth);\n        this.isDirty = false;\n        this.children.forEach(callback);\n    }\n}\n\nexport { FlatTree };\n","import { frame, cancelFrame } from '../frameloop/index.mjs';\n\n/**\n * Timeout defined in ms\n */\nfunction delay(callback, timeout) {\n    const start = performance.now();\n    const checkElapsed = ({ timestamp }) => {\n        const elapsed = timestamp - start;\n        if (elapsed >= timeout) {\n            cancelFrame(checkElapsed);\n            callback(elapsed - timeout);\n        }\n    };\n    frame.read(checkElapsed, true);\n    return () => cancelFrame(checkElapsed);\n}\n\nexport { delay };\n","function record(data) {\n    if (window.MotionDebug) {\n        window.MotionDebug.record(data);\n    }\n}\n\nexport { record };\n","function isSVGElement(element) {\n    return element instanceof SVGElement && element.tagName !== \"svg\";\n}\n\nexport { isSVGElement };\n","import { cancelFrame, steps, frame } from '../../frameloop/index.mjs';\nimport { SubscriptionManager } from '../../utils/subscription-manager.mjs';\nimport { mixValues } from '../animation/mix-values.mjs';\nimport { copyBoxInto } from '../geometry/copy.mjs';\nimport { translateAxis, transformBox, applyBoxDelta, applyTreeDeltas } from '../geometry/delta-apply.mjs';\nimport { calcRelativePosition, calcRelativeBox, calcBoxDelta, calcLength, isNear } from '../geometry/delta-calc.mjs';\nimport { removeBoxTransforms } from '../geometry/delta-remove.mjs';\nimport { createBox, createDelta } from '../geometry/models.mjs';\nimport { getValueTransition } from '../../animation/utils/transitions.mjs';\nimport { boxEquals, isDeltaZero, aspectRatio } from '../geometry/utils.mjs';\nimport { NodeStack } from '../shared/stack.mjs';\nimport { scaleCorrectors } from '../styles/scale-correction.mjs';\nimport { buildProjectionTransform } from '../styles/transform.mjs';\nimport { eachAxis } from '../utils/each-axis.mjs';\nimport { hasTransform, hasScale, has2DTranslate } from '../utils/has-transform.mjs';\nimport { FlatTree } from '../../render/utils/flat-tree.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { globalProjectionState } from './state.mjs';\nimport { delay } from '../../utils/delay.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { record } from '../../debug/record.mjs';\nimport { isSVGElement } from '../../render/dom/utils/is-svg-element.mjs';\nimport { animateSingleValue } from '../../animation/interfaces/single-value.mjs';\nimport { frameData } from '../../frameloop/data.mjs';\n\nconst transformAxes = [\"\", \"X\", \"Y\", \"Z\"];\n/**\n * We use 1000 as the animation target as 0-1000 maps better to pixels than 0-1\n * which has a noticeable difference in spring animations\n */\nconst animationTarget = 1000;\nlet id = 0;\n/**\n * Use a mutable data object for debug data so as to not create a new\n * object every frame.\n */\nconst projectionFrameData = {\n    type: \"projectionFrame\",\n    totalNodes: 0,\n    resolvedTargetDeltas: 0,\n    recalculatedProjection: 0,\n};\nfunction createProjectionNode({ attachResizeListener, defaultParent, measureScroll, checkIsScrollRoot, resetTransform, }) {\n    return class ProjectionNode {\n        constructor(latestValues = {}, parent = defaultParent === null || defaultParent === void 0 ? void 0 : defaultParent()) {\n            /**\n             * A unique ID generated for every projection node.\n             */\n            this.id = id++;\n            /**\n             * An id that represents a unique session instigated by startUpdate.\n             */\n            this.animationId = 0;\n            /**\n             * A Set containing all this component's children. This is used to iterate\n             * through the children.\n             *\n             * TODO: This could be faster to iterate as a flat array stored on the root node.\n             */\n            this.children = new Set();\n            /**\n             * Options for the node. We use this to configure what kind of layout animations\n             * we should perform (if any).\n             */\n            this.options = {};\n            /**\n             * We use this to detect when its safe to shut down part of a projection tree.\n             * We have to keep projecting children for scale correction and relative projection\n             * until all their parents stop performing layout animations.\n             */\n            this.isTreeAnimating = false;\n            this.isAnimationBlocked = false;\n            /**\n             * Flag to true if we think this layout has been changed. We can't always know this,\n             * currently we set it to true every time a component renders, or if it has a layoutDependency\n             * if that has changed between renders. Additionally, components can be grouped by LayoutGroup\n             * and if one node is dirtied, they all are.\n             */\n            this.isLayoutDirty = false;\n            /**\n             * Flag to true if we think the projection calculations for this node needs\n             * recalculating as a result of an updated transform or layout animation.\n             */\n            this.isProjectionDirty = false;\n            /**\n             * Flag to true if the layout *or* transform has changed. This then gets propagated\n             * throughout the projection tree, forcing any element below to recalculate on the next frame.\n             */\n            this.isSharedProjectionDirty = false;\n            /**\n             * Flag transform dirty. This gets propagated throughout the whole tree but is only\n             * respected by shared nodes.\n             */\n            this.isTransformDirty = false;\n            /**\n             * Block layout updates for instant layout transitions throughout the tree.\n             */\n            this.updateManuallyBlocked = false;\n            this.updateBlockedByResize = false;\n            /**\n             * Set to true between the start of the first `willUpdate` call and the end of the `didUpdate`\n             * call.\n             */\n            this.isUpdating = false;\n            /**\n             * If this is an SVG element we currently disable projection transforms\n             */\n            this.isSVG = false;\n            /**\n             * Flag to true (during promotion) if a node doing an instant layout transition needs to reset\n             * its projection styles.\n             */\n            this.needsReset = false;\n            /**\n             * Flags whether this node should have its transform reset prior to measuring.\n             */\n            this.shouldResetTransform = false;\n            /**\n             * An object representing the calculated contextual/accumulated/tree scale.\n             * This will be used to scale calculcated projection transforms, as these are\n             * calculated in screen-space but need to be scaled for elements to layoutly\n             * make it to their calculated destinations.\n             *\n             * TODO: Lazy-init\n             */\n            this.treeScale = { x: 1, y: 1 };\n            /**\n             *\n             */\n            this.eventHandlers = new Map();\n            this.hasTreeAnimated = false;\n            // Note: Currently only running on root node\n            this.updateScheduled = false;\n            this.checkUpdateFailed = () => {\n                if (this.isUpdating) {\n                    this.isUpdating = false;\n                    this.clearAllSnapshots();\n                }\n            };\n            /**\n             * This is a multi-step process as shared nodes might be of different depths. Nodes\n             * are sorted by depth order, so we need to resolve the entire tree before moving to\n             * the next step.\n             */\n            this.updateProjection = () => {\n                /**\n                 * Reset debug counts. Manually resetting rather than creating a new\n                 * object each frame.\n                 */\n                projectionFrameData.totalNodes =\n                    projectionFrameData.resolvedTargetDeltas =\n                        projectionFrameData.recalculatedProjection =\n                            0;\n                this.nodes.forEach(propagateDirtyNodes);\n                this.nodes.forEach(resolveTargetDelta);\n                this.nodes.forEach(calcProjection);\n                this.nodes.forEach(cleanDirtyNodes);\n                record(projectionFrameData);\n            };\n            this.hasProjected = false;\n            this.isVisible = true;\n            this.animationProgress = 0;\n            /**\n             * Shared layout\n             */\n            // TODO Only running on root node\n            this.sharedNodes = new Map();\n            this.latestValues = latestValues;\n            this.root = parent ? parent.root || parent : this;\n            this.path = parent ? [...parent.path, parent] : [];\n            this.parent = parent;\n            this.depth = parent ? parent.depth + 1 : 0;\n            for (let i = 0; i < this.path.length; i++) {\n                this.path[i].shouldResetTransform = true;\n            }\n            if (this.root === this)\n                this.nodes = new FlatTree();\n        }\n        addEventListener(name, handler) {\n            if (!this.eventHandlers.has(name)) {\n                this.eventHandlers.set(name, new SubscriptionManager());\n            }\n            return this.eventHandlers.get(name).add(handler);\n        }\n        notifyListeners(name, ...args) {\n            const subscriptionManager = this.eventHandlers.get(name);\n            subscriptionManager && subscriptionManager.notify(...args);\n        }\n        hasListeners(name) {\n            return this.eventHandlers.has(name);\n        }\n        /**\n         * Lifecycles\n         */\n        mount(instance, isLayoutDirty = this.root.hasTreeAnimated) {\n            if (this.instance)\n                return;\n            this.isSVG = isSVGElement(instance);\n            this.instance = instance;\n            const { layoutId, layout, visualElement } = this.options;\n            if (visualElement && !visualElement.current) {\n                visualElement.mount(instance);\n            }\n            this.root.nodes.add(this);\n            this.parent && this.parent.children.add(this);\n            if (isLayoutDirty && (layout || layoutId)) {\n                this.isLayoutDirty = true;\n            }\n            if (attachResizeListener) {\n                let cancelDelay;\n                const resizeUnblockUpdate = () => (this.root.updateBlockedByResize = false);\n                attachResizeListener(instance, () => {\n                    this.root.updateBlockedByResize = true;\n                    cancelDelay && cancelDelay();\n                    cancelDelay = delay(resizeUnblockUpdate, 250);\n                    if (globalProjectionState.hasAnimatedSinceResize) {\n                        globalProjectionState.hasAnimatedSinceResize = false;\n                        this.nodes.forEach(finishAnimation);\n                    }\n                });\n            }\n            if (layoutId) {\n                this.root.registerSharedNode(layoutId, this);\n            }\n            // Only register the handler if it requires layout animation\n            if (this.options.animate !== false &&\n                visualElement &&\n                (layoutId || layout)) {\n                this.addEventListener(\"didUpdate\", ({ delta, hasLayoutChanged, hasRelativeTargetChanged, layout: newLayout, }) => {\n                    if (this.isTreeAnimationBlocked()) {\n                        this.target = undefined;\n                        this.relativeTarget = undefined;\n                        return;\n                    }\n                    // TODO: Check here if an animation exists\n                    const layoutTransition = this.options.transition ||\n                        visualElement.getDefaultTransition() ||\n                        defaultLayoutTransition;\n                    const { onLayoutAnimationStart, onLayoutAnimationComplete, } = visualElement.getProps();\n                    /**\n                     * The target layout of the element might stay the same,\n                     * but its position relative to its parent has changed.\n                     */\n                    const targetChanged = !this.targetLayout ||\n                        !boxEquals(this.targetLayout, newLayout) ||\n                        hasRelativeTargetChanged;\n                    /**\n                     * If the layout hasn't seemed to have changed, it might be that the\n                     * element is visually in the same place in the document but its position\n                     * relative to its parent has indeed changed. So here we check for that.\n                     */\n                    const hasOnlyRelativeTargetChanged = !hasLayoutChanged && hasRelativeTargetChanged;\n                    if (this.options.layoutRoot ||\n                        (this.resumeFrom && this.resumeFrom.instance) ||\n                        hasOnlyRelativeTargetChanged ||\n                        (hasLayoutChanged &&\n                            (targetChanged || !this.currentAnimation))) {\n                        if (this.resumeFrom) {\n                            this.resumingFrom = this.resumeFrom;\n                            this.resumingFrom.resumingFrom = undefined;\n                        }\n                        this.setAnimationOrigin(delta, hasOnlyRelativeTargetChanged);\n                        const animationOptions = {\n                            ...getValueTransition(layoutTransition, \"layout\"),\n                            onPlay: onLayoutAnimationStart,\n                            onComplete: onLayoutAnimationComplete,\n                        };\n                        if (visualElement.shouldReduceMotion ||\n                            this.options.layoutRoot) {\n                            animationOptions.delay = 0;\n                            animationOptions.type = false;\n                        }\n                        this.startAnimation(animationOptions);\n                    }\n                    else {\n                        /**\n                         * If the layout hasn't changed and we have an animation that hasn't started yet,\n                         * finish it immediately. Otherwise it will be animating from a location\n                         * that was probably never commited to screen and look like a jumpy box.\n                         */\n                        if (!hasLayoutChanged) {\n                            finishAnimation(this);\n                        }\n                        if (this.isLead() && this.options.onExitComplete) {\n                            this.options.onExitComplete();\n                        }\n                    }\n                    this.targetLayout = newLayout;\n                });\n            }\n        }\n        unmount() {\n            this.options.layoutId && this.willUpdate();\n            this.root.nodes.remove(this);\n            const stack = this.getStack();\n            stack && stack.remove(this);\n            this.parent && this.parent.children.delete(this);\n            this.instance = undefined;\n            cancelFrame(this.updateProjection);\n        }\n        // only on the root\n        blockUpdate() {\n            this.updateManuallyBlocked = true;\n        }\n        unblockUpdate() {\n            this.updateManuallyBlocked = false;\n        }\n        isUpdateBlocked() {\n            return this.updateManuallyBlocked || this.updateBlockedByResize;\n        }\n        isTreeAnimationBlocked() {\n            return (this.isAnimationBlocked ||\n                (this.parent && this.parent.isTreeAnimationBlocked()) ||\n                false);\n        }\n        // Note: currently only running on root node\n        startUpdate() {\n            if (this.isUpdateBlocked())\n                return;\n            this.isUpdating = true;\n            this.nodes && this.nodes.forEach(resetRotation);\n            this.animationId++;\n        }\n        getTransformTemplate() {\n            const { visualElement } = this.options;\n            return visualElement && visualElement.getProps().transformTemplate;\n        }\n        willUpdate(shouldNotifyListeners = true) {\n            this.root.hasTreeAnimated = true;\n            if (this.root.isUpdateBlocked()) {\n                this.options.onExitComplete && this.options.onExitComplete();\n                return;\n            }\n            !this.root.isUpdating && this.root.startUpdate();\n            if (this.isLayoutDirty)\n                return;\n            this.isLayoutDirty = true;\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                node.shouldResetTransform = true;\n                node.updateScroll(\"snapshot\");\n                if (node.options.layoutRoot) {\n                    node.willUpdate(false);\n                }\n            }\n            const { layoutId, layout } = this.options;\n            if (layoutId === undefined && !layout)\n                return;\n            const transformTemplate = this.getTransformTemplate();\n            this.prevTransformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            this.updateSnapshot();\n            shouldNotifyListeners && this.notifyListeners(\"willUpdate\");\n        }\n        update() {\n            this.updateScheduled = false;\n            const updateWasBlocked = this.isUpdateBlocked();\n            // When doing an instant transition, we skip the layout update,\n            // but should still clean up the measurements so that the next\n            // snapshot could be taken correctly.\n            if (updateWasBlocked) {\n                this.unblockUpdate();\n                this.clearAllSnapshots();\n                this.nodes.forEach(clearMeasurements);\n                return;\n            }\n            if (!this.isUpdating)\n                return;\n            this.isUpdating = false;\n            /**\n             * Write\n             */\n            this.nodes.forEach(resetTransformStyle);\n            /**\n             * Read ==================\n             */\n            // Update layout measurements of updated children\n            this.nodes.forEach(updateLayout);\n            /**\n             * Write\n             */\n            // Notify listeners that the layout is updated\n            this.nodes.forEach(notifyLayoutUpdate);\n            this.clearAllSnapshots();\n            // Flush any scheduled updates\n            steps.update.process(frameData);\n            steps.preRender.process(frameData);\n            steps.render.process(frameData);\n        }\n        didUpdate() {\n            if (!this.updateScheduled) {\n                this.updateScheduled = true;\n                queueMicrotask(() => this.update());\n            }\n        }\n        clearAllSnapshots() {\n            this.nodes.forEach(clearSnapshot);\n            this.sharedNodes.forEach(removeLeadSnapshots);\n        }\n        scheduleUpdateProjection() {\n            frame.preRender(this.updateProjection, false, true);\n        }\n        scheduleCheckAfterUnmount() {\n            /**\n             * If the unmounting node is in a layoutGroup and did trigger a willUpdate,\n             * we manually call didUpdate to give a chance to the siblings to animate.\n             * Otherwise, cleanup all snapshots to prevents future nodes from reusing them.\n             */\n            frame.postRender(() => {\n                if (this.isLayoutDirty) {\n                    this.root.didUpdate();\n                }\n                else {\n                    this.root.checkUpdateFailed();\n                }\n            });\n        }\n        /**\n         * Update measurements\n         */\n        updateSnapshot() {\n            if (this.snapshot || !this.instance)\n                return;\n            this.snapshot = this.measure();\n        }\n        updateLayout() {\n            if (!this.instance)\n                return;\n            // TODO: Incorporate into a forwarded scroll offset\n            this.updateScroll();\n            if (!(this.options.alwaysMeasureLayout && this.isLead()) &&\n                !this.isLayoutDirty) {\n                return;\n            }\n            /**\n             * When a node is mounted, it simply resumes from the prevLead's\n             * snapshot instead of taking a new one, but the ancestors scroll\n             * might have updated while the prevLead is unmounted. We need to\n             * update the scroll again to make sure the layout we measure is\n             * up to date.\n             */\n            if (this.resumeFrom && !this.resumeFrom.instance) {\n                for (let i = 0; i < this.path.length; i++) {\n                    const node = this.path[i];\n                    node.updateScroll();\n                }\n            }\n            const prevLayout = this.layout;\n            this.layout = this.measure(false);\n            this.layoutCorrected = createBox();\n            this.isLayoutDirty = false;\n            this.projectionDelta = undefined;\n            this.notifyListeners(\"measure\", this.layout.layoutBox);\n            const { visualElement } = this.options;\n            visualElement &&\n                visualElement.notify(\"LayoutMeasure\", this.layout.layoutBox, prevLayout ? prevLayout.layoutBox : undefined);\n        }\n        updateScroll(phase = \"measure\") {\n            let needsMeasurement = Boolean(this.options.layoutScroll && this.instance);\n            if (this.scroll &&\n                this.scroll.animationId === this.root.animationId &&\n                this.scroll.phase === phase) {\n                needsMeasurement = false;\n            }\n            if (needsMeasurement) {\n                this.scroll = {\n                    animationId: this.root.animationId,\n                    phase,\n                    isRoot: checkIsScrollRoot(this.instance),\n                    offset: measureScroll(this.instance),\n                };\n            }\n        }\n        resetTransform() {\n            if (!resetTransform)\n                return;\n            const isResetRequested = this.isLayoutDirty || this.shouldResetTransform;\n            const hasProjection = this.projectionDelta && !isDeltaZero(this.projectionDelta);\n            const transformTemplate = this.getTransformTemplate();\n            const transformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            const transformTemplateHasChanged = transformTemplateValue !== this.prevTransformTemplateValue;\n            if (isResetRequested &&\n                (hasProjection ||\n                    hasTransform(this.latestValues) ||\n                    transformTemplateHasChanged)) {\n                resetTransform(this.instance, transformTemplateValue);\n                this.shouldResetTransform = false;\n                this.scheduleRender();\n            }\n        }\n        measure(removeTransform = true) {\n            const pageBox = this.measurePageBox();\n            let layoutBox = this.removeElementScroll(pageBox);\n            /**\n             * Measurements taken during the pre-render stage\n             * still have transforms applied so we remove them\n             * via calculation.\n             */\n            if (removeTransform) {\n                layoutBox = this.removeTransform(layoutBox);\n            }\n            roundBox(layoutBox);\n            return {\n                animationId: this.root.animationId,\n                measuredBox: pageBox,\n                layoutBox,\n                latestValues: {},\n                source: this.id,\n            };\n        }\n        measurePageBox() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return createBox();\n            const box = visualElement.measureViewportBox();\n            // Remove viewport scroll to give page-relative coordinates\n            const { scroll } = this.root;\n            if (scroll) {\n                translateAxis(box.x, scroll.offset.x);\n                translateAxis(box.y, scroll.offset.y);\n            }\n            return box;\n        }\n        removeElementScroll(box) {\n            const boxWithoutScroll = createBox();\n            copyBoxInto(boxWithoutScroll, box);\n            /**\n             * Performance TODO: Keep a cumulative scroll offset down the tree\n             * rather than loop back up the path.\n             */\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                const { scroll, options } = node;\n                if (node !== this.root && scroll && options.layoutScroll) {\n                    /**\n                     * If this is a new scroll root, we want to remove all previous scrolls\n                     * from the viewport box.\n                     */\n                    if (scroll.isRoot) {\n                        copyBoxInto(boxWithoutScroll, box);\n                        const { scroll: rootScroll } = this.root;\n                        /**\n                         * Undo the application of page scroll that was originally added\n                         * to the measured bounding box.\n                         */\n                        if (rootScroll) {\n                            translateAxis(boxWithoutScroll.x, -rootScroll.offset.x);\n                            translateAxis(boxWithoutScroll.y, -rootScroll.offset.y);\n                        }\n                    }\n                    translateAxis(boxWithoutScroll.x, scroll.offset.x);\n                    translateAxis(boxWithoutScroll.y, scroll.offset.y);\n                }\n            }\n            return boxWithoutScroll;\n        }\n        applyTransform(box, transformOnly = false) {\n            const withTransforms = createBox();\n            copyBoxInto(withTransforms, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!transformOnly &&\n                    node.options.layoutScroll &&\n                    node.scroll &&\n                    node !== node.root) {\n                    transformBox(withTransforms, {\n                        x: -node.scroll.offset.x,\n                        y: -node.scroll.offset.y,\n                    });\n                }\n                if (!hasTransform(node.latestValues))\n                    continue;\n                transformBox(withTransforms, node.latestValues);\n            }\n            if (hasTransform(this.latestValues)) {\n                transformBox(withTransforms, this.latestValues);\n            }\n            return withTransforms;\n        }\n        removeTransform(box) {\n            const boxWithoutTransform = createBox();\n            copyBoxInto(boxWithoutTransform, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!node.instance)\n                    continue;\n                if (!hasTransform(node.latestValues))\n                    continue;\n                hasScale(node.latestValues) && node.updateSnapshot();\n                const sourceBox = createBox();\n                const nodeBox = node.measurePageBox();\n                copyBoxInto(sourceBox, nodeBox);\n                removeBoxTransforms(boxWithoutTransform, node.latestValues, node.snapshot ? node.snapshot.layoutBox : undefined, sourceBox);\n            }\n            if (hasTransform(this.latestValues)) {\n                removeBoxTransforms(boxWithoutTransform, this.latestValues);\n            }\n            return boxWithoutTransform;\n        }\n        setTargetDelta(delta) {\n            this.targetDelta = delta;\n            this.root.scheduleUpdateProjection();\n            this.isProjectionDirty = true;\n        }\n        setOptions(options) {\n            this.options = {\n                ...this.options,\n                ...options,\n                crossfade: options.crossfade !== undefined ? options.crossfade : true,\n            };\n        }\n        clearMeasurements() {\n            this.scroll = undefined;\n            this.layout = undefined;\n            this.snapshot = undefined;\n            this.prevTransformTemplateValue = undefined;\n            this.targetDelta = undefined;\n            this.target = undefined;\n            this.isLayoutDirty = false;\n        }\n        forceRelativeParentToResolveTarget() {\n            if (!this.relativeParent)\n                return;\n            /**\n             * If the parent target isn't up-to-date, force it to update.\n             * This is an unfortunate de-optimisation as it means any updating relative\n             * projection will cause all the relative parents to recalculate back\n             * up the tree.\n             */\n            if (this.relativeParent.resolvedRelativeTargetAt !==\n                frameData.timestamp) {\n                this.relativeParent.resolveTargetDelta(true);\n            }\n        }\n        resolveTargetDelta(forceRecalculation = false) {\n            var _a;\n            /**\n             * Once the dirty status of nodes has been spread through the tree, we also\n             * need to check if we have a shared node of a different depth that has itself\n             * been dirtied.\n             */\n            const lead = this.getLead();\n            this.isProjectionDirty || (this.isProjectionDirty = lead.isProjectionDirty);\n            this.isTransformDirty || (this.isTransformDirty = lead.isTransformDirty);\n            this.isSharedProjectionDirty || (this.isSharedProjectionDirty = lead.isSharedProjectionDirty);\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            /**\n             * We don't use transform for this step of processing so we don't\n             * need to check whether any nodes have changed transform.\n             */\n            const canSkip = !(forceRecalculation ||\n                (isShared && this.isSharedProjectionDirty) ||\n                this.isProjectionDirty ||\n                ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty) ||\n                this.attemptToResolveRelativeTarget);\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If we have no layout, we can't perform projection, so early return\n             */\n            if (!this.layout || !(layout || layoutId))\n                return;\n            this.resolvedRelativeTargetAt = frameData.timestamp;\n            /**\n             * If we don't have a targetDelta but do have a layout, we can attempt to resolve\n             * a relativeParent. This will allow a component to perform scale correction\n             * even if no animation has started.\n             */\n            // TODO If this is unsuccessful this currently happens every frame\n            if (!this.targetDelta && !this.relativeTarget) {\n                // TODO: This is a semi-repetition of further down this function, make DRY\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    relativeParent.layout &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.layout.layoutBox, relativeParent.layout.layoutBox);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * If we have no relative target or no target delta our target isn't valid\n             * for this frame.\n             */\n            if (!this.relativeTarget && !this.targetDelta)\n                return;\n            /**\n             * Lazy-init target data structure\n             */\n            if (!this.target) {\n                this.target = createBox();\n                this.targetWithTransforms = createBox();\n            }\n            /**\n             * If we've got a relative box for this component, resolve it into a target relative to the parent.\n             */\n            if (this.relativeTarget &&\n                this.relativeTargetOrigin &&\n                this.relativeParent &&\n                this.relativeParent.target) {\n                this.forceRelativeParentToResolveTarget();\n                calcRelativeBox(this.target, this.relativeTarget, this.relativeParent.target);\n                /**\n                 * If we've only got a targetDelta, resolve it into a target\n                 */\n            }\n            else if (this.targetDelta) {\n                if (Boolean(this.resumingFrom)) {\n                    // TODO: This is creating a new object every frame\n                    this.target = this.applyTransform(this.layout.layoutBox);\n                }\n                else {\n                    copyBoxInto(this.target, this.layout.layoutBox);\n                }\n                applyBoxDelta(this.target, this.targetDelta);\n            }\n            else {\n                /**\n                 * If no target, use own layout as target\n                 */\n                copyBoxInto(this.target, this.layout.layoutBox);\n            }\n            /**\n             * If we've been told to attempt to resolve a relative target, do so.\n             */\n            if (this.attemptToResolveRelativeTarget) {\n                this.attemptToResolveRelativeTarget = false;\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    Boolean(relativeParent.resumingFrom) ===\n                        Boolean(this.resumingFrom) &&\n                    !relativeParent.options.layoutScroll &&\n                    relativeParent.target &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.target, relativeParent.target);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * Increase debug counter for resolved target deltas\n             */\n            projectionFrameData.resolvedTargetDeltas++;\n        }\n        getClosestProjectingParent() {\n            if (!this.parent ||\n                hasScale(this.parent.latestValues) ||\n                has2DTranslate(this.parent.latestValues)) {\n                return undefined;\n            }\n            if (this.parent.isProjecting()) {\n                return this.parent;\n            }\n            else {\n                return this.parent.getClosestProjectingParent();\n            }\n        }\n        isProjecting() {\n            return Boolean((this.relativeTarget ||\n                this.targetDelta ||\n                this.options.layoutRoot) &&\n                this.layout);\n        }\n        calcProjection() {\n            var _a;\n            const lead = this.getLead();\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            let canSkip = true;\n            /**\n             * If this is a normal layout animation and neither this node nor its nearest projecting\n             * is dirty then we can't skip.\n             */\n            if (this.isProjectionDirty || ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If this is a shared layout animation and this node's shared projection is dirty then\n             * we can't skip.\n             */\n            if (isShared &&\n                (this.isSharedProjectionDirty || this.isTransformDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If we have resolved the target this frame we must recalculate the\n             * projection to ensure it visually represents the internal calculations.\n             */\n            if (this.resolvedRelativeTargetAt === frameData.timestamp) {\n                canSkip = false;\n            }\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If this section of the tree isn't animating we can\n             * delete our target sources for the following frame.\n             */\n            this.isTreeAnimating = Boolean((this.parent && this.parent.isTreeAnimating) ||\n                this.currentAnimation ||\n                this.pendingAnimation);\n            if (!this.isTreeAnimating) {\n                this.targetDelta = this.relativeTarget = undefined;\n            }\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * Reset the corrected box with the latest values from box, as we're then going\n             * to perform mutative operations on it.\n             */\n            copyBoxInto(this.layoutCorrected, this.layout.layoutBox);\n            /**\n             * Apply all the parent deltas to this box to produce the corrected box. This\n             * is the layout box, as it will appear on screen as a result of the transforms of its parents.\n             */\n            applyTreeDeltas(this.layoutCorrected, this.treeScale, this.path, isShared);\n            const { target } = lead;\n            if (!target) {\n                /**\n                 * If we don't have a target to project into, but we were previously\n                 * projecting, we want to remove the stored transform and schedule\n                 * a render to ensure the elements reflect the removed transform.\n                 */\n                if (this.projectionTransform) {\n                    this.projectionTransform = \"none\";\n                    this.scheduleRender();\n                }\n                return;\n            }\n            if (!this.projectionDelta) {\n                this.projectionDelta = createDelta();\n                this.projectionDeltaWithTransform = createDelta();\n            }\n            const prevTreeScaleX = this.treeScale.x;\n            const prevTreeScaleY = this.treeScale.y;\n            const prevProjectionTransform = this.projectionTransform;\n            /**\n             * Update the delta between the corrected box and the target box before user-set transforms were applied.\n             * This will allow us to calculate the corrected borderRadius and boxShadow to compensate\n             * for our layout reprojection, but still allow them to be scaled correctly by the user.\n             * It might be that to simplify this we may want to accept that user-set scale is also corrected\n             * and we wouldn't have to keep and calc both deltas, OR we could support a user setting\n             * to allow people to choose whether these styles are corrected based on just the\n             * layout reprojection or the final bounding box.\n             */\n            calcBoxDelta(this.projectionDelta, this.layoutCorrected, target, this.latestValues);\n            this.projectionTransform = buildProjectionTransform(this.projectionDelta, this.treeScale);\n            if (this.projectionTransform !== prevProjectionTransform ||\n                this.treeScale.x !== prevTreeScaleX ||\n                this.treeScale.y !== prevTreeScaleY) {\n                this.hasProjected = true;\n                this.scheduleRender();\n                this.notifyListeners(\"projectionUpdate\", target);\n            }\n            /**\n             * Increase debug counter for recalculated projections\n             */\n            projectionFrameData.recalculatedProjection++;\n        }\n        hide() {\n            this.isVisible = false;\n            // TODO: Schedule render\n        }\n        show() {\n            this.isVisible = true;\n            // TODO: Schedule render\n        }\n        scheduleRender(notifyAll = true) {\n            this.options.scheduleRender && this.options.scheduleRender();\n            if (notifyAll) {\n                const stack = this.getStack();\n                stack && stack.scheduleRender();\n            }\n            if (this.resumingFrom && !this.resumingFrom.instance) {\n                this.resumingFrom = undefined;\n            }\n        }\n        setAnimationOrigin(delta, hasOnlyRelativeTargetChanged = false) {\n            const snapshot = this.snapshot;\n            const snapshotLatestValues = snapshot\n                ? snapshot.latestValues\n                : {};\n            const mixedValues = { ...this.latestValues };\n            const targetDelta = createDelta();\n            if (!this.relativeParent ||\n                !this.relativeParent.options.layoutRoot) {\n                this.relativeTarget = this.relativeTargetOrigin = undefined;\n            }\n            this.attemptToResolveRelativeTarget = !hasOnlyRelativeTargetChanged;\n            const relativeLayout = createBox();\n            const snapshotSource = snapshot ? snapshot.source : undefined;\n            const layoutSource = this.layout ? this.layout.source : undefined;\n            const isSharedLayoutAnimation = snapshotSource !== layoutSource;\n            const stack = this.getStack();\n            const isOnlyMember = !stack || stack.members.length <= 1;\n            const shouldCrossfadeOpacity = Boolean(isSharedLayoutAnimation &&\n                !isOnlyMember &&\n                this.options.crossfade === true &&\n                !this.path.some(hasOpacityCrossfade));\n            this.animationProgress = 0;\n            let prevRelativeTarget;\n            this.mixTargetDelta = (latest) => {\n                const progress = latest / 1000;\n                mixAxisDelta(targetDelta.x, delta.x, progress);\n                mixAxisDelta(targetDelta.y, delta.y, progress);\n                this.setTargetDelta(targetDelta);\n                if (this.relativeTarget &&\n                    this.relativeTargetOrigin &&\n                    this.layout &&\n                    this.relativeParent &&\n                    this.relativeParent.layout) {\n                    calcRelativePosition(relativeLayout, this.layout.layoutBox, this.relativeParent.layout.layoutBox);\n                    mixBox(this.relativeTarget, this.relativeTargetOrigin, relativeLayout, progress);\n                    /**\n                     * If this is an unchanged relative target we can consider the\n                     * projection not dirty.\n                     */\n                    if (prevRelativeTarget &&\n                        boxEquals(this.relativeTarget, prevRelativeTarget)) {\n                        this.isProjectionDirty = false;\n                    }\n                    if (!prevRelativeTarget)\n                        prevRelativeTarget = createBox();\n                    copyBoxInto(prevRelativeTarget, this.relativeTarget);\n                }\n                if (isSharedLayoutAnimation) {\n                    this.animationValues = mixedValues;\n                    mixValues(mixedValues, snapshotLatestValues, this.latestValues, progress, shouldCrossfadeOpacity, isOnlyMember);\n                }\n                this.root.scheduleUpdateProjection();\n                this.scheduleRender();\n                this.animationProgress = progress;\n            };\n            this.mixTargetDelta(this.options.layoutRoot ? 1000 : 0);\n        }\n        startAnimation(options) {\n            this.notifyListeners(\"animationStart\");\n            this.currentAnimation && this.currentAnimation.stop();\n            if (this.resumingFrom && this.resumingFrom.currentAnimation) {\n                this.resumingFrom.currentAnimation.stop();\n            }\n            if (this.pendingAnimation) {\n                cancelFrame(this.pendingAnimation);\n                this.pendingAnimation = undefined;\n            }\n            /**\n             * Start the animation in the next frame to have a frame with progress 0,\n             * where the target is the same as when the animation started, so we can\n             * calculate the relative positions correctly for instant transitions.\n             */\n            this.pendingAnimation = frame.update(() => {\n                globalProjectionState.hasAnimatedSinceResize = true;\n                this.currentAnimation = animateSingleValue(0, animationTarget, {\n                    ...options,\n                    onUpdate: (latest) => {\n                        this.mixTargetDelta(latest);\n                        options.onUpdate && options.onUpdate(latest);\n                    },\n                    onComplete: () => {\n                        options.onComplete && options.onComplete();\n                        this.completeAnimation();\n                    },\n                });\n                if (this.resumingFrom) {\n                    this.resumingFrom.currentAnimation = this.currentAnimation;\n                }\n                this.pendingAnimation = undefined;\n            });\n        }\n        completeAnimation() {\n            if (this.resumingFrom) {\n                this.resumingFrom.currentAnimation = undefined;\n                this.resumingFrom.preserveOpacity = undefined;\n            }\n            const stack = this.getStack();\n            stack && stack.exitAnimationComplete();\n            this.resumingFrom =\n                this.currentAnimation =\n                    this.animationValues =\n                        undefined;\n            this.notifyListeners(\"animationComplete\");\n        }\n        finishAnimation() {\n            if (this.currentAnimation) {\n                this.mixTargetDelta && this.mixTargetDelta(animationTarget);\n                this.currentAnimation.stop();\n            }\n            this.completeAnimation();\n        }\n        applyTransformsToTarget() {\n            const lead = this.getLead();\n            let { targetWithTransforms, target, layout, latestValues } = lead;\n            if (!targetWithTransforms || !target || !layout)\n                return;\n            /**\n             * If we're only animating position, and this element isn't the lead element,\n             * then instead of projecting into the lead box we instead want to calculate\n             * a new target that aligns the two boxes but maintains the layout shape.\n             */\n            if (this !== lead &&\n                this.layout &&\n                layout &&\n                shouldAnimatePositionOnly(this.options.animationType, this.layout.layoutBox, layout.layoutBox)) {\n                target = this.target || createBox();\n                const xLength = calcLength(this.layout.layoutBox.x);\n                target.x.min = lead.target.x.min;\n                target.x.max = target.x.min + xLength;\n                const yLength = calcLength(this.layout.layoutBox.y);\n                target.y.min = lead.target.y.min;\n                target.y.max = target.y.min + yLength;\n            }\n            copyBoxInto(targetWithTransforms, target);\n            /**\n             * Apply the latest user-set transforms to the targetBox to produce the targetBoxFinal.\n             * This is the final box that we will then project into by calculating a transform delta and\n             * applying it to the corrected box.\n             */\n            transformBox(targetWithTransforms, latestValues);\n            /**\n             * Update the delta between the corrected box and the final target box, after\n             * user-set transforms are applied to it. This will be used by the renderer to\n             * create a transform style that will reproject the element from its layout layout\n             * into the desired bounding box.\n             */\n            calcBoxDelta(this.projectionDeltaWithTransform, this.layoutCorrected, targetWithTransforms, latestValues);\n        }\n        registerSharedNode(layoutId, node) {\n            if (!this.sharedNodes.has(layoutId)) {\n                this.sharedNodes.set(layoutId, new NodeStack());\n            }\n            const stack = this.sharedNodes.get(layoutId);\n            stack.add(node);\n            const config = node.options.initialPromotionConfig;\n            node.promote({\n                transition: config ? config.transition : undefined,\n                preserveFollowOpacity: config && config.shouldPreserveFollowOpacity\n                    ? config.shouldPreserveFollowOpacity(node)\n                    : undefined,\n            });\n        }\n        isLead() {\n            const stack = this.getStack();\n            return stack ? stack.lead === this : true;\n        }\n        getLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? ((_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.lead) || this : this;\n        }\n        getPrevLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.prevLead : undefined;\n        }\n        getStack() {\n            const { layoutId } = this.options;\n            if (layoutId)\n                return this.root.sharedNodes.get(layoutId);\n        }\n        promote({ needsReset, transition, preserveFollowOpacity, } = {}) {\n            const stack = this.getStack();\n            if (stack)\n                stack.promote(this, preserveFollowOpacity);\n            if (needsReset) {\n                this.projectionDelta = undefined;\n                this.needsReset = true;\n            }\n            if (transition)\n                this.setOptions({ transition });\n        }\n        relegate() {\n            const stack = this.getStack();\n            if (stack) {\n                return stack.relegate(this);\n            }\n            else {\n                return false;\n            }\n        }\n        resetRotation() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return;\n            // If there's no detected rotation values, we can early return without a forced render.\n            let hasRotate = false;\n            /**\n             * An unrolled check for rotation values. Most elements don't have any rotation and\n             * skipping the nested loop and new object creation is 50% faster.\n             */\n            const { latestValues } = visualElement;\n            if (latestValues.rotate ||\n                latestValues.rotateX ||\n                latestValues.rotateY ||\n                latestValues.rotateZ) {\n                hasRotate = true;\n            }\n            // If there's no rotation values, we don't need to do any more.\n            if (!hasRotate)\n                return;\n            const resetValues = {};\n            // Check the rotate value of all axes and reset to 0\n            for (let i = 0; i < transformAxes.length; i++) {\n                const key = \"rotate\" + transformAxes[i];\n                // Record the rotation and then temporarily set it to 0\n                if (latestValues[key]) {\n                    resetValues[key] = latestValues[key];\n                    visualElement.setStaticValue(key, 0);\n                }\n            }\n            // Force a render of this element to apply the transform with all rotations\n            // set to 0.\n            visualElement.render();\n            // Put back all the values we reset\n            for (const key in resetValues) {\n                visualElement.setStaticValue(key, resetValues[key]);\n            }\n            // Schedule a render for the next frame. This ensures we won't visually\n            // see the element with the reset rotate value applied.\n            visualElement.scheduleRender();\n        }\n        getProjectionStyles(styleProp = {}) {\n            var _a, _b;\n            // TODO: Return lifecycle-persistent object\n            const styles = {};\n            if (!this.instance || this.isSVG)\n                return styles;\n            if (!this.isVisible) {\n                return { visibility: \"hidden\" };\n            }\n            else {\n                styles.visibility = \"\";\n            }\n            const transformTemplate = this.getTransformTemplate();\n            if (this.needsReset) {\n                this.needsReset = false;\n                styles.opacity = \"\";\n                styles.pointerEvents =\n                    resolveMotionValue(styleProp.pointerEvents) || \"\";\n                styles.transform = transformTemplate\n                    ? transformTemplate(this.latestValues, \"\")\n                    : \"none\";\n                return styles;\n            }\n            const lead = this.getLead();\n            if (!this.projectionDelta || !this.layout || !lead.target) {\n                const emptyStyles = {};\n                if (this.options.layoutId) {\n                    emptyStyles.opacity =\n                        this.latestValues.opacity !== undefined\n                            ? this.latestValues.opacity\n                            : 1;\n                    emptyStyles.pointerEvents =\n                        resolveMotionValue(styleProp.pointerEvents) || \"\";\n                }\n                if (this.hasProjected && !hasTransform(this.latestValues)) {\n                    emptyStyles.transform = transformTemplate\n                        ? transformTemplate({}, \"\")\n                        : \"none\";\n                    this.hasProjected = false;\n                }\n                return emptyStyles;\n            }\n            const valuesToRender = lead.animationValues || lead.latestValues;\n            this.applyTransformsToTarget();\n            styles.transform = buildProjectionTransform(this.projectionDeltaWithTransform, this.treeScale, valuesToRender);\n            if (transformTemplate) {\n                styles.transform = transformTemplate(valuesToRender, styles.transform);\n            }\n            const { x, y } = this.projectionDelta;\n            styles.transformOrigin = `${x.origin * 100}% ${y.origin * 100}% 0`;\n            if (lead.animationValues) {\n                /**\n                 * If the lead component is animating, assign this either the entering/leaving\n                 * opacity\n                 */\n                styles.opacity =\n                    lead === this\n                        ? (_b = (_a = valuesToRender.opacity) !== null && _a !== void 0 ? _a : this.latestValues.opacity) !== null && _b !== void 0 ? _b : 1\n                        : this.preserveOpacity\n                            ? this.latestValues.opacity\n                            : valuesToRender.opacityExit;\n            }\n            else {\n                /**\n                 * Or we're not animating at all, set the lead component to its layout\n                 * opacity and other components to hidden.\n                 */\n                styles.opacity =\n                    lead === this\n                        ? valuesToRender.opacity !== undefined\n                            ? valuesToRender.opacity\n                            : \"\"\n                        : valuesToRender.opacityExit !== undefined\n                            ? valuesToRender.opacityExit\n                            : 0;\n            }\n            /**\n             * Apply scale correction\n             */\n            for (const key in scaleCorrectors) {\n                if (valuesToRender[key] === undefined)\n                    continue;\n                const { correct, applyTo } = scaleCorrectors[key];\n                /**\n                 * Only apply scale correction to the value if we have an\n                 * active projection transform. Otherwise these values become\n                 * vulnerable to distortion if the element changes size without\n                 * a corresponding layout animation.\n                 */\n                const corrected = styles.transform === \"none\"\n                    ? valuesToRender[key]\n                    : correct(valuesToRender[key], lead);\n                if (applyTo) {\n                    const num = applyTo.length;\n                    for (let i = 0; i < num; i++) {\n                        styles[applyTo[i]] = corrected;\n                    }\n                }\n                else {\n                    styles[key] = corrected;\n                }\n            }\n            /**\n             * Disable pointer events on follow components. This is to ensure\n             * that if a follow component covers a lead component it doesn't block\n             * pointer events on the lead.\n             */\n            if (this.options.layoutId) {\n                styles.pointerEvents =\n                    lead === this\n                        ? resolveMotionValue(styleProp.pointerEvents) || \"\"\n                        : \"none\";\n            }\n            return styles;\n        }\n        clearSnapshot() {\n            this.resumeFrom = this.snapshot = undefined;\n        }\n        // Only run on root\n        resetTree() {\n            this.root.nodes.forEach((node) => { var _a; return (_a = node.currentAnimation) === null || _a === void 0 ? void 0 : _a.stop(); });\n            this.root.nodes.forEach(clearMeasurements);\n            this.root.sharedNodes.clear();\n        }\n    };\n}\nfunction updateLayout(node) {\n    node.updateLayout();\n}\nfunction notifyLayoutUpdate(node) {\n    var _a;\n    const snapshot = ((_a = node.resumeFrom) === null || _a === void 0 ? void 0 : _a.snapshot) || node.snapshot;\n    if (node.isLead() &&\n        node.layout &&\n        snapshot &&\n        node.hasListeners(\"didUpdate\")) {\n        const { layoutBox: layout, measuredBox: measuredLayout } = node.layout;\n        const { animationType } = node.options;\n        const isShared = snapshot.source !== node.layout.source;\n        // TODO Maybe we want to also resize the layout snapshot so we don't trigger\n        // animations for instance if layout=\"size\" and an element has only changed position\n        if (animationType === \"size\") {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(axisSnapshot);\n                axisSnapshot.min = layout[axis].min;\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        else if (shouldAnimatePositionOnly(animationType, snapshot.layoutBox, layout)) {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(layout[axis]);\n                axisSnapshot.max = axisSnapshot.min + length;\n                /**\n                 * Ensure relative target gets resized and rerendererd\n                 */\n                if (node.relativeTarget && !node.currentAnimation) {\n                    node.isProjectionDirty = true;\n                    node.relativeTarget[axis].max =\n                        node.relativeTarget[axis].min + length;\n                }\n            });\n        }\n        const layoutDelta = createDelta();\n        calcBoxDelta(layoutDelta, layout, snapshot.layoutBox);\n        const visualDelta = createDelta();\n        if (isShared) {\n            calcBoxDelta(visualDelta, node.applyTransform(measuredLayout, true), snapshot.measuredBox);\n        }\n        else {\n            calcBoxDelta(visualDelta, layout, snapshot.layoutBox);\n        }\n        const hasLayoutChanged = !isDeltaZero(layoutDelta);\n        let hasRelativeTargetChanged = false;\n        if (!node.resumeFrom) {\n            const relativeParent = node.getClosestProjectingParent();\n            /**\n             * If the relativeParent is itself resuming from a different element then\n             * the relative snapshot is not relavent\n             */\n            if (relativeParent && !relativeParent.resumeFrom) {\n                const { snapshot: parentSnapshot, layout: parentLayout } = relativeParent;\n                if (parentSnapshot && parentLayout) {\n                    const relativeSnapshot = createBox();\n                    calcRelativePosition(relativeSnapshot, snapshot.layoutBox, parentSnapshot.layoutBox);\n                    const relativeLayout = createBox();\n                    calcRelativePosition(relativeLayout, layout, parentLayout.layoutBox);\n                    if (!boxEquals(relativeSnapshot, relativeLayout)) {\n                        hasRelativeTargetChanged = true;\n                    }\n                    if (relativeParent.options.layoutRoot) {\n                        node.relativeTarget = relativeLayout;\n                        node.relativeTargetOrigin = relativeSnapshot;\n                        node.relativeParent = relativeParent;\n                    }\n                }\n            }\n        }\n        node.notifyListeners(\"didUpdate\", {\n            layout,\n            snapshot,\n            delta: visualDelta,\n            layoutDelta,\n            hasLayoutChanged,\n            hasRelativeTargetChanged,\n        });\n    }\n    else if (node.isLead()) {\n        const { onExitComplete } = node.options;\n        onExitComplete && onExitComplete();\n    }\n    /**\n     * Clearing transition\n     * TODO: Investigate why this transition is being passed in as {type: false } from Framer\n     * and why we need it at all\n     */\n    node.options.transition = undefined;\n}\nfunction propagateDirtyNodes(node) {\n    /**\n     * Increase debug counter for nodes encountered this frame\n     */\n    projectionFrameData.totalNodes++;\n    if (!node.parent)\n        return;\n    /**\n     * If this node isn't projecting, propagate isProjectionDirty. It will have\n     * no performance impact but it will allow the next child that *is* projecting\n     * but *isn't* dirty to just check its parent to see if *any* ancestor needs\n     * correcting.\n     */\n    if (!node.isProjecting()) {\n        node.isProjectionDirty = node.parent.isProjectionDirty;\n    }\n    /**\n     * Propagate isSharedProjectionDirty and isTransformDirty\n     * throughout the whole tree. A future revision can take another look at\n     * this but for safety we still recalcualte shared nodes.\n     */\n    node.isSharedProjectionDirty || (node.isSharedProjectionDirty = Boolean(node.isProjectionDirty ||\n        node.parent.isProjectionDirty ||\n        node.parent.isSharedProjectionDirty));\n    node.isTransformDirty || (node.isTransformDirty = node.parent.isTransformDirty);\n}\nfunction cleanDirtyNodes(node) {\n    node.isProjectionDirty =\n        node.isSharedProjectionDirty =\n            node.isTransformDirty =\n                false;\n}\nfunction clearSnapshot(node) {\n    node.clearSnapshot();\n}\nfunction clearMeasurements(node) {\n    node.clearMeasurements();\n}\nfunction resetTransformStyle(node) {\n    const { visualElement } = node.options;\n    if (visualElement && visualElement.getProps().onBeforeLayoutMeasure) {\n        visualElement.notify(\"BeforeLayoutMeasure\");\n    }\n    node.resetTransform();\n}\nfunction finishAnimation(node) {\n    node.finishAnimation();\n    node.targetDelta = node.relativeTarget = node.target = undefined;\n    node.isProjectionDirty = true;\n}\nfunction resolveTargetDelta(node) {\n    node.resolveTargetDelta();\n}\nfunction calcProjection(node) {\n    node.calcProjection();\n}\nfunction resetRotation(node) {\n    node.resetRotation();\n}\nfunction removeLeadSnapshots(stack) {\n    stack.removeLeadSnapshot();\n}\nfunction mixAxisDelta(output, delta, p) {\n    output.translate = mix(delta.translate, 0, p);\n    output.scale = mix(delta.scale, 1, p);\n    output.origin = delta.origin;\n    output.originPoint = delta.originPoint;\n}\nfunction mixAxis(output, from, to, p) {\n    output.min = mix(from.min, to.min, p);\n    output.max = mix(from.max, to.max, p);\n}\nfunction mixBox(output, from, to, p) {\n    mixAxis(output.x, from.x, to.x, p);\n    mixAxis(output.y, from.y, to.y, p);\n}\nfunction hasOpacityCrossfade(node) {\n    return (node.animationValues && node.animationValues.opacityExit !== undefined);\n}\nconst defaultLayoutTransition = {\n    duration: 0.45,\n    ease: [0.4, 0, 0.1, 1],\n};\nfunction roundAxis(axis) {\n    axis.min = Math.round(axis.min);\n    axis.max = Math.round(axis.max);\n}\nfunction roundBox(box) {\n    roundAxis(box.x);\n    roundAxis(box.y);\n}\nfunction shouldAnimatePositionOnly(animationType, snapshot, layout) {\n    return (animationType === \"position\" ||\n        (animationType === \"preserve-aspect\" &&\n            !isNear(aspectRatio(snapshot), aspectRatio(layout), 0.2)));\n}\n\nexport { cleanDirtyNodes, createProjectionNode, mixAxis, mixAxisDelta, mixBox, propagateDirtyNodes };\n","import { animateMotionValue } from './motion-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction animateSingleValue(value, keyframes, options) {\n    const motionValue$1 = isMotionValue(value) ? value : motionValue(value);\n    motionValue$1.start(animateMotionValue(\"\", motionValue$1, keyframes, options));\n    return motionValue$1.animation;\n}\n\nexport { animateSingleValue };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\n\nconst DocumentProjectionNode = createProjectionNode({\n    attachResizeListener: (ref, notify) => addDomEvent(ref, \"resize\", notify),\n    measureScroll: () => ({\n        x: document.documentElement.scrollLeft || document.body.scrollLeft,\n        y: document.documentElement.scrollTop || document.body.scrollTop,\n    }),\n    checkIsScrollRoot: () => true,\n});\n\nexport { DocumentProjectionNode };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { DocumentProjectionNode } from './DocumentProjectionNode.mjs';\n\nconst rootProjectionNode = {\n    current: undefined,\n};\nconst HTMLProjectionNode = createProjectionNode({\n    measureScroll: (instance) => ({\n        x: instance.scrollLeft,\n        y: instance.scrollTop,\n    }),\n    defaultParent: () => {\n        if (!rootProjectionNode.current) {\n            const documentNode = new DocumentProjectionNode({});\n            documentNode.mount(window);\n            documentNode.setOptions({ layoutScroll: true });\n            rootProjectionNode.current = documentNode;\n        }\n        return rootProjectionNode.current;\n    },\n    resetTransform: (instance, value) => {\n        instance.style.transform = value !== undefined ? value : \"none\";\n    },\n    checkIsScrollRoot: (instance) => Boolean(window.getComputedStyle(instance).position === \"fixed\"),\n});\n\nexport { HTMLProjectionNode, rootProjectionNode };\n","import { DragGesture } from '../../gestures/drag/index.mjs';\nimport { PanGesture } from '../../gestures/pan/index.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\nimport { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\n\nconst drag = {\n    pan: {\n        Feature: PanGesture,\n    },\n    drag: {\n        Feature: DragGesture,\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { drag };\n","import { invariant } from '../../../utils/errors.mjs';\nimport { isCSSVariableToken } from './is-css-variable.mjs';\n\n/**\n * Parse Framer's special CSS variable format into a CSS token and a fallback.\n *\n * ```\n * `var(--foo, #fff)` => [`--foo`, '#fff']\n * ```\n *\n * @param current\n */\nconst splitCSSVariableRegex = /var\\((--[a-zA-Z0-9-_]+),? ?([a-zA-Z0-9 ()%#.,-]+)?\\)/;\nfunction parseCSSVariable(current) {\n    const match = splitCSSVariableRegex.exec(current);\n    if (!match)\n        return [,];\n    const [, token, fallback] = match;\n    return [token, fallback];\n}\nconst maxDepth = 4;\nfunction getVariableValue(current, element, depth = 1) {\n    invariant(depth <= maxDepth, `Max CSS variable fallback depth detected in property \"${current}\". This may indicate a circular fallback dependency.`);\n    const [token, fallback] = parseCSSVariable(current);\n    // No CSS variable detected\n    if (!token)\n        return;\n    // Attempt to read this CSS variable off the element\n    const resolved = window.getComputedStyle(element).getPropertyValue(token);\n    if (resolved) {\n        return resolved.trim();\n    }\n    else if (isCSSVariableToken(fallback)) {\n        // The fallback might itself be a CSS variable, in which case we attempt to resolve it too.\n        return getVariableValue(fallback, element, depth + 1);\n    }\n    else {\n        return fallback;\n    }\n}\n/**\n * Resolve CSS variables from\n *\n * @internal\n */\nfunction resolveCSSVariables(visualElement, { ...target }, transitionEnd) {\n    const element = visualElement.current;\n    if (!(element instanceof Element))\n        return { target, transitionEnd };\n    // If `transitionEnd` isn't `undefined`, clone it. We could clone `target` and `transitionEnd`\n    // only if they change but I think this reads clearer and this isn't a performance-critical path.\n    if (transitionEnd) {\n        transitionEnd = { ...transitionEnd };\n    }\n    // Go through existing `MotionValue`s and ensure any existing CSS variables are resolved\n    visualElement.values.forEach((value) => {\n        const current = value.get();\n        if (!isCSSVariableToken(current))\n            return;\n        const resolved = getVariableValue(current, element);\n        if (resolved)\n            value.set(resolved);\n    });\n    // Cycle through every target property and resolve CSS variables. Currently\n    // we only read single-var properties like `var(--foo)`, not `calc(var(--foo) + 20px)`\n    for (const key in target) {\n        const current = target[key];\n        if (!isCSSVariableToken(current))\n            continue;\n        const resolved = getVariableValue(current, element);\n        if (!resolved)\n            continue;\n        // Clone target if it hasn't already been\n        target[key] = resolved;\n        if (!transitionEnd)\n            transitionEnd = {};\n        // If the user hasn't already set this key on `transitionEnd`, set it to the unresolved\n        // CSS variable. This will ensure that after the animation the component will reflect\n        // changes in the value of the CSS variable.\n        if (transitionEnd[key] === undefined) {\n            transitionEnd[key] = current;\n        }\n    }\n    return { target, transitionEnd };\n}\n\nexport { parseCSSVariable, resolveCSSVariables };\n","import { isKeyframesTarget } from '../../../animation/utils/is-keyframes-target.mjs';\nimport { invariant } from '../../../utils/errors.mjs';\nimport { transformPropOrder } from '../../html/utils/transform.mjs';\nimport { findDimensionValueType } from '../value-types/dimensions.mjs';\nimport { isBrowser } from '../../../utils/is-browser.mjs';\nimport { number } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\n\nconst positionalKeys = new Set([\n    \"width\",\n    \"height\",\n    \"top\",\n    \"left\",\n    \"right\",\n    \"bottom\",\n    \"x\",\n    \"y\",\n]);\nconst isPositionalKey = (key) => positionalKeys.has(key);\nconst hasPositionalKey = (target) => {\n    return Object.keys(target).some(isPositionalKey);\n};\nconst isNumOrPxType = (v) => v === number || v === px;\nconst getPosFromMatrix = (matrix, pos) => parseFloat(matrix.split(\", \")[pos]);\nconst getTranslateFromMatrix = (pos2, pos3) => (_bbox, { transform }) => {\n    if (transform === \"none\" || !transform)\n        return 0;\n    const matrix3d = transform.match(/^matrix3d\\((.+)\\)$/);\n    if (matrix3d) {\n        return getPosFromMatrix(matrix3d[1], pos3);\n    }\n    else {\n        const matrix = transform.match(/^matrix\\((.+)\\)$/);\n        if (matrix) {\n            return getPosFromMatrix(matrix[1], pos2);\n        }\n        else {\n            return 0;\n        }\n    }\n};\nconst transformKeys = new Set([\"x\", \"y\", \"z\"]);\nconst nonTranslationalTransformKeys = transformPropOrder.filter((key) => !transformKeys.has(key));\nfunction removeNonTranslationalTransform(visualElement) {\n    const removedTransforms = [];\n    nonTranslationalTransformKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (value !== undefined) {\n            removedTransforms.push([key, value.get()]);\n            value.set(key.startsWith(\"scale\") ? 1 : 0);\n        }\n    });\n    // Apply changes to element before measurement\n    if (removedTransforms.length)\n        visualElement.render();\n    return removedTransforms;\n}\nconst positionalValues = {\n    // Dimensions\n    width: ({ x }, { paddingLeft = \"0\", paddingRight = \"0\" }) => x.max - x.min - parseFloat(paddingLeft) - parseFloat(paddingRight),\n    height: ({ y }, { paddingTop = \"0\", paddingBottom = \"0\" }) => y.max - y.min - parseFloat(paddingTop) - parseFloat(paddingBottom),\n    top: (_bbox, { top }) => parseFloat(top),\n    left: (_bbox, { left }) => parseFloat(left),\n    bottom: ({ y }, { top }) => parseFloat(top) + (y.max - y.min),\n    right: ({ x }, { left }) => parseFloat(left) + (x.max - x.min),\n    // Transform\n    x: getTranslateFromMatrix(4, 13),\n    y: getTranslateFromMatrix(5, 14),\n};\nconst convertChangedValueTypes = (target, visualElement, changedKeys) => {\n    const originBbox = visualElement.measureViewportBox();\n    const element = visualElement.current;\n    const elementComputedStyle = getComputedStyle(element);\n    const { display } = elementComputedStyle;\n    const origin = {};\n    // If the element is currently set to display: \"none\", make it visible before\n    // measuring the target bounding box\n    if (display === \"none\") {\n        visualElement.setStaticValue(\"display\", target.display || \"block\");\n    }\n    /**\n     * Record origins before we render and update styles\n     */\n    changedKeys.forEach((key) => {\n        origin[key] = positionalValues[key](originBbox, elementComputedStyle);\n    });\n    // Apply the latest values (as set in checkAndConvertChangedValueTypes)\n    visualElement.render();\n    const targetBbox = visualElement.measureViewportBox();\n    changedKeys.forEach((key) => {\n        // Restore styles to their **calculated computed style**, not their actual\n        // originally set style. This allows us to animate between equivalent pixel units.\n        const value = visualElement.getValue(key);\n        value && value.jump(origin[key]);\n        target[key] = positionalValues[key](targetBbox, elementComputedStyle);\n    });\n    return target;\n};\nconst checkAndConvertChangedValueTypes = (visualElement, target, origin = {}, transitionEnd = {}) => {\n    target = { ...target };\n    transitionEnd = { ...transitionEnd };\n    const targetPositionalKeys = Object.keys(target).filter(isPositionalKey);\n    // We want to remove any transform values that could affect the element's bounding box before\n    // it's measured. We'll reapply these later.\n    let removedTransformValues = [];\n    let hasAttemptedToRemoveTransformValues = false;\n    const changedValueTypeKeys = [];\n    targetPositionalKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (!visualElement.hasValue(key))\n            return;\n        let from = origin[key];\n        let fromType = findDimensionValueType(from);\n        const to = target[key];\n        let toType;\n        // TODO: The current implementation of this basically throws an error\n        // if you try and do value conversion via keyframes. There's probably\n        // a way of doing this but the performance implications would need greater scrutiny,\n        // as it'd be doing multiple resize-remeasure operations.\n        if (isKeyframesTarget(to)) {\n            const numKeyframes = to.length;\n            const fromIndex = to[0] === null ? 1 : 0;\n            from = to[fromIndex];\n            fromType = findDimensionValueType(from);\n            for (let i = fromIndex; i < numKeyframes; i++) {\n                /**\n                 * Don't allow wildcard keyframes to be used to detect\n                 * a difference in value types.\n                 */\n                if (to[i] === null)\n                    break;\n                if (!toType) {\n                    toType = findDimensionValueType(to[i]);\n                    invariant(toType === fromType ||\n                        (isNumOrPxType(fromType) && isNumOrPxType(toType)), \"Keyframes must be of the same dimension as the current value\");\n                }\n                else {\n                    invariant(findDimensionValueType(to[i]) === toType, \"All keyframes must be of the same type\");\n                }\n            }\n        }\n        else {\n            toType = findDimensionValueType(to);\n        }\n        if (fromType !== toType) {\n            // If they're both just number or px, convert them both to numbers rather than\n            // relying on resize/remeasure to convert (which is wasteful in this situation)\n            if (isNumOrPxType(fromType) && isNumOrPxType(toType)) {\n                const current = value.get();\n                if (typeof current === \"string\") {\n                    value.set(parseFloat(current));\n                }\n                if (typeof to === \"string\") {\n                    target[key] = parseFloat(to);\n                }\n                else if (Array.isArray(to) && toType === px) {\n                    target[key] = to.map(parseFloat);\n                }\n            }\n            else if ((fromType === null || fromType === void 0 ? void 0 : fromType.transform) &&\n                (toType === null || toType === void 0 ? void 0 : toType.transform) &&\n                (from === 0 || to === 0)) {\n                // If one or the other value is 0, it's safe to coerce it to the\n                // type of the other without measurement\n                if (from === 0) {\n                    value.set(toType.transform(from));\n                }\n                else {\n                    target[key] = fromType.transform(to);\n                }\n            }\n            else {\n                // If we're going to do value conversion via DOM measurements, we first\n                // need to remove non-positional transform values that could affect the bbox measurements.\n                if (!hasAttemptedToRemoveTransformValues) {\n                    removedTransformValues =\n                        removeNonTranslationalTransform(visualElement);\n                    hasAttemptedToRemoveTransformValues = true;\n                }\n                changedValueTypeKeys.push(key);\n                transitionEnd[key] =\n                    transitionEnd[key] !== undefined\n                        ? transitionEnd[key]\n                        : target[key];\n                value.jump(to);\n            }\n        }\n    });\n    if (changedValueTypeKeys.length) {\n        const scrollY = changedValueTypeKeys.indexOf(\"height\") >= 0\n            ? window.pageYOffset\n            : null;\n        const convertedTarget = convertChangedValueTypes(target, visualElement, changedValueTypeKeys);\n        // If we removed transform values, reapply them before the next render\n        if (removedTransformValues.length) {\n            removedTransformValues.forEach(([key, value]) => {\n                visualElement.getValue(key).set(value);\n            });\n        }\n        // Reapply original values\n        visualElement.render();\n        // Restore scroll position\n        if (isBrowser && scrollY !== null) {\n            window.scrollTo({ top: scrollY });\n        }\n        return { target: convertedTarget, transitionEnd };\n    }\n    else {\n        return { target, transitionEnd };\n    }\n};\n/**\n * Convert value types for x/y/width/height/top/left/bottom/right\n *\n * Allows animation between `'auto'` -> `'100%'` or `0` -> `'calc(50% - 10vw)'`\n *\n * @internal\n */\nfunction unitConversion(visualElement, target, origin, transitionEnd) {\n    return hasPositionalKey(target)\n        ? checkAndConvertChangedValueTypes(visualElement, target, origin, transitionEnd)\n        : { target, transitionEnd };\n}\n\nexport { positionalValues, unitConversion };\n","import { resolveCSSVariables } from './css-variables-conversion.mjs';\nimport { unitConversion } from './unit-conversion.mjs';\n\n/**\n * Parse a DOM variant to make it animatable. This involves resolving CSS variables\n * and ensuring animations like \"20%\" => \"calc(50vw)\" are performed in pixels.\n */\nconst parseDomVariant = (visualElement, target, origin, transitionEnd) => {\n    const resolved = resolveCSSVariables(visualElement, target, transitionEnd);\n    target = resolved.target;\n    transitionEnd = resolved.transitionEnd;\n    return unitConversion(visualElement, target, origin, transitionEnd);\n};\n\nexport { parseDomVariant };\n","// Does this device prefer reduced motion? Returns `null` server-side.\nconst prefersReducedMotion = { current: null };\nconst hasReducedMotionListener = { current: false };\n\nexport { hasReducedMotionListener, prefersReducedMotion };\n","const visualElementStore = new WeakMap();\n\nexport { visualElementStore };\n","import { frame, cancelFrame } from '../frameloop/index.mjs';\nimport { warning, invariant } from '../utils/errors.mjs';\nimport { createBox } from '../projection/geometry/models.mjs';\nimport { isRefObject } from '../utils/is-ref-object.mjs';\nimport { initPrefersReducedMotion } from '../utils/reduced-motion/index.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from '../utils/reduced-motion/state.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { motionValue } from '../value/index.mjs';\nimport { isWillChangeMotionValue } from '../value/use-will-change/is.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\nimport { transformProps } from './html/utils/transform.mjs';\nimport { isControllingVariants, isVariantNode } from './utils/is-controlling-variants.mjs';\nimport { isVariantLabel } from './utils/is-variant-label.mjs';\nimport { updateMotionValuesFromProps } from './utils/motion-values.mjs';\nimport { resolveVariantFromProps } from './utils/resolve-variants.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { featureDefinitions } from '../motion/features/definitions.mjs';\nimport { variantProps } from './utils/variant-props.mjs';\nimport { visualElementStore } from './store.mjs';\n\nconst featureNames = Object.keys(featureDefinitions);\nconst numFeatures = featureNames.length;\nconst propEventHandlers = [\n    \"AnimationStart\",\n    \"AnimationComplete\",\n    \"Update\",\n    \"BeforeLayoutMeasure\",\n    \"LayoutMeasure\",\n    \"LayoutAnimationStart\",\n    \"LayoutAnimationComplete\",\n];\nconst numVariantProps = variantProps.length;\n/**\n * A VisualElement is an imperative abstraction around UI elements such as\n * HTMLElement, SVGElement, Three.Object3D etc.\n */\nclass VisualElement {\n    constructor({ parent, props, presenceContext, reducedMotionConfig, visualState, }, options = {}) {\n        /**\n         * A reference to the current underlying Instance, e.g. a HTMLElement\n         * or Three.Mesh etc.\n         */\n        this.current = null;\n        /**\n         * A set containing references to this VisualElement's children.\n         */\n        this.children = new Set();\n        /**\n         * Determine what role this visual element should take in the variant tree.\n         */\n        this.isVariantNode = false;\n        this.isControllingVariants = false;\n        /**\n         * Decides whether this VisualElement should animate in reduced motion\n         * mode.\n         *\n         * TODO: This is currently set on every individual VisualElement but feels\n         * like it could be set globally.\n         */\n        this.shouldReduceMotion = null;\n        /**\n         * A map of all motion values attached to this visual element. Motion\n         * values are source of truth for any given animated value. A motion\n         * value might be provided externally by the component via props.\n         */\n        this.values = new Map();\n        /**\n         * Cleanup functions for active features (hover/tap/exit etc)\n         */\n        this.features = {};\n        /**\n         * A map of every subscription that binds the provided or generated\n         * motion values onChange listeners to this visual element.\n         */\n        this.valueSubscriptions = new Map();\n        /**\n         * A reference to the previously-provided motion values as returned\n         * from scrapeMotionValuesFromProps. We use the keys in here to determine\n         * if any motion values need to be removed after props are updated.\n         */\n        this.prevMotionValues = {};\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        /**\n         * An object containing an unsubscribe function for each prop event subscription.\n         * For example, every \"Update\" event can have multiple subscribers via\n         * VisualElement.on(), but only one of those can be defined via the onUpdate prop.\n         */\n        this.propEventSubscriptions = {};\n        this.notifyUpdate = () => this.notify(\"Update\", this.latestValues);\n        this.render = () => {\n            if (!this.current)\n                return;\n            this.triggerBuild();\n            this.renderInstance(this.current, this.renderState, this.props.style, this.projection);\n        };\n        this.scheduleRender = () => frame.render(this.render, false, true);\n        const { latestValues, renderState } = visualState;\n        this.latestValues = latestValues;\n        this.baseTarget = { ...latestValues };\n        this.initialValues = props.initial ? { ...latestValues } : {};\n        this.renderState = renderState;\n        this.parent = parent;\n        this.props = props;\n        this.presenceContext = presenceContext;\n        this.depth = parent ? parent.depth + 1 : 0;\n        this.reducedMotionConfig = reducedMotionConfig;\n        this.options = options;\n        this.isControllingVariants = isControllingVariants(props);\n        this.isVariantNode = isVariantNode(props);\n        if (this.isVariantNode) {\n            this.variantChildren = new Set();\n        }\n        this.manuallyAnimateOnMount = Boolean(parent && parent.current);\n        /**\n         * Any motion values that are provided to the element when created\n         * aren't yet bound to the element, as this would technically be impure.\n         * However, we iterate through the motion values and set them to the\n         * initial values for this component.\n         *\n         * TODO: This is impure and we should look at changing this to run on mount.\n         * Doing so will break some tests but this isn't neccessarily a breaking change,\n         * more a reflection of the test.\n         */\n        const { willChange, ...initialMotionValues } = this.scrapeMotionValuesFromProps(props, {});\n        for (const key in initialMotionValues) {\n            const value = initialMotionValues[key];\n            if (latestValues[key] !== undefined && isMotionValue(value)) {\n                value.set(latestValues[key], false);\n                if (isWillChangeMotionValue(willChange)) {\n                    willChange.add(key);\n                }\n            }\n        }\n    }\n    /**\n     * This method takes React props and returns found MotionValues. For example, HTML\n     * MotionValues will be found within the style prop, whereas for Three.js within attribute arrays.\n     *\n     * This isn't an abstract method as it needs calling in the constructor, but it is\n     * intended to be one.\n     */\n    scrapeMotionValuesFromProps(_props, _prevProps) {\n        return {};\n    }\n    mount(instance) {\n        this.current = instance;\n        visualElementStore.set(instance, this);\n        if (this.projection && !this.projection.instance) {\n            this.projection.mount(instance);\n        }\n        if (this.parent && this.isVariantNode && !this.isControllingVariants) {\n            this.removeFromVariantTree = this.parent.addVariantChild(this);\n        }\n        this.values.forEach((value, key) => this.bindToMotionValue(key, value));\n        if (!hasReducedMotionListener.current) {\n            initPrefersReducedMotion();\n        }\n        this.shouldReduceMotion =\n            this.reducedMotionConfig === \"never\"\n                ? false\n                : this.reducedMotionConfig === \"always\"\n                    ? true\n                    : prefersReducedMotion.current;\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(this.shouldReduceMotion !== true, \"You have Reduced Motion enabled on your device. Animations may not appear as expected.\");\n        }\n        if (this.parent)\n            this.parent.children.add(this);\n        this.update(this.props, this.presenceContext);\n    }\n    unmount() {\n        visualElementStore.delete(this.current);\n        this.projection && this.projection.unmount();\n        cancelFrame(this.notifyUpdate);\n        cancelFrame(this.render);\n        this.valueSubscriptions.forEach((remove) => remove());\n        this.removeFromVariantTree && this.removeFromVariantTree();\n        this.parent && this.parent.children.delete(this);\n        for (const key in this.events) {\n            this.events[key].clear();\n        }\n        for (const key in this.features) {\n            this.features[key].unmount();\n        }\n        this.current = null;\n    }\n    bindToMotionValue(key, value) {\n        const valueIsTransform = transformProps.has(key);\n        const removeOnChange = value.on(\"change\", (latestValue) => {\n            this.latestValues[key] = latestValue;\n            this.props.onUpdate &&\n                frame.update(this.notifyUpdate, false, true);\n            if (valueIsTransform && this.projection) {\n                this.projection.isTransformDirty = true;\n            }\n        });\n        const removeOnRenderRequest = value.on(\"renderRequest\", this.scheduleRender);\n        this.valueSubscriptions.set(key, () => {\n            removeOnChange();\n            removeOnRenderRequest();\n        });\n    }\n    sortNodePosition(other) {\n        /**\n         * If these nodes aren't even of the same type we can't compare their depth.\n         */\n        if (!this.current ||\n            !this.sortInstanceNodePosition ||\n            this.type !== other.type) {\n            return 0;\n        }\n        return this.sortInstanceNodePosition(this.current, other.current);\n    }\n    loadFeatures({ children, ...renderedProps }, isStrict, preloadedFeatures, initialLayoutGroupConfig) {\n        let ProjectionNodeConstructor;\n        let MeasureLayout;\n        /**\n         * If we're in development mode, check to make sure we're not rendering a motion component\n         * as a child of LazyMotion, as this will break the file-size benefits of using it.\n         */\n        if (process.env.NODE_ENV !== \"production\" &&\n            preloadedFeatures &&\n            isStrict) {\n            const strictMessage = \"You have rendered a `motion` component within a `LazyMotion` component. This will break tree shaking. Import and render a `m` component instead.\";\n            renderedProps.ignoreStrict\n                ? warning(false, strictMessage)\n                : invariant(false, strictMessage);\n        }\n        for (let i = 0; i < numFeatures; i++) {\n            const name = featureNames[i];\n            const { isEnabled, Feature: FeatureConstructor, ProjectionNode, MeasureLayout: MeasureLayoutComponent, } = featureDefinitions[name];\n            if (ProjectionNode)\n                ProjectionNodeConstructor = ProjectionNode;\n            if (isEnabled(renderedProps)) {\n                if (!this.features[name] && FeatureConstructor) {\n                    this.features[name] = new FeatureConstructor(this);\n                }\n                if (MeasureLayoutComponent) {\n                    MeasureLayout = MeasureLayoutComponent;\n                }\n            }\n        }\n        if (!this.projection && ProjectionNodeConstructor) {\n            this.projection = new ProjectionNodeConstructor(this.latestValues, this.parent && this.parent.projection);\n            const { layoutId, layout, drag, dragConstraints, layoutScroll, layoutRoot, } = renderedProps;\n            this.projection.setOptions({\n                layoutId,\n                layout,\n                alwaysMeasureLayout: Boolean(drag) ||\n                    (dragConstraints && isRefObject(dragConstraints)),\n                visualElement: this,\n                scheduleRender: () => this.scheduleRender(),\n                /**\n                 * TODO: Update options in an effect. This could be tricky as it'll be too late\n                 * to update by the time layout animations run.\n                 * We also need to fix this safeToRemove by linking it up to the one returned by usePresence,\n                 * ensuring it gets called if there's no potential layout animations.\n                 *\n                 */\n                animationType: typeof layout === \"string\" ? layout : \"both\",\n                initialPromotionConfig: initialLayoutGroupConfig,\n                layoutScroll,\n                layoutRoot,\n            });\n        }\n        return MeasureLayout;\n    }\n    updateFeatures() {\n        for (const key in this.features) {\n            const feature = this.features[key];\n            if (feature.isMounted) {\n                feature.update();\n            }\n            else {\n                feature.mount();\n                feature.isMounted = true;\n            }\n        }\n    }\n    triggerBuild() {\n        this.build(this.renderState, this.latestValues, this.options, this.props);\n    }\n    /**\n     * Measure the current viewport box with or without transforms.\n     * Only measures axis-aligned boxes, rotate and skew must be manually\n     * removed with a re-render to work.\n     */\n    measureViewportBox() {\n        return this.current\n            ? this.measureInstanceViewportBox(this.current, this.props)\n            : createBox();\n    }\n    getStaticValue(key) {\n        return this.latestValues[key];\n    }\n    setStaticValue(key, value) {\n        this.latestValues[key] = value;\n    }\n    /**\n     * Make a target animatable by Popmotion. For instance, if we're\n     * trying to animate width from 100px to 100vw we need to measure 100vw\n     * in pixels to determine what we really need to animate to. This is also\n     * pluggable to support Framer's custom value types like Color,\n     * and CSS variables.\n     */\n    makeTargetAnimatable(target, canMutate = true) {\n        return this.makeTargetAnimatableFromInstance(target, this.props, canMutate);\n    }\n    /**\n     * Update the provided props. Ensure any newly-added motion values are\n     * added to our map, old ones removed, and listeners updated.\n     */\n    update(props, presenceContext) {\n        if (props.transformTemplate || this.props.transformTemplate) {\n            this.scheduleRender();\n        }\n        this.prevProps = this.props;\n        this.props = props;\n        this.prevPresenceContext = this.presenceContext;\n        this.presenceContext = presenceContext;\n        /**\n         * Update prop event handlers ie onAnimationStart, onAnimationComplete\n         */\n        for (let i = 0; i < propEventHandlers.length; i++) {\n            const key = propEventHandlers[i];\n            if (this.propEventSubscriptions[key]) {\n                this.propEventSubscriptions[key]();\n                delete this.propEventSubscriptions[key];\n            }\n            const listener = props[\"on\" + key];\n            if (listener) {\n                this.propEventSubscriptions[key] = this.on(key, listener);\n            }\n        }\n        this.prevMotionValues = updateMotionValuesFromProps(this, this.scrapeMotionValuesFromProps(props, this.prevProps), this.prevMotionValues);\n        if (this.handleChildMotionValue) {\n            this.handleChildMotionValue();\n        }\n    }\n    getProps() {\n        return this.props;\n    }\n    /**\n     * Returns the variant definition with a given name.\n     */\n    getVariant(name) {\n        return this.props.variants ? this.props.variants[name] : undefined;\n    }\n    /**\n     * Returns the defined default transition on this component.\n     */\n    getDefaultTransition() {\n        return this.props.transition;\n    }\n    getTransformPagePoint() {\n        return this.props.transformPagePoint;\n    }\n    getClosestVariantNode() {\n        return this.isVariantNode\n            ? this\n            : this.parent\n                ? this.parent.getClosestVariantNode()\n                : undefined;\n    }\n    getVariantContext(startAtParent = false) {\n        if (startAtParent) {\n            return this.parent ? this.parent.getVariantContext() : undefined;\n        }\n        if (!this.isControllingVariants) {\n            const context = this.parent\n                ? this.parent.getVariantContext() || {}\n                : {};\n            if (this.props.initial !== undefined) {\n                context.initial = this.props.initial;\n            }\n            return context;\n        }\n        const context = {};\n        for (let i = 0; i < numVariantProps; i++) {\n            const name = variantProps[i];\n            const prop = this.props[name];\n            if (isVariantLabel(prop) || prop === false) {\n                context[name] = prop;\n            }\n        }\n        return context;\n    }\n    /**\n     * Add a child visual element to our set of children.\n     */\n    addVariantChild(child) {\n        const closestVariantNode = this.getClosestVariantNode();\n        if (closestVariantNode) {\n            closestVariantNode.variantChildren &&\n                closestVariantNode.variantChildren.add(child);\n            return () => closestVariantNode.variantChildren.delete(child);\n        }\n    }\n    /**\n     * Add a motion value and bind it to this visual element.\n     */\n    addValue(key, value) {\n        // Remove existing value if it exists\n        if (value !== this.values.get(key)) {\n            this.removeValue(key);\n            this.bindToMotionValue(key, value);\n        }\n        this.values.set(key, value);\n        this.latestValues[key] = value.get();\n    }\n    /**\n     * Remove a motion value and unbind any active subscriptions.\n     */\n    removeValue(key) {\n        this.values.delete(key);\n        const unsubscribe = this.valueSubscriptions.get(key);\n        if (unsubscribe) {\n            unsubscribe();\n            this.valueSubscriptions.delete(key);\n        }\n        delete this.latestValues[key];\n        this.removeValueFromRenderState(key, this.renderState);\n    }\n    /**\n     * Check whether we have a motion value for this key\n     */\n    hasValue(key) {\n        return this.values.has(key);\n    }\n    getValue(key, defaultValue) {\n        if (this.props.values && this.props.values[key]) {\n            return this.props.values[key];\n        }\n        let value = this.values.get(key);\n        if (value === undefined && defaultValue !== undefined) {\n            value = motionValue(defaultValue, { owner: this });\n            this.addValue(key, value);\n        }\n        return value;\n    }\n    /**\n     * If we're trying to animate to a previously unencountered value,\n     * we need to check for it in our state and as a last resort read it\n     * directly from the instance (which might have performance implications).\n     */\n    readValue(key) {\n        return this.latestValues[key] !== undefined || !this.current\n            ? this.latestValues[key]\n            : this.readValueFromInstance(this.current, key, this.options);\n    }\n    /**\n     * Set the base target to later animate back to. This is currently\n     * only hydrated on creation and when we first read a value.\n     */\n    setBaseTarget(key, value) {\n        this.baseTarget[key] = value;\n    }\n    /**\n     * Find the base target for a value thats been removed from all animation\n     * props.\n     */\n    getBaseTarget(key) {\n        var _a;\n        const { initial } = this.props;\n        const valueFromInitial = typeof initial === \"string\" || typeof initial === \"object\"\n            ? (_a = resolveVariantFromProps(this.props, initial)) === null || _a === void 0 ? void 0 : _a[key]\n            : undefined;\n        /**\n         * If this value still exists in the current initial variant, read that.\n         */\n        if (initial && valueFromInitial !== undefined) {\n            return valueFromInitial;\n        }\n        /**\n         * Alternatively, if this VisualElement config has defined a getBaseTarget\n         * so we can read the value from an alternative source, try that.\n         */\n        const target = this.getBaseTargetFromProps(this.props, key);\n        if (target !== undefined && !isMotionValue(target))\n            return target;\n        /**\n         * If the value was initially defined on initial, but it doesn't any more,\n         * return undefined. Otherwise return the value as initially read from the DOM.\n         */\n        return this.initialValues[key] !== undefined &&\n            valueFromInitial === undefined\n            ? undefined\n            : this.baseTarget[key];\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        return this.events[eventName].add(callback);\n    }\n    notify(eventName, ...args) {\n        if (this.events[eventName]) {\n            this.events[eventName].notify(...args);\n        }\n    }\n}\n\nexport { VisualElement };\n","import { isBrowser } from '../is-browser.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from './state.mjs';\n\nfunction initPrefersReducedMotion() {\n    hasReducedMotionListener.current = true;\n    if (!isBrowser)\n        return;\n    if (window.matchMedia) {\n        const motionMediaQuery = window.matchMedia(\"(prefers-reduced-motion)\");\n        const setReducedMotionPreferences = () => (prefersReducedMotion.current = motionMediaQuery.matches);\n        motionMediaQuery.addListener(setReducedMotionPreferences);\n        setReducedMotionPreferences();\n    }\n    else {\n        prefersReducedMotion.current = false;\n    }\n}\n\nexport { initPrefersReducedMotion };\n","import { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { warnOnce } from '../../utils/warn-once.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction updateMotionValuesFromProps(element, next, prev) {\n    const { willChange } = next;\n    for (const key in next) {\n        const nextValue = next[key];\n        const prevValue = prev[key];\n        if (isMotionValue(nextValue)) {\n            /**\n             * If this is a motion value found in props or style, we want to add it\n             * to our visual element's motion value map.\n             */\n            element.addValue(key, nextValue);\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.add(key);\n            }\n            /**\n             * Check the version of the incoming motion value with this version\n             * and warn against mismatches.\n             */\n            if (process.env.NODE_ENV === \"development\") {\n                warnOnce(nextValue.version === \"10.12.12\", `Attempting to mix Framer Motion versions ${nextValue.version} with 10.12.12 may not work as expected.`);\n            }\n        }\n        else if (isMotionValue(prevValue)) {\n            /**\n             * If we're swapping from a motion value to a static value,\n             * create a new motion value from that\n             */\n            element.addValue(key, motionValue(nextValue, { owner: element }));\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.remove(key);\n            }\n        }\n        else if (prevValue !== nextValue) {\n            /**\n             * If this is a flat value that has changed, update the motion value\n             * or create one if it doesn't exist. We only want to do this if we're\n             * not handling the value with our animation state.\n             */\n            if (element.hasValue(key)) {\n                const existingValue = element.getValue(key);\n                // TODO: Only update values that aren't being animated or even looked at\n                !existingValue.hasAnimated && existingValue.set(nextValue);\n            }\n            else {\n                const latestValue = element.getStaticValue(key);\n                element.addValue(key, motionValue(latestValue !== undefined ? latestValue : nextValue, { owner: element }));\n            }\n        }\n    }\n    // Handle removed values\n    for (const key in prev) {\n        if (next[key] === undefined)\n            element.removeValue(key);\n    }\n    return next;\n}\n\nexport { updateMotionValuesFromProps };\n","import { getOrigin, checkTargetForNewValues } from '../utils/setters.mjs';\nimport { parseDomVariant } from './utils/parse-dom-variant.mjs';\nimport { VisualElement } from '../VisualElement.mjs';\n\nclass DOMVisualElement extends VisualElement {\n    sortInstanceNodePosition(a, b) {\n        /**\n         * compareDocumentPosition returns a bitmask, by using the bitwise &\n         * we're returning true if 2 in that bitmask is set to true. 2 is set\n         * to true if b preceeds a.\n         */\n        return a.compareDocumentPosition(b) & 2 ? 1 : -1;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props.style ? props.style[key] : undefined;\n    }\n    removeValueFromRenderState(key, { vars, style }) {\n        delete vars[key];\n        delete style[key];\n    }\n    makeTargetAnimatableFromInstance({ transition, transitionEnd, ...target }, { transformValues }, isMounted) {\n        let origin = getOrigin(target, transition || {}, this);\n        /**\n         * If Framer has provided a function to convert `Color` etc value types, convert them\n         */\n        if (transformValues) {\n            if (transitionEnd)\n                transitionEnd = transformValues(transitionEnd);\n            if (target)\n                target = transformValues(target);\n            if (origin)\n                origin = transformValues(origin);\n        }\n        if (isMounted) {\n            checkTargetForNewValues(this, target, origin);\n            const parsed = parseDomVariant(this, target, origin, transitionEnd);\n            transitionEnd = parsed.transitionEnd;\n            target = parsed.target;\n        }\n        return {\n            transition,\n            transitionEnd,\n            ...target,\n        };\n    }\n}\n\nexport { DOMVisualElement };\n","/**\n * Check if value is a numerical string, ie a string that is purely a number eg \"100\" or \"-100.1\"\n */\nconst isNumericalString = (v) => /^\\-?\\d*\\.?\\d+$/.test(v);\n\nexport { isNumericalString };\n","import { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { isCSSVariableName } from '../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './utils/transform.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { renderHTML } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { measureViewportBox } from '../../projection/utils/measure.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction getComputedStyle(element) {\n    return window.getComputedStyle(element);\n}\nclass HTMLVisualElement extends DOMVisualElement {\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        else {\n            const computedStyle = getComputedStyle(instance);\n            const value = (isCSSVariableName(key)\n                ? computedStyle.getPropertyValue(key)\n                : computedStyle[key]) || 0;\n            return typeof value === \"string\" ? value.trim() : value;\n        }\n    }\n    measureInstanceViewportBox(instance, { transformPagePoint }) {\n        return measureViewportBox(instance, transformPagePoint);\n    }\n    build(renderState, latestValues, options, props) {\n        buildHTMLStyles(renderState, latestValues, options, props.transformTemplate);\n    }\n    scrapeMotionValuesFromProps(props, prevProps) {\n        return scrapeMotionValuesFromProps(props, prevProps);\n    }\n    handleChildMotionValue() {\n        if (this.childSubscription) {\n            this.childSubscription();\n            delete this.childSubscription;\n        }\n        const { children } = this.props;\n        if (isMotionValue(children)) {\n            this.childSubscription = children.on(\"change\", (latest) => {\n                if (this.current)\n                    this.current.textContent = `${latest}`;\n            });\n        }\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderHTML(instance, renderState, styleProp, projection);\n    }\n}\n\nexport { HTMLVisualElement, getComputedStyle };\n","import { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { camelToDash } from '../dom/utils/camel-to-dash.mjs';\nimport { camelCaseAttributes } from './utils/camel-case-attrs.mjs';\nimport { transformProps } from '../html/utils/transform.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nclass SVGVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.isSVGTag = false;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props[key];\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;\n        return instance.getAttribute(key);\n    }\n    measureInstanceViewportBox() {\n        return createBox();\n    }\n    scrapeMotionValuesFromProps(props, prevProps) {\n        return scrapeMotionValuesFromProps(props, prevProps);\n    }\n    build(renderState, latestValues, options, props) {\n        buildSVGAttrs(renderState, latestValues, options, this.isSVGTag, props.transformTemplate);\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderSVG(instance, renderState, styleProp, projection);\n    }\n    mount(instance) {\n        this.isSVGTag = isSVGTag(instance.tagName);\n        super.mount(instance);\n    }\n}\n\nexport { SVGVisualElement };\n","import { HTMLVisualElement } from '../html/HTMLVisualElement.mjs';\nimport { SVGVisualElement } from '../svg/SVGVisualElement.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\n\nconst createDomVisualElement = (Component, options) => {\n    return isSVGComponent(Component)\n        ? new SVGVisualElement(options, { enableHardwareAcceleration: false })\n        : new HTMLVisualElement(options, { enableHardwareAcceleration: true });\n};\n\nexport { createDomVisualElement };\n","import { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\n\nconst layout = {\n    layout: {\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { layout };\n","import { createMotionComponent } from '../../motion/index.mjs';\nimport { createMotionProxy } from './motion-proxy.mjs';\nimport { createDomMotionConfig } from './utils/create-config.mjs';\nimport { gestureAnimations } from '../../motion/features/gestures.mjs';\nimport { animations } from '../../motion/features/animations.mjs';\nimport { drag } from '../../motion/features/drag.mjs';\nimport { createDomVisualElement } from './create-visual-element.mjs';\nimport { layout } from '../../motion/features/layout.mjs';\n\nconst preloadedFeatures = {\n    ...animations,\n    ...gestureAnimations,\n    ...drag,\n    ...layout,\n};\n/**\n * HTML & SVG components, optimised for use with gestures and animation. These can be used as\n * drop-in replacements for any HTML & SVG component, all CSS & SVG properties are supported.\n *\n * @public\n */\nconst motion = /*@__PURE__*/ createMotionProxy((Component, config) => createDomMotionConfig(Component, config, preloadedFeatures, createDomVisualElement));\n/**\n * Create a DOM `motion` component with the provided string. This is primarily intended\n * as a full alternative to `motion` for consumers who have to support environments that don't\n * support `Proxy`.\n *\n * ```javascript\n * import { createDomMotionComponent } from \"framer-motion\"\n *\n * const motion = {\n *   div: createDomMotionComponent('div')\n * }\n * ```\n *\n * @public\n */\nfunction createDomMotionComponent(key) {\n    return createMotionComponent(createDomMotionConfig(key, { forwardMotionProps: false }, preloadedFeatures, createDomVisualElement));\n}\n\nexport { createDomMotionComponent, motion };\n","import { isSVGComponent } from './is-svg-component.mjs';\nimport { createUseRender } from '../use-render.mjs';\nimport { svgMotionConfig } from '../../svg/config-motion.mjs';\nimport { htmlMotionConfig } from '../../html/config-motion.mjs';\n\nfunction createDomMotionConfig(Component, { forwardMotionProps = false }, preloadedFeatures, createVisualElement) {\n    const baseConfig = isSVGComponent(Component)\n        ? svgMotionConfig\n        : htmlMotionConfig;\n    return {\n        ...baseConfig,\n        preloadedFeatures,\n        useRender: createUseRender(forwardMotionProps),\n        createVisualElement,\n        Component,\n    };\n}\n\nexport { createDomMotionConfig };\n"],"names":["_superPropBase","object","property","Object","prototype","hasOwnProperty","call","getPrototypeOf","_get","Reflect","get","target","receiver","base","desc","getOwnPropertyDescriptor","arguments","length","value","apply","this","_objectWithoutProperties","source","excluded","key","i","sourceKeys","keys","indexOf","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","MotionConfigContext","createContext","transformPagePoint","p","isStatic","reducedMotion","MotionContext","PresenceContext","isBrowser","document","useIsomorphicLayoutEffect","useLayoutEffect","useEffect","LazyContext","strict","isRefObject","ref","isVariantLabel","v","Array","isArray","isAnimationControls","start","variantPriorityOrder","variantProps","isControllingVariants","props","animate","some","name","isVariantNode","Boolean","variants","useCreateMotionContext","context","initial","undefined","inherit","getCurrentTreeVariants","useContext","useMemo","variantLabelsAsDependency","prop","join","featureProps","animation","exit","drag","focus","hover","tap","pan","inView","layout","featureDefinitions","isEnabled","LayoutGroupContext","SwitchLayoutGroupContext","motionComponentSymbol","Symbol","for","createMotionComponent","preloadedFeatures","createVisualElement","useRender","useVisualState","Component","features","loadFeatures","ForwardRefComponent","forwardRef","externalRef","MeasureLayout","configAndProps","layoutId","useLayoutId","visualState","visualElement","parent","lazyContext","presenceContext","reducedMotionConfig","visualElementRef","useRef","renderer","current","blockInitialAnimation","useInsertionEffect","update","render","updateFeatures","window","HandoffAppearAnimations","animationState","animateChanges","useVisualElement","initialLayoutGroupConfig","isStrict","React","Provider","useCallback","instance","mount","unmount","useMotionRef","layoutGroupId","id","createMotionProxy","createConfig","custom","customMotionComponentConfig","Proxy","componentCache","Map","_target","has","set","lowercaseSVGElements","isSVGComponent","includes","test","scaleCorrectors","transformPropOrder","transformProps","Set","isForcedMotionValue","startsWith","isMotionValue","getVelocity","translateAlias","x","y","z","transformPerspective","numTransforms","checkStringStartsWith","token","isCSSVariableName","isCSSVariableToken","getValueAsType","type","transform","clamp","min","max","Math","number","parse","parseFloat","alpha","scale","default","sanitize","round","floatRegex","colorRegex","singleColorRegex","isString","createUnitType","unit","endsWith","split","degrees","percent","px","vh","vw","progressPercentage","int","numberValueTypes","borderWidth","borderTopWidth","borderRightWidth","borderBottomWidth","borderLeftWidth","borderRadius","radius","borderTopLeftRadius","borderTopRightRadius","borderBottomRightRadius","borderBottomLeftRadius","width","maxWidth","height","maxHeight","size","top","right","bottom","left","padding","paddingTop","paddingRight","paddingBottom","paddingLeft","margin","marginTop","marginRight","marginBottom","marginLeft","rotate","rotateX","rotateY","rotateZ","scaleX","scaleY","scaleZ","skew","skewX","skewY","distance","translateX","translateY","translateZ","perspective","opacity","originX","originY","originZ","zIndex","fillOpacity","strokeOpacity","numOctaves","buildHTMLStyles","state","latestValues","options","transformTemplate","style","vars","transformOrigin","hasTransform","hasTransformOrigin","transformIsNone","valueType","valueAsType","transformIsDefault","enableHardwareAcceleration","allowTransformNone","transformString","trim","buildTransform","createHtmlRenderState","copyRawValuesOnly","useStyle","assign","useInitialMotionValues","transformValues","useHTMLProps","htmlProps","dragListener","draggable","userSelect","WebkitUserSelect","WebkitTouchCallout","touchAction","tabIndex","onTap","onTapStart","whileTap","validMotionProps","isValidMotionProp","isValidProp","shouldForward","require","_a","filterProps","isDom","forwardMotionProps","filteredProps","values","calcOrigin","origin","offset","dashKeys","array","camelKeys","buildSVGAttrs","isSVGTag","attrX","attrY","attrScale","pathLength","pathSpacing","pathOffset","viewBox","attrs","dimensions","pxOriginX","pxOriginY","calcSVGTransformOrigin","spacing","useDashCase","buildSVGPath","createSvgRenderState","tag","toLowerCase","useSVGProps","_isStatic","visualProps","rawStyles","createUseRender","elementProps","children","renderedChildren","createElement","camelToDash","str","replace","renderHTML","element","styleProp","projection","getProjectionStyles","setProperty","camelCaseAttributes","renderSVG","renderState","_styleProp","setAttribute","scrapeMotionValuesFromProps","prevProps","newValues","scrapeMotionValuesFromProps$1","charAt","toUpperCase","substring","resolveVariantFromProps","definition","currentValues","currentVelocity","isKeyframesTarget","resolveMotionValue","unwrappedValue","mix","toValue","makeUseVisualState","config","make","createRenderState","onMount","makeLatestValues","makeState","init","useConstant","scrapeMotionValues","motionValues","isControllingVariants$1","isVariantNode$1","isInitialAnimationBlocked","variantToSet","forEach","resolved","transitionEnd","transition","valueTarget","svgMotionConfig","getBBox","getBoundingClientRect","e","tagName","htmlMotionConfig","addDomEvent","eventName","handler","passive","addEventListener","removeEventListener","isPrimaryPointer","event","pointerType","button","isPrimary","extractEventInfo","pointType","point","addPointerEvent","addPointerInfo","combineFunctions","a","b","pipe","transformers","reduce","createLock","lock","globalHorizontalLock","globalVerticalLock","getGlobalLock","openHorizontal","openVertical","isDragActive","openGestureLock","Feature","node","isMounted","frameData","delta","timestamp","isProcessing","useDefaultElapsed","runNextFrame","stepsOrder","steps","acc","toRun","toRunNextFrame","numToRun","flushNextFrame","toKeepAlive","WeakSet","step","schedule","callback","addToCurrentFrame","buffer","add","push","cancel","index","splice","delete","process","createRenderStep","processStep","stepId","processFrame","requestAnimationFrame","startLoop","frame","keepAlive","immediate","cancelFrame","addHoverEvent","isActive","callbackName","info","getProps","whileHover","setActive","HoverGesture","FocusGesture","isFocusVisible","matches","onFocus","onBlur","isNodeOrChild","child","parentElement","noop","any","fireSyntheticPointerEvent","syntheticPointerEvent","PointerEvent","PressGesture","removeStartListeners","removeEndListeners","removeAccessibleListeners","startPointerPress","startEvent","startInfo","isPressing","removePointerUpListener","endEvent","endInfo","checkPressEnd","onTapCancel","removePointerCancelListener","cancelEvent","cancelInfo","cancelPress","startPress","startAccessiblePress","removeKeydownListener","keydownEvent","keyupEvent","removeBlurListener","removePointerListener","removeFocusListener","observerCallbacks","WeakMap","observers","fireObserverCallback","entry","fireAllObserverCallbacks","entries","observeIntersection","rootInteresectionObserver","root","lookupRoot","rootObservers","JSON","stringify","IntersectionObserver","initIntersectionObserver","observe","unobserve","thresholdNames","all","InViewFeature","hasEnteredView","isInView","viewport","rootMargin","amount","once","threshold","isIntersecting","onViewportEnter","onViewportLeave","startObserver","hasOptionsChanged","prevViewport","hasViewportOptionChanged","gestureAnimations","shallowCompare","next","prev","prevLength","resolveVariant","getCurrent","velocity","optimizedAppearDataAttribute","warning","invariant","secondsToMilliseconds","seconds","millisecondsToSeconds","milliseconds","instantAnimationState","isBezierDefinition","easing","isWaapiSupportedEasing","supportedWaapiEasing","every","cubicBezierAsString","c","d","linear","ease","easeIn","easeOut","easeInOut","circIn","circOut","backIn","backOut","mapEasingToNativeEasing","map","featureTests","waapi","Element","results","supports","calcBezier","t","a1","a2","cubicBezier","mX1","mY1","mX2","mY2","getTForX","aX","lowerBound","upperBound","currentX","currentT","abs","binarySubdivide","mirrorEasing","reverseEasing","sin","acos","circInOut","backInOut","easingLookup","anticipate","pow","easingDefinitionToFunction","isColorString","testProp","splitColor","aName","bName","cName","match","rgbUnit","clampRgbUnit","rgba","red","green","blue","alpha$1","hex","r","g","parseInt","hsla","hue","saturation","lightness","color","from","to","progress","hueToRgb","q","mixLinearColor","fromExpo","sqrt","colorTypes","asRGBA","find","model","hslaToRgba","mixColor","fromRGBA","toRGBA","blended","cssVarTokeniser","regex","countKey","colorTokeniser","numberTokeniser","tokenise","tokenised","analyseComplexValue","originalValue","toString","numVars","numColors","numNumbers","parseComplexValue","createTransformer","numValues","output","convertNumbersToZero","complex","_b","isNaN","getAnimatableNone","parsed","transformer","mixImmediate","getMixer","mixComplex","mixArray","blendValue","fromThis","mixObject","template","originStats","targetStats","toFromDifference","mixNumber","createMixers","customMixer","mixers","mixerFactory","numMixers","mixer","easingFunction","interpolate","input","isClamp","inputLength","reverse","interpolator","progressInRange","defaultOffset","arr","remaining","offsetProgress","fillOffset","keyframes","duration","keyframeValues","times","easingFunctions","isEasingArray","done","absoluteTimes","o","convertOffsetToTimes","mapTimeToKeyframe","calculatedDuration","velocityPerSecond","frameDuration","calcGeneratorVelocity","resolveValue","prevT","safeMin","findSpring","envelope","derivative","bounce","mass","dampingRatio","undampedFreq","exponentialDecay","calcAngularFreq","exp","f","initialGuess","result","approximateRoot","stiffness","damping","durationKeys","physicsKeys","isSpringType","spring","resolveSpring","restDelta","restSpeed","springOptions","isResolvedFromDuration","derived","getSpringOptions","initialVelocity","initialDelta","undampedAngularFreq","isGranularScale","angularFreq","cos","dampedAngularFreq","freqForT","sinh","cosh","isBelowVelocityThreshold","isBelowDisplacementThreshold","inertia","power","timeConstant","bounceDamping","bounceStiffness","modifyTarget","nearestBoundary","amplitude","ideal","timeReachedBoundary","spring$1","calcDelta","calcLatest","applyFriction","latest","checkCatchBoundary","hasUpdatedFrame","frameloopDriver","passTimestamp","stop","now","performance","calcGeneratorDuration","generator","Infinity","types","decay","tween","animateValue","resolveFinishedPromise","currentFinishedPromise","animationDriver","autoplay","delay","driver","keyframes$1","repeat","repeatDelay","repeatType","onPlay","onStop","onComplete","onUpdate","speed","hasStopped","updateFinishedPromise","Promise","resolve","mapNumbersToKeyframes","generatorFactory","mirroredGenerator","playState","holdTime","startTime","cancelTime","resolvedDuration","totalDuration","currentTime","tick","timeWithoutDelay","isInDelayPhase","elapsed","frameGenerator","currentIteration","floor","iterationProgress","iterationIsOdd","isAnimationFinished","finish","stopAnimationDriver","play","controls","then","reject","time","newTime","newSpeed","pause","complete","sample","acceleratedValues","createAcceleratedAnimation","valueName","requiresPregeneratedKeyframes","sampleAnimation","pregeneratedKeyframes","keyframeOptions","fill","iterations","direction","animateStyle","owner","cancelAnimation","safeCancel","onfinish","getFinalKeyframe","playbackRate","setWithVelocity","createInstantAnimation","setValue","underDampedSpring","keyframesTransition","getDefaultTransition","valueKey","isAnimatable","maxDefaults","applyDefaultFilter","slice","defaultValue","functionRegex","filter","functions","defaultValueTypes","backgroundColor","outlineColor","stroke","borderColor","borderTopColor","borderRightColor","borderBottomColor","borderLeftColor","WebkitFilter","getDefaultValueType","defaultValueType","isZeroValueString","isNone","getKeyframes","isTargetAnimatable","defaultOrigin","animatableTemplateValue","noneKeyframeIndexes","isTransitionDefined","when","delayChildren","staggerChildren","staggerDirection","getValueTransition","animateMotionValue","valueTransition","originKeyframe","targetKeyframe","isOriginAnimatable","HTMLElement","acceleratedAnimation","isWillChangeMotionValue","addUniqueItem","item","removeItem","SubscriptionManager","subscriptions","numSubscriptions","isFloat","MotionValue","version","timeDelta","lastUpdated","canTrackVelocity","events","updateAndNotify","scheduleVelocityCheck","change","notify","velocityChange","renderRequest","velocityCheck","hasAnimated","subscription","on","unsubscribe","getSize","eventManagers","clear","passiveEffect","stopPassiveEffect","startAnimation","animationStart","animationComplete","clearAnimation","animationCancel","clearListeners","motionValue","testValueType","dimensionValueTypes","findDimensionValueType","valueTypes","findValueType","setMotionValue","hasValue","getValue","addValue","setTarget","makeTargetAnimatable","getOriginFromTransition","shouldBlockAnimation","protectedKeys","needsAnimating","shouldBlock","animateTarget","transitionOverride","willChange","animations","animationTypeState","getState","appearId","shouldReduceMotion","remove","animateVariant","variant","getAnimation","getChildAnimations","variantChildren","forwardDelay","animateChildren","first","last","maxStaggerDuration","generateStaggerDuration","sort","sortByTreeOrder","sortNodePosition","reversePriorityOrder","numAnimationTypes","animateList","resolvedDefinition","animateVisualElement","createAnimationState","createTypeState","whileInView","whileDrag","whileFocus","isInitialRender","buildResolvedTypeValues","changedActiveType","getVariantContext","removedKeys","encounteredKeys","removedVariantIndex","typeState","propIsVariant","activeDelta","isInherited","manuallyAnimateOnMount","prevProp","variantDidChange","checkVariantsDidChange","shouldAnimateType","definitionList","resolvedValues","prevResolvedValues","allKeys","markToAnimate","fallbackAnimation","fallbackTarget","getBaseTarget","shouldAnimate","setAnimateFunction","makeAnimator","AnimationFeature","subscribe","updateAnimationControlsSubscription","ExitAnimationFeature","isPresent","onExitComplete","prevIsPresent","prevPresenceContext","exitAnimation","register","distance2D","xDelta","yDelta","PanSession","handlers","lastMoveEvent","lastMoveEventInfo","updatePoint","getPanInfo","history","isPanStarted","isDistancePastThreshold","onStart","onMove","handlePointerMove","transformPoint","handlePointerUp","end","onEnd","onSessionEnd","panInfo","initialInfo","onSessionStart","removeListeners","subtractPoint","lastDevicePoint","startDevicePoint","timestampedPoint","lastPoint","calcLength","axis","isNear","maxDistance","calcAxisDelta","originPoint","translate","calcBoxDelta","calcRelativeAxis","relative","calcRelativeBox","calcRelativeAxisPosition","calcRelativePosition","calcRelativeAxisConstraints","calcViewportAxisConstraints","layoutAxis","constraintsAxis","defaultElastic","resolveAxisElastic","dragElastic","minLabel","maxLabel","resolvePointElastic","label","eachAxis","convertBoundingBoxToBox","isIdentityScale","hasScale","has2DTranslate","is2DTranslate","scalePoint","applyPointDelta","boxScale","applyAxisDelta","applyBoxDelta","box","snapToDefault","Number","isInteger","translateAxis","transformAxis","transforms","scaleKey","originKey","axisOrigin","xKeys","yKeys","transformBox","measureViewportBox","topLeft","bottomRight","transformBoxPoints","elementDragControls","VisualElementDragControls","openGlobalLock","isDragging","currentDirection","constraints","hasMutatedConstraints","elastic","originEvent","snapToCursor","stopAnimation","dragPropagation","onDragStart","resolveConstraints","isAnimationBlocked","getAxisMotionValue","measuredAxis","layoutBox","dragDirectionLock","onDirectionLock","onDrag","getCurrentDirection","updateAxis","panSession","getTransformPagePoint","onDragEnd","_point","shouldDrag","axisValue","applyConstraints","dragConstraints","prevConstraints","resolveRefConstraints","calcRelativeConstraints","resolveDragElastic","relativeConstraints","rebaseAxisConstraints","onMeasureDragConstraints","constraintsElement","constraintsBox","rootProjectionNode","viewportBox","scroll","measurePageBox","measuredConstraints","calcViewportConstraints","userConstraints","convertBoxToBoundingBox","dragMomentum","dragTransition","dragSnapToOrigin","onDragTransitionEnd","momentumAnimations","startAxisValueAnimation","dragKey","externalMotionValue","boxProgress","sourceLength","targetLength","updateScroll","updateLayout","stopPointerListener","measureDragConstraints","stopMeasureLayoutListener","stopResizeListener","scalePositionWithinConstraints","stopLayoutUpdateListener","hasLayoutChanged","lockThreshold","DragGesture","removeGroupControls","dragControls","addListeners","asyncHandler","PanGesture","removePointerDownListener","pointerDownEvent","session","createPanHandlers","onPanSessionStart","onPanStart","onPan","onPanEnd","onPointerDown","updateHandlers","globalProjectionState","hasAnimatedSinceResize","hasEverUpdated","pixelsToPercent","pixels","correctBorderRadius","correct","correctBoxShadow","treeScale","projectionDelta","original","shadow","xScale","yScale","averageScale","MeasureLayoutWithContext","correctors","layoutGroup","switchLayoutGroup","defaultScaleCorrectors","group","didUpdate","safeToRemove","setOptions","layoutDependency","willUpdate","promote","relegate","stack","getStack","members","queueMicrotask","currentAnimation","isLead","promoteContext","scheduleCheckAfterUnmount","deregister","React__default","useId","usePresence","applyTo","boxShadow","borders","numBorders","asNumber","isPx","mixValues","follow","lead","shouldCrossfadeOpacity","isOnlyMember","easeCrossfadeIn","opacityExit","easeCrossfadeOut","borderLabel","followRadius","getRadius","leadRadius","radiusName","compress","copyAxisInto","originAxis","copyBoxInto","originBox","removePointDelta","removeAxisTransforms","sourceAxis","removeAxisDelta","removeBoxTransforms","sourceBox","isAxisDeltaZero","isDeltaZero","boxEquals","aspectRatio","NodeStack","scheduleRender","prevLead","indexOfNode","findIndex","member","preserveFollowOpacity","show","resumeFrom","preserveOpacity","snapshot","animationValues","isUpdating","isLayoutDirty","crossfade","hide","resumingFrom","buildProjectionTransform","latestTransform","xTranslate","yTranslate","elementScaleX","elementScaleY","compareByDepth","depth","FlatTree","isDirty","timeout","checkElapsed","record","data","MotionDebug","isSVGElement","SVGElement","transformAxes","projectionFrameData","totalNodes","resolvedTargetDeltas","recalculatedProjection","createProjectionNode","attachResizeListener","defaultParent","measureScroll","checkIsScrollRoot","resetTransform","animationId","isTreeAnimating","isProjectionDirty","isSharedProjectionDirty","isTransformDirty","updateManuallyBlocked","updateBlockedByResize","isSVG","needsReset","shouldResetTransform","eventHandlers","hasTreeAnimated","updateScheduled","checkUpdateFailed","clearAllSnapshots","updateProjection","nodes","propagateDirtyNodes","resolveTargetDelta","calcProjection","cleanDirtyNodes","hasProjected","isVisible","animationProgress","sharedNodes","path","subscriptionManager","args","cancelDelay","resizeUnblockUpdate","finishAnimation","registerSharedNode","hasRelativeTargetChanged","newLayout","isTreeAnimationBlocked","relativeTarget","layoutTransition","defaultLayoutTransition","onLayoutAnimationStart","onLayoutAnimationComplete","targetChanged","targetLayout","hasOnlyRelativeTargetChanged","layoutRoot","setAnimationOrigin","animationOptions","isUpdateBlocked","resetRotation","shouldNotifyListeners","startUpdate","getTransformTemplate","prevTransformTemplateValue","updateSnapshot","notifyListeners","unblockUpdate","clearMeasurements","resetTransformStyle","notifyLayoutUpdate","preRender","clearSnapshot","removeLeadSnapshots","measure","alwaysMeasureLayout","prevLayout","layoutCorrected","phase","needsMeasurement","layoutScroll","isRoot","isResetRequested","hasProjection","transformTemplateValue","transformTemplateHasChanged","removeTransform","pageBox","removeElementScroll","roundBox","measuredBox","boxWithoutScroll","rootScroll","transformOnly","withTransforms","boxWithoutTransform","targetDelta","scheduleUpdateProjection","relativeParent","resolvedRelativeTargetAt","forceRecalculation","getLead","isShared","canSkip","attemptToResolveRelativeTarget","getClosestProjectingParent","forceRelativeParentToResolveTarget","relativeTargetOrigin","targetWithTransforms","applyTransform","isProjecting","pendingAnimation","treePath","isSharedTransition","treeLength","display","applyTreeDeltas","projectionDeltaWithTransform","prevTreeScaleX","prevTreeScaleY","prevProjectionTransform","projectionTransform","notifyAll","snapshotLatestValues","mixedValues","prevRelativeTarget","relativeLayout","snapshotSource","layoutSource","isSharedLayoutAnimation","hasOpacityCrossfade","mixTargetDelta","mixAxisDelta","setTargetDelta","mixBox","motionValue$1","animateSingleValue","completeAnimation","exitAnimationComplete","shouldAnimatePositionOnly","animationType","xLength","yLength","initialPromotionConfig","shouldPreserveFollowOpacity","hasRotate","resetValues","setStaticValue","styles","visibility","pointerEvents","emptyStyles","valuesToRender","applyTransformsToTarget","corrected","num","hasListeners","measuredLayout","axisSnapshot","layoutDelta","visualDelta","parentSnapshot","parentLayout","relativeSnapshot","onBeforeLayoutMeasure","removeLeadSnapshot","mixAxis","roundAxis","DocumentProjectionNode","documentElement","scrollLeft","body","scrollTop","HTMLProjectionNode","documentNode","getComputedStyle","position","ProjectionNode","splitCSSVariableRegex","parseCSSVariable","exec","getVariableValue","fallback","getPropertyValue","positionalKeys","isPositionalKey","isNumOrPxType","getPosFromMatrix","matrix","pos","getTranslateFromMatrix","pos2","pos3","_bbox","matrix3d","transformKeys","nonTranslationalTransformKeys","removeNonTranslationalTransform","removedTransforms","positionalValues","convertChangedValueTypes","changedKeys","originBbox","elementComputedStyle","targetBbox","jump","unitConversion","hasPositionalKey","targetPositionalKeys","removedTransformValues","hasAttemptedToRemoveTransformValues","changedValueTypeKeys","toType","fromType","numKeyframes","fromIndex","scrollY","pageYOffset","convertedTarget","scrollTo","checkAndConvertChangedValueTypes","parseDomVariant","resolveCSSVariables","prefersReducedMotion","hasReducedMotionListener","visualElementStore","featureNames","numFeatures","propEventHandlers","numVariantProps","VisualElement","valueSubscriptions","prevMotionValues","propEventSubscriptions","notifyUpdate","triggerBuild","renderInstance","baseTarget","initialValues","initialMotionValues","_props","_prevProps","removeFromVariantTree","addVariantChild","bindToMotionValue","matchMedia","motionMediaQuery","setReducedMotionPreferences","addListener","initPrefersReducedMotion","valueIsTransform","removeOnChange","latestValue","removeOnRenderRequest","other","sortInstanceNodePosition","ProjectionNodeConstructor","renderedProps","FeatureConstructor","MeasureLayoutComponent","feature","build","measureInstanceViewportBox","canMutate","makeTargetAnimatableFromInstance","listener","nextValue","prevValue","existingValue","getStaticValue","removeValue","updateMotionValuesFromProps","handleChildMotionValue","getClosestVariantNode","startAtParent","closestVariantNode","removeValueFromRenderState","readValueFromInstance","valueFromInitial","getBaseTargetFromProps","DOMVisualElement","compareDocumentPosition","transitionOrigin","getOrigin","newValueKeys","numNewValues","targetValue","readValue","setBaseTarget","checkTargetForNewValues","HTMLVisualElement","defaultType","computedStyle","childSubscription","textContent","SVGVisualElement","getAttribute","createDomVisualElement","motion","baseConfig","createDomMotionConfig"],"sourceRoot":""}